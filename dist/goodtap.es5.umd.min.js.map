{"version":3,"file":"goodtap.es5.umd.min.js","sources":["../node_modules/goodcore/Calc.js","../node_modules/goodcore/struct/Vec2.js","../node_modules/goodcore/Global.js","../node_modules/goodcore/Test.js","../node_modules/goodcore/Obj.js","../node_modules/goodcore/Arr.js","../node_modules/goodcore/struct/List.js","../node_modules/goodcore/struct/SortedList.js","../node_modules/goodcore/struct/Dictionary.js","../node_modules/goodcore/Timer.js","../node_modules/goodcore/Util.js","../node_modules/goodcore/Dom.js","../node_modules/goodcore/MocData.js","lib/index.js"],"sourcesContent":["export class CalcConst {\n}\nCalcConst.ROTATION_DEGREE_PRECISION = 1;\nCalcConst.RADIAN_FACTOR = (1 / 360) * (2 * Math.PI);\nCalcConst.DEGREE_FACTOR = (1 / (2 * Math.PI) * 360);\nCalcConst.DEG360 = 360 * CalcConst.ROTATION_DEGREE_PRECISION;\nCalcConst.ROTATION_LOOKUP = (function () {\n    const lookup = [];\n    for (let i = 0; i < 360 * CalcConst.ROTATION_DEGREE_PRECISION; i++) {\n        lookup.push([Math.cos(i * CalcConst.RADIAN_FACTOR), Math.sin(i * CalcConst.RADIAN_FACTOR)]);\n    }\n    return lookup;\n})();\nexport function sign(x) {\n    return typeof x === \"number\" ? x ? x < 0 ? -1 : 1 : x === x ? 0 : NaN : NaN;\n}\nexport function rotationDeg(rotation) {\n    let deg = (rotation * CalcConst.ROTATION_DEGREE_PRECISION) | 0;\n    while (deg < 0) {\n        deg += CalcConst.DEG360;\n    }\n    while (deg >= CalcConst.DEG360) {\n        deg -= CalcConst.DEG360;\n    }\n    return CalcConst.ROTATION_LOOKUP[deg];\n}\nexport function rotationRad(rotation) {\n    const deg = rotation * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\n    return this.rotationDeg(deg / CalcConst.ROTATION_DEGREE_PRECISION);\n}\nexport function closestRadianRotation(radian) {\n    let deg = radian * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\n    while (deg < 0) {\n        deg += CalcConst.DEG360;\n    }\n    while (deg >= CalcConst.DEG360) {\n        deg -= CalcConst.DEG360;\n    }\n    return deg * CalcConst.RADIAN_FACTOR / CalcConst.ROTATION_DEGREE_PRECISION;\n}\n//# sourceMappingURL=Calc.js.map","import { rotationRad } from \"../Calc\";\nexport class Vec2Const {\n}\nVec2Const.EPSILON = 1e-8;\nVec2Const.IDENTITY = { x: 1, y: 1 };\nVec2Const.X_DIM = { x: 1, y: 0 };\nVec2Const.Y_DIM = { x: 0, y: 1 };\nexport class Vec2 {\n    constructor(x = 0, y = 0) {\n        this.angle = this.horizontalAngle;\n        this.direction = this.horizontalAngle;\n        this.x = x;\n        this.y = y;\n    }\n    get isZero() {\n        return this.x === 0 && this.y === 0;\n    }\n    create(x = 0, y = 0) {\n        return new (this.constructor)(x, y);\n    }\n    set(src) {\n        this.x = src.x;\n        this.y = src.y;\n        return this;\n    }\n    clone(out) {\n        const result = out ? out.set(this) : this.create(this.x, this.y);\n        return result;\n    }\n    toInt() {\n        this.x |= 0;\n        this.y |= 0;\n        return this;\n    }\n    ceil() {\n        this.x = Math.ceil(this.x);\n        this.y = Math.ceil(this.y);\n        return this;\n    }\n    toDecimal() {\n        this.x += Vec2Const.EPSILON;\n        this.y += Vec2Const.EPSILON;\n        return this;\n    }\n    lengthSq() { return (this.x * this.x + this.y * this.y); }\n    length() { return Math.sqrt(this.lengthSq()); }\n    horizontalAngle() { return Math.atan2(this.y, this.x); }\n    rotate(angle) {\n        const rot = rotationRad(angle);\n        const nx = (this.x * rot[0]) - (this.y * rot[1]);\n        const ny = (this.x * rot[1]) + (this.y * rot[0]);\n        this.x = nx;\n        this.y = ny;\n        return this;\n    }\n    rotateAround(center, angle) {\n        return this.subtract(center).rotate(angle).add(center);\n    }\n    normalize() {\n        const len = this.length();\n        if (len === 0) {\n            this.x = 1;\n            this.y = 0;\n        }\n        else {\n            this.x = this.x / len;\n            this.y = this.y / len;\n        }\n        return this;\n    }\n    scale(vectorB) {\n        this.x = this.x * vectorB.x;\n        this.y = this.y * vectorB.y;\n        return this;\n    }\n    relate(vectorB) {\n        this.x = this.x / vectorB.x;\n        this.y = this.y / vectorB.y;\n        return this;\n    }\n    multiply(scalar) {\n        this.x = this.x * scalar;\n        this.y = this.y * scalar;\n        return this;\n    }\n    add(vectorB) {\n        this.x = this.x + vectorB.x;\n        this.y = this.y + vectorB.y;\n        return this;\n    }\n    subtract(vectorB) {\n        this.x = this.x - vectorB.x;\n        this.y = this.y - vectorB.y;\n        return this;\n    }\n    invert() {\n        this.x = -this.x;\n        this.y = -this.y;\n        return this;\n    }\n    equals(target) {\n        return this.x === target.x && this.y === target.y;\n    }\n    almostEquals(target) {\n        return Math.abs(this.x - target.x) < Vec2Const.EPSILON && Math.abs(this.y - target.y) < Vec2Const.EPSILON;\n    }\n    getNormal(isNormalized) {\n        const result = this.clone();\n        if (!isNormalized) {\n            result.set(this).normalize();\n        }\n        const temp = result.x;\n        result.x = result.y;\n        result.y = -temp;\n        return result;\n    }\n    dot(vectorB) { return (this.x * vectorB.x + this.y * vectorB.y); }\n    cross(vectorB) { return ((this.x * vectorB.y) - (this.y * vectorB.x)); }\n    projectOnto(vectorB) {\n        const coeff = ((this.x * vectorB.x) + (this.y * vectorB.y)) / ((vectorB.x * vectorB.x) + (vectorB.y * vectorB.y));\n        this.x = coeff * vectorB.x;\n        this.y = coeff * vectorB.y;\n        return this;\n    }\n    verticalAngle() { return Math.atan2(this.x, this.y); }\n    rotateBy(rotation) {\n        const angle = -this.horizontalAngle() + rotation;\n        return this.rotate(angle);\n    }\n    max(v) {\n        this.x = Math.max(this.x, v.x);\n        this.y = Math.max(this.y, v.y);\n        return this;\n    }\n    min(v) {\n        this.x = Math.min(this.x, v.x);\n        this.y = Math.min(this.y, v.y);\n        return this;\n    }\n    zero() {\n        this.x = 0;\n        this.y = 0;\n        return this;\n    }\n}\n//# sourceMappingURL=Vec2.js.map","let nativeWindow = true;\nvar win;\nif (typeof (window) === \"undefined\") {\n    win = null;\n    nativeWindow = false;\n}\nelse {\n    win = window;\n}\nexport class _Global {\n    constructor() {\n        this._window = win;\n        this._nativeWindow = nativeWindow;\n    }\n    get window() {\n        return this._window;\n    }\n    set window(v) {\n        this._window = v;\n        if (this.hasNativeWindow) {\n            win = v;\n        }\n    }\n    get hasNativeWindow() {\n        return this._nativeWindow;\n    }\n}\nexport let Global = new _Global();\n//# sourceMappingURL=Global.js.map","import { Global } from \"./Global\";\nexport function hasWindow() {\n    return Global.window !== null;\n}\nexport function hasConsole() {\n    return this.hasWindow() && Global.window.console !== undefined || typeof (console) === \"function\";\n}\nexport function isArray(it) {\n    return Array.isArray ? Array.isArray(it) : Object.prototype.toString.call(it) === \"[object Array]\";\n}\nexport function isElement(target) {\n    return target !== undefined && target !== null && target.nodeType === 1 ? true : false;\n}\nexport function isFunction(it) {\n    return Object.prototype.toString.call(it) === \"[object Function]\";\n}\nexport function isNumber(x) {\n    return x === +x;\n}\nexport function isInt(x) {\n    return isNumber(x) && (x === (x | 0));\n}\nexport function isString(x) {\n    return isNotNullOrUndefined(x) && x.constructor === String;\n}\nexport function areNullOrUndefined(...args) {\n    const len = args.length;\n    let i = -1;\n    let a;\n    let result = false;\n    while (!result && ++i < len) {\n        a = args[i];\n        result = a === undefined || a === null;\n    }\n    return result;\n}\nexport function areNotNullOrUndefined(...args) {\n    return !areNullOrUndefined(...args);\n}\nexport function isNullOrUndefined(arg) {\n    return arg === undefined || arg === null;\n}\nexport function isNotNullOrUndefined(arg) {\n    return !isNullOrUndefined(arg);\n}\nexport function areUndefined(...args) {\n    const len = args.length;\n    let i = -1;\n    let a;\n    let result = false;\n    while (!result && ++i < len) {\n        a = args[i];\n        result = a === undefined;\n    }\n    return result;\n}\nexport function areNotUndefined(...args) {\n    return !areUndefined(...args);\n}\nexport function isUndefined(arg) {\n    return arg === undefined;\n}\nexport function isNotUndefined(arg) {\n    return !isUndefined(arg);\n}\n//# sourceMappingURL=Test.js.map","import { areNotNullOrUndefined, isArray, isFunction } from \"./Test\";\nexport function destroy(obj) {\n    if (obj.constructor.prototype.destroy !== undefined) {\n        obj.destroy();\n    }\n    else {\n        setNull(obj);\n    }\n}\nexport function wipe(obj) {\n    const keys = Object.keys(obj);\n    let i = -1;\n    const len = keys.length;\n    while (++i < len) {\n        delete obj[keys[i]];\n    }\n}\nexport function setNull(obj) {\n    if (obj.constructor.prototype.clear !== undefined) {\n        obj.clear();\n    }\n    else {\n        const keys = Object.keys(obj);\n        let key = null;\n        let i = -1;\n        const len = keys.length;\n        while (++i < len) {\n            key = keys[i];\n            obj[key] = null;\n        }\n    }\n}\nexport function isClassOf(a, b) {\n    return areNotNullOrUndefined(a, b) && a instanceof b.constructor;\n}\nexport function isSameClass(a, b) {\n    return areNotNullOrUndefined(a, b) && a.constructor === b.constructor;\n}\nexport function inherits(a, b) {\n    return isClassOf(a, b) && !isSameClass(a, b);\n}\nexport function equals(a, b) {\n    let result = a === b;\n    if (a !== b && (a instanceof Object) && isSameClass(a, b)) {\n        if (isArray(a)) {\n            const len = a.length;\n            let i = 0;\n            result = len === b.length;\n            if (result) {\n                for (; i < len; i += 1) {\n                    result = equals(a[i], b[i]);\n                    if (result === false) {\n                        break;\n                    }\n                }\n            }\n        }\n        else if (a.constructor.prototype.equals) {\n            result = a.equals(b);\n        }\n        else {\n            const keys = Object.keys(a);\n            let key = null;\n            result = true;\n            let i = -1;\n            const len = keys.length;\n            while (++i < len) {\n                key = keys[i];\n                result = equals(a[key], b[key]);\n                if (!result) {\n                    if (isFunction(a[key])) {\n                        result = true;\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return result;\n}\nexport function isDifferent(a, b) {\n    return !equals(a, b);\n}\nexport function shallowCopy(obj) {\n    const keys = Object.keys(obj);\n    const result = {};\n    let i = -1;\n    const len = keys.length;\n    while (++i < len) {\n        const key = keys[i];\n        result[key] = obj[key];\n    }\n    return result;\n}\nexport function clone(obj) {\n    let result;\n    if (!(obj instanceof Object)) {\n        result = obj;\n    }\n    else if (obj.constructor.prototype.clone !== undefined) {\n        result = obj.clone();\n    }\n    else if (isArray(obj)) {\n        let i = -1;\n        const len = obj.length;\n        result = new Array(len);\n        while (++i < len) {\n            result[i] = (clone(obj[i]));\n        }\n    }\n    else if (obj instanceof Date) {\n        return new Date(obj.getTime());\n    }\n    else if (obj instanceof RegExp) {\n        return new RegExp(obj);\n    }\n    else {\n        result = new obj.constructor();\n        const keys = Object.keys(obj);\n        let key = null;\n        let i = -1;\n        const len = keys.length;\n        while (++i < len) {\n            key = keys[i];\n            result[key] = clone(obj[key]);\n        }\n    }\n    return result;\n}\nexport function cloneInto(src, target) {\n    if (isArray(target)) {\n        const arrS = src;\n        const arrT = target;\n        const len = arrS.length;\n        arrT.length = len;\n        let i = -1;\n        while (++i < len) {\n            if (arrS[i] instanceof Object) {\n                cloneInto(arrS[i], arrT[i]);\n            }\n            else {\n                arrT[i] = arrS[i];\n            }\n        }\n    }\n    else {\n        const keys = Object.keys(src);\n        let key = null;\n        let i = -1;\n        const len = keys.length;\n        while (++i < len) {\n            key = keys[i];\n            const a = src[key];\n            if (a instanceof Object) {\n                let b = target[key];\n                if (b === undefined || b === null) {\n                    if (isArray(a)) {\n                        b = target[key] = [];\n                    }\n                    else {\n                        b = target[key] = {};\n                    }\n                }\n                if (isDifferent(a, b)) {\n                    cloneInto(a, b);\n                }\n            }\n            else {\n                target[key] = a;\n            }\n        }\n    }\n    return target;\n}\nexport function mixin(target = {}, exclude, ...sources) {\n    const result = target, len = sources ? sources.length : 0;\n    let i = 0;\n    for (; i < len; i++) {\n        let src = sources[i];\n        if (isFunction(src)) {\n            src = src.prototype;\n        }\n        if (src === undefined) {\n            continue;\n        }\n        const keys = Object.keys(src);\n        let key = null;\n        if (exclude) {\n            let i = -1;\n            const len = keys.length;\n            while (++i < len) {\n                key = keys[i];\n                if (exclude.hasOwnProperty(key)) {\n                    continue;\n                }\n                target[key] = src[key];\n            }\n        }\n        else {\n            let i = -1;\n            const len = keys.length;\n            while (++i < len) {\n                key = keys[i];\n                target[key] = src[key];\n            }\n        }\n    }\n    return result;\n}\nexport function setProperties(target, values, mapping) {\n    const keys = Object.keys(values);\n    let key;\n    let value;\n    let i = -1;\n    const len = keys.length;\n    while (++i < len) {\n        key = keys[i];\n        value = values[key];\n        if (mapping && key in mapping) {\n            key = mapping[key];\n        }\n        if (key in target) {\n            target[key] = values[keys[i]];\n        }\n    }\n}\n//# sourceMappingURL=Obj.js.map","import { clone, setProperties } from \"./Obj\";\nimport { isArray, isNullOrUndefined, isNumber, isUndefined, isNotUndefined } from \"./Test\";\nclass ArrayState {\n}\nexport function flatten(src) {\n    return flattenInner(src);\n}\nfunction flattenInner(src, result = []) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        if (isArray(src[i])) {\n            flattenInner(src[i], result);\n        }\n        else {\n            result.push(src[i]);\n        }\n    }\n    return result;\n}\nexport function reverse(array) {\n    let left = null;\n    let right = null;\n    const length = isNullOrUndefined(array) ? 0 : array.length;\n    for (left = 0; left < length / 2; left += 1) {\n        right = length - 1 - left;\n        const temporary = array[left];\n        array[left] = array[right];\n        array[right] = temporary;\n    }\n    return array;\n}\nexport function concat(...arrs) {\n    const result = Array.prototype.concat.apply([], arrs);\n    return result;\n}\nexport function slice(src, from = 0, count = Infinity) {\n    let len = Math.min(isNullOrUndefined(src) ? 0 : src.length - from, count);\n    if (len < 0) {\n        len = 0;\n    }\n    let i = -1;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = src[i + from];\n    }\n    return result;\n}\nexport function splice(src, pos = 0, remove = Infinity, insert = []) {\n    if (isNullOrUndefined(src)) {\n        throw new Error(\"Unable to splice on null or undefined\");\n    }\n    let srcLen = src.length;\n    pos = Math.max(0, pos);\n    pos = Math.min(pos, srcLen);\n    remove = Math.max(0, remove);\n    remove = Math.min(remove, srcLen - pos);\n    let insertLen = insert.length;\n    let newLen = srcLen - remove + insertLen;\n    let delta = remove - insertLen;\n    if (delta < 0) {\n        src.length = newLen;\n        let i = newLen;\n        while (--i >= pos + remove) {\n            src[i] = src[i + delta];\n        }\n    }\n    let i = pos - 1;\n    while (++i < pos + insertLen) {\n        src[i] = insert[i - pos];\n    }\n    if (delta > 0) {\n        --i;\n        while (++i < srcLen - delta) {\n            src[i] = src[i + delta];\n        }\n        src.length = newLen;\n    }\n}\nexport function append(arr, values) {\n    let index = -1;\n    const offset = arr.length;\n    const length = isNullOrUndefined(values) ? 0 : values.length;\n    while (++index < length) {\n        arr[offset + index] = values[index];\n    }\n}\nexport function removeAt(arr, index) {\n    let result;\n    let len = isNullOrUndefined(arr) ? 0 : arr.length;\n    if (index >= 0 && index < len) {\n        let i = index;\n        result = arr[index];\n        while (++i < len) {\n            arr[i - 1] = arr[i];\n        }\n        arr.length -= 1;\n    }\n    return result;\n}\nexport function indexOfElement(src, el) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        if (src[i] === el) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(arr, el) {\n    const start = indexOfElement(arr, el);\n    removeAt(arr, start);\n}\nexport function indexOf(src, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        if (fn(src[i])) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function removeOneByFn(arr, fn) {\n    const start = indexOf(arr, fn);\n    removeAt(arr, start);\n}\nexport function shallowCopy(src) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = src[i];\n    }\n    return result;\n}\nexport function shallowCopyInto(src, target) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    target.length = len;\n    while (++i < len) {\n        target[i] = src[i];\n    }\n}\nexport function shallowFill(src, target, at = 0) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    if (target.length < len + at) {\n        target.length = len + at;\n    }\n    while (++i < len) {\n        target[at + i] = src[i];\n    }\n}\nexport function deepCopy(src) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = (clone(src[i]));\n    }\n    return result;\n}\nexport function deepCopyInto(src, target) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    target.length = len;\n    while (++i < len) {\n        target[i] = (clone(src[i]));\n    }\n}\nexport function deepFill(src, target, at = 0) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    if (target.length < len + at) {\n        target.length = len + at;\n    }\n    while (++i < len) {\n        target[at + i] = (clone(src[i]));\n    }\n}\nexport function filter(src, fn) {\n    const result = [];\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        const el = src[i];\n        if (fn(el, i) === true) {\n            result.push(el);\n        }\n    }\n    return result;\n}\nexport function filterInto(src, target, fn) {\n    let i = -1;\n    let j = 0;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const space = target.length;\n    while (++i < len) {\n        const el = src[i];\n        if (fn(el, i) === true) {\n            if (j < space) {\n                target[j++] = el;\n            }\n            else {\n                ++j;\n                target.push(el);\n            }\n        }\n    }\n    target.length = j;\n}\nexport function map(src, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = fn(src[i], i);\n    }\n    return result;\n}\nexport function mapInto(src, target, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    target.length = len;\n    while (++i < len) {\n        target[i] = fn(src[i], i);\n    }\n}\nexport function reduce(src, fn, start) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (++i < len) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function reduceUntil(src, fn, test, start) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (++i < len && !test(acc, src[i])) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function reverseReduce(src, fn, start) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (--i >= 0) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function reverseReduceUntil(src, fn, test, start) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (--i >= 0 && !test(acc, src[i])) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function forEach(src, fn, startIndex = 0) {\n    let i = startIndex - 1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        fn(src[i], i);\n    }\n}\nexport function forSome(src, filter, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        const el = src[i];\n        if (filter(el, i)) {\n            fn(el, i);\n        }\n    }\n}\nexport function until(src, fnOrTest, fn, startIndex) {\n    let isCombined = isUndefined(fn) || isNumber(fn);\n    startIndex = isCombined ? fn : startIndex;\n    let i = isUndefined(startIndex) || startIndex < 0 ? -1 : startIndex - 1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len && (isCombined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\n    }\n}\nexport function reverseForEach(src, fn) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    while (--i >= 0) {\n        fn(src[i], i);\n    }\n}\nexport function reverseUntil(src, fnOrTest, fn) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    let combined = isUndefined(fn);\n    while (--i >= 0 && (combined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\n    }\n}\nexport function some(src, fn) {\n    let result = false;\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len && !(result = fn(src[i]))) {\n    }\n    return result;\n}\nexport function all(src, fn) {\n    let result = true;\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len && (result = fn(src[i]))) {\n    }\n    return result;\n}\nexport function insertAt(src, pos, v) {\n    if (isNullOrUndefined(src)) {\n        throw new Error(\"Unable to insertAt on null or undefined\");\n    }\n    if (pos === 0) {\n        src.unshift(v);\n    }\n    else if (pos > 0) {\n        let i = src.length;\n        while (--i >= pos) {\n            src[i + 1] = src[i];\n        }\n        src[i + 1] = v;\n    }\n}\nexport function binarySearch(src, cmp, closest = false) {\n    let lo = 0, hi = isNullOrUndefined(src) ? -1 : src.length - 1, mid, element;\n    while (lo <= hi) {\n        mid = ((lo + hi) >> 1);\n        element = src[mid];\n        let val = cmp(element);\n        if (val < 0) {\n            lo = mid + 1;\n        }\n        else if (val > 0) {\n            hi = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return closest ? lo : -1;\n}\nexport function create(length, populator) {\n    if ((length || -1) < 0) {\n        length = 0;\n    }\n    let arr = new Array(length);\n    let i = -1;\n    while (++i < length) {\n        arr[i] = populator(i, arr);\n    }\n    return arr;\n}\nexport function deserialize(array, target, ...types) {\n    let [T, ...passthroughT] = types;\n    if (isNotUndefined(T)) {\n        if (isNotUndefined(T.prototype.deserialize)) {\n            mapInto(array, target, (el) => {\n                return (new T()).deserialize(el, ...passthroughT);\n            });\n        }\n        else {\n            mapInto(array, target, (el) => {\n                let newT = new T();\n                setProperties(newT, el);\n                return newT;\n            });\n        }\n    }\n    else {\n        deepCopyInto(array, target);\n    }\n    return this;\n}\n//# sourceMappingURL=Arr.js.map","import { shallowCopy, create, insertAt, concat, forEach, append, deepCopy, deepCopyInto, shallowCopyInto, remove, removeAt, forSome, until, reverseForEach, indexOfElement, map, reverseUntil, some, all, reverse, indexOf, filterInto, slice, splice, filter, mapInto, reduce, reduceUntil, reverseReduce, reverseReduceUntil, deserialize } from \"../Arr\";\nimport { clone, equals, wipe } from \"../Obj\";\nimport { isArray, isFunction, isNotNullOrUndefined, hasWindow } from \"../Test\";\nif (hasWindow() && !window.Symbol) {\n    window.Symbol = { iterator: \"iterator\" };\n}\nexport class List {\n    constructor(arr) {\n        this._array = [];\n        this._index = Object.create(null);\n        this._indexer = null;\n        this._pointer = 0;\n        if (arr === undefined) {\n            this._array = new Array();\n        }\n        else {\n            if (arr instanceof (List)) {\n                this._array = shallowCopy(arr._array);\n            }\n            else {\n                this._array = shallowCopy(arr);\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    next(value) {\n        return {\n            done: this._pointer >= this.length,\n            value: this._pointer < this.length ? this._array[this._pointer++] : (this._pointer = 0, undefined)\n        };\n    }\n    create(arr) {\n        return new (this.constructor)(arr);\n    }\n    get values() {\n        return this._array;\n    }\n    get(pos) {\n        return this._array[pos];\n    }\n    getByIndex(key) {\n        let result;\n        return isNotNullOrUndefined(this._index) ? this._index[key] : undefined;\n    }\n    set(pos, v) {\n        if (pos >= 0 && pos < this.length) {\n            this._array[pos | 0] = v;\n            if (this._indexer !== null) {\n                this._index[this._indexer(v)] = v;\n            }\n        }\n        else {\n            throw new Error(`index out of bounds on <List>.set(${pos}, ${v.toString()})`);\n        }\n        return this;\n    }\n    get count() {\n        return this._array.length;\n    }\n    get length() {\n        return this._array.length;\n    }\n    get indexer() {\n        return this._indexer;\n    }\n    set indexer(fn) {\n        this._indexer = fn;\n        this._reindex();\n    }\n    _reindex() {\n        if (this._indexer === null) {\n            this._index = null;\n        }\n        else {\n            if (this._index === null) {\n                this._index = Object.create(null);\n            }\n            else {\n                wipe(this._index);\n            }\n            this.forEach((el) => this._index[this._indexer(el)] = el);\n        }\n    }\n    truncate(size = 0) {\n        if (size < 0) {\n            let arr = this._array;\n            let len = arr.length;\n            size = Math.min(len, -1 * size);\n            let i = len - size - 1;\n            let j = -1;\n            while (++i < len) {\n                arr[++j] = arr[i];\n            }\n        }\n        this._array.length = Math.max(0, Math.min(this._array.length, size));\n        this._reindex();\n        return this;\n    }\n    fill(size, populator) {\n        size = Math.max(0, size || 0);\n        if (isFunction(populator)) {\n            this._array = create(size, populator);\n        }\n        else if (!(populator instanceof Object)) {\n            this._array = create(size, () => populator);\n        }\n        else {\n            this._array = create(size, () => clone(populator));\n        }\n        this._reindex();\n        return this;\n    }\n    clear() {\n        this._array.length = 0;\n        if (this._index !== null) {\n            wipe(this._index);\n        }\n        return this;\n    }\n    add(v) {\n        this._array.push(v);\n        if (this._indexer !== null) {\n            this._index[this._indexer(v)] = v;\n        }\n        return this;\n    }\n    insertAt(pos, v) {\n        insertAt(this._array, pos, v);\n        if (this._indexer !== null) {\n            this._index[this._indexer(v)] = v;\n        }\n        return this;\n    }\n    push(v) {\n        if (this._indexer !== null) {\n            this._index[this._indexer(v)] = v;\n        }\n        return this._array.push(v);\n    }\n    pop() {\n        let result = this._array.pop();\n        if (result !== undefined && this._indexer !== null) {\n            delete this._index[this._indexer(result)];\n        }\n        return result;\n    }\n    shift() {\n        let result = this._array.shift();\n        if (result !== undefined && this._indexer !== null) {\n            delete this._index[this._indexer(result)];\n        }\n        return result;\n    }\n    concat(v) {\n        let arr;\n        let arr2 = v instanceof List ? v.values : v;\n        arr = concat(this._array, arr2);\n        return this.create(arr);\n    }\n    index(arr) {\n        if (this._indexer !== null) {\n            forEach(arr, (el) => {\n                this._index[this._indexer(el)] = el;\n            });\n        }\n    }\n    unindexEl(el) {\n        if (this._indexer !== null) {\n            delete this._index[this._indexer(el)];\n        }\n    }\n    append(v) {\n        let arr2 = v instanceof List ? v.values : v;\n        append(this._array, arr2);\n        this.index(arr2);\n        return this;\n    }\n    copy(src) {\n        let arr2 = src instanceof List ? src.values : src;\n        deepCopyInto(arr2, this._array);\n        this.index(arr2);\n        return this;\n    }\n    shallowCopy(src) {\n        let arr2 = src instanceof List ? src.values : src;\n        shallowCopyInto(arr2, this._array);\n        this.index(arr2);\n        return this;\n    }\n    clone() {\n        const arr = deepCopy(this._array);\n        let result = this.create(arr);\n        if (this._indexer !== null) {\n            result._indexer = this._indexer;\n            result._index = clone(this._index);\n        }\n        return result;\n    }\n    remove(v) {\n        remove(this._array, v);\n        this.unindexEl(v);\n        return this;\n    }\n    removeFirst(fn) {\n        let result = this.removeAt(this.indexOf(fn));\n        this.unindexEl(result);\n        return result;\n    }\n    removeAt(n) {\n        let result = removeAt(this._array, n);\n        this.unindexEl(result);\n        return result;\n    }\n    forEach(fn, startIndex = 0) {\n        forEach(this._array, fn, startIndex);\n        return this;\n    }\n    forSome(filter, fn) {\n        forSome(this._array, filter, fn);\n        return this;\n    }\n    until(fnOrTest, fn, startIndex) {\n        until(this._array, fnOrTest, fn, startIndex);\n        return this;\n    }\n    reverseForEach(fn) {\n        reverseForEach(this._array, fn);\n        return this;\n    }\n    reverseUntil(fnOrTest, fn) {\n        reverseUntil(this._array, fnOrTest, fn);\n        return this;\n    }\n    some(fn) {\n        return some(this._array, fn);\n    }\n    all(fn) {\n        return all(this._array, fn);\n    }\n    indexOf(v) {\n        let result = -1;\n        if (isFunction(v)) {\n            result = indexOf(this._array, v);\n        }\n        else {\n            result = indexOfElement(this._array, v);\n        }\n        return result;\n    }\n    contains(v) {\n        let result = false;\n        if (isFunction(v)) {\n            result = this.find(v) !== undefined;\n        }\n        else {\n            if (this._indexer !== null) {\n                result = this._index[this._indexer(v)] !== undefined;\n            }\n            else {\n                result = indexOfElement(this._array, v) !== -1;\n            }\n        }\n        return result;\n    }\n    reverse() {\n        reverse(this._array);\n        return this;\n    }\n    first(fn) {\n        let index = -1;\n        let result;\n        if (fn === undefined) {\n            index = 0;\n        }\n        else {\n            index = indexOf(this._array, fn);\n        }\n        return index === -1 ? undefined : this.get(index);\n    }\n    find(fn) {\n        return this.first(fn);\n    }\n    last() {\n        return this.length === 0 ? undefined : this.get(this.length - 1);\n    }\n    filter(fn) {\n        return this.create(filter(this._array, fn));\n    }\n    select(fn) {\n        return this.create(filter(this._array, fn));\n    }\n    selectInto(src, fn) {\n        let arr = src instanceof List ? src.values : src;\n        filterInto(arr, this._array, fn);\n        this.index(arr);\n        return this;\n    }\n    head(count = 1) {\n        count = Math.max(0, count);\n        return this.create(slice(this._array, 0, count));\n    }\n    tail(count = 1) {\n        count = Math.min(this._array.length, count);\n        return this.create(slice(this._array, Math.max(0, this._array.length - count)));\n    }\n    splice(pos = 0, remove = Infinity, insert = []) {\n        splice(this._array, pos, remove, isArray(insert) ? insert : insert.values);\n        this._reindex();\n        return this;\n    }\n    orderBy(fn) {\n        this._array.sort(fn);\n        return this;\n    }\n    map(fn) {\n        return this.create(map(this._array, fn));\n    }\n    mapInto(src, fn) {\n        let arr = src instanceof List ? src.values : src;\n        mapInto(arr, this._array, fn);\n        this._reindex();\n        return this;\n    }\n    reduce(fn, start) {\n        return reduce(this._array, fn, start);\n    }\n    reduceUntil(fn, test, start) {\n        return reduceUntil(this._array, fn, test, start);\n    }\n    reverseReduce(fn, start) {\n        return reverseReduce(this._array, fn, start);\n    }\n    reverseReduceUntil(fn, test, start) {\n        return reverseReduceUntil(this._array, fn, test, start);\n    }\n    equals(b) {\n        const result = equals(this._array, b.values);\n        return result;\n    }\n    same(b) {\n        let a = this;\n        let count = 0;\n        if (a.length === b.length) {\n            if (a.indexer !== null) {\n                b.until((el) => !a.contains(el), (el, i) => ++count);\n            }\n            else {\n                a.until((el) => !b.contains(el), (el, i) => ++count);\n            }\n        }\n        return count === a.length;\n    }\n    intersect(b) {\n        let result = this.create();\n        let long;\n        let short;\n        result.indexer = this.indexer;\n        if (this.length < b.length) {\n            short = this, long = b;\n        }\n        else {\n            long = this, short = b;\n        }\n        if (long.indexer !== null) {\n            short.forEach((el) => {\n                if (long.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        else {\n            long.forEach((el) => {\n                if (short.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        return result;\n    }\n    union(b) {\n        let result = this.create();\n        let long;\n        let short;\n        result.indexer = this.indexer;\n        if (this.length < b.length) {\n            short = this, long = b;\n        }\n        else {\n            long = this, short = b;\n        }\n        if (long.indexer !== null) {\n            result = long.clone();\n            short.forEach((el) => {\n                if (!long.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        else {\n            result = short.clone();\n            long.forEach((el) => {\n                if (!short.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        return result;\n    }\n    subtract(b) {\n        let result = this.create();\n        result.indexer = this.indexer;\n        result = this.select((el) => !b.contains(el));\n        return result;\n    }\n    zip(list, fn = (t, u) => [t, u]) {\n        let result = this.create();\n        let length = list.length;\n        this.until(function (el, i) {\n            return i >= length;\n        }, function (el, i) {\n            result.push(fn(el, list.get(i)));\n        });\n        return result;\n    }\n    unzip(fn = (el) => [el[0], el[1]]) {\n        let result = [this.create(), this.create()];\n        this.forEach(function (el) {\n            let tuple = fn(el);\n            result[0].push(tuple[0]);\n            result[1].push(tuple[1]);\n        });\n        return result;\n    }\n    flatten(maxDepth = Infinity) {\n        return this.create(maxDepth < 1 ? this.values : this._flattenInner(this.values, maxDepth));\n    }\n    _flattenInner(src, maxDepth, depth = -1, result = []) {\n        let i = -1;\n        const len = src.length;\n        if (++depth > maxDepth) {\n            result.push(src);\n        }\n        else {\n            while (++i < len) {\n                if (isArray(src[i])) {\n                    this._flattenInner(src[i], maxDepth, depth, result);\n                }\n                else if (src[i] instanceof List) {\n                    this._flattenInner(src[i].values, maxDepth, depth, result);\n                }\n                else {\n                    result.push(src[i]);\n                }\n            }\n        }\n        return result;\n    }\n    toJSON() {\n        return this.values;\n    }\n    serialize() {\n        return this.values.map((el) => isFunction(el.serialize) ? el.serialize() : el);\n    }\n    deserialize(array, ...types) {\n        deserialize(array, this._array, ...types);\n        return this;\n    }\n}\n//# sourceMappingURL=List.js.map","import { binarySearch } from \"../Arr\";\nimport { equals } from \"../Obj\";\nimport { isFunction, hasWindow } from \"../Test\";\nimport { List } from \"./List\";\nif (hasWindow() && !window.Symbol) {\n    window.Symbol = { iterator: \"iterator\" };\n}\nexport class Comparer {\n}\nComparer.StringAsc = function (a, b) { return a < b ? -1 : a === b ? 0 : 1; };\nComparer.StringDesc = function (a, b) { return a < b ? 1 : a === b ? 0 : -1; };\nComparer.NumberAsc = function (a, b) { return a < b ? -1 : a === b ? 0 : 1; };\nComparer.NumberDesc = function (a, b) { return a < b ? 1 : a === b ? 0 : -1; };\nexport class SortedList {\n    constructor(comparer = ((a, b) => a < b ? -1 : a === b ? 0 : 1), arr) {\n        this._list = new List();\n        this._pointer = 0;\n        this._cmp = comparer;\n        if (arr === undefined) {\n            this._list = new List();\n        }\n        else {\n            if (arr instanceof (List) || arr instanceof (SortedList)) {\n                this.copy(arr.values);\n            }\n            else {\n                this.copy(arr);\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    next(value) {\n        return {\n            done: this._pointer >= this.length,\n            value: this._pointer < this.length ? this.values[this._pointer++] : (this._pointer = 0, undefined)\n        };\n    }\n    create(comparer, arr) {\n        return new (this.constructor)(comparer, arr);\n    }\n    get values() {\n        return this._list.values;\n    }\n    get(pos) {\n        return this._list.get(pos);\n    }\n    get count() {\n        return this._list.length;\n    }\n    get length() {\n        return this._list.length;\n    }\n    get comparer() {\n        return this._cmp;\n    }\n    set comparer(v) {\n        this._cmp = v;\n        this.sort();\n    }\n    sort() {\n        this._list.orderBy(this._cmp);\n    }\n    truncate(size = 0) {\n        this._list.truncate(size);\n        return this;\n    }\n    fill(size, populator) {\n        this._list.fill(size, populator);\n        this.sort();\n        return this;\n    }\n    clear() {\n        this._list.clear();\n        return this;\n    }\n    add(v) {\n        let index = this.getInsertIndex(v);\n        this._list.insertAt(index, v);\n        return this;\n    }\n    pop() {\n        return this._list.pop();\n    }\n    shift() {\n        return this._list.shift();\n    }\n    bulkAdd(v) {\n        if (v instanceof List || v instanceof SortedList) {\n            this._list.append(v.values);\n        }\n        else {\n            this._list.append(v);\n        }\n        this.sort();\n        return this;\n    }\n    copy(src) {\n        if (src instanceof List || src instanceof SortedList) {\n            this._list.copy(src.values);\n        }\n        else {\n            this._list.copy(src);\n        }\n        this.sort();\n        return this;\n    }\n    clone() {\n        return this.create(this._cmp, this._list.clone());\n    }\n    remove(v) {\n        let index = this.indexOf(v);\n        if (index !== -1) {\n            this._list.removeAt(index);\n        }\n        return this;\n    }\n    removeAt(n) {\n        return this._list.removeAt(n);\n    }\n    removeFirst(fn) {\n        return this._list.removeFirst(fn);\n    }\n    forEach(fn, startIndex = 0) {\n        this._list.forEach(fn, startIndex);\n        return this;\n    }\n    forSome(filter, fn) {\n        this._list.forSome(filter, fn);\n        return this;\n    }\n    until(fnOrTest, fn, startIndex) {\n        this._list.until(fnOrTest, fn, startIndex);\n        return this;\n    }\n    reverseForEach(fn) {\n        this._list.reverseForEach(fn);\n        return this;\n    }\n    reverseUntil(fnOrTest, fn) {\n        this._list.reverseUntil(fnOrTest, fn);\n        return this;\n    }\n    some(fn) {\n        return this._list.some(fn);\n    }\n    all(fn) {\n        return this._list.all(fn);\n    }\n    getInsertIndex(v) {\n        return binarySearch(this._list.values, (el) => this._cmp(el, v), true);\n    }\n    indexOf(v) {\n        let result = -1;\n        if (v instanceof Function) {\n            result = this._list.indexOf(v);\n        }\n        else {\n            result = binarySearch(this._list.values, (el) => this._cmp(el, v), false);\n        }\n        return result;\n    }\n    contains(v) {\n        return this.indexOf(v) !== -1;\n    }\n    first(fn) {\n        return this._list.first(fn);\n    }\n    find(fn) {\n        return this._list.find(fn);\n    }\n    last() {\n        return this._list.last();\n    }\n    filter(fn) {\n        return this.create(this._cmp, this._list.filter(fn));\n    }\n    select(fn) {\n        return this.create(this._cmp, this._list.filter(fn));\n    }\n    selectInto(src, fn) {\n        if (src instanceof List || src instanceof SortedList) {\n            this._list.selectInto(src.values, fn);\n        }\n        else {\n            this._list.selectInto(src, fn);\n        }\n        this.sort();\n        return this;\n    }\n    head(count = 1) {\n        return this.create(this.comparer, this._list.head(count));\n    }\n    tail(count = 1) {\n        return this.create(this.comparer, this._list.tail(count));\n    }\n    map(fn) {\n        return this._list.map(fn);\n    }\n    mapInto(src, fn) {\n        if (src instanceof List || src instanceof SortedList) {\n            this._list.mapInto(src.values, fn);\n        }\n        else {\n            this._list.mapInto(src, fn);\n        }\n        this.sort();\n        return this;\n    }\n    reduce(fn, start) {\n        return this._list.reduce(fn, start);\n    }\n    reduceUntil(fn, test, start) {\n        return this._list.reduceUntil(fn, test, start);\n    }\n    reverseReduce(fn, start) {\n        return this._list.reverseReduce(fn, start);\n    }\n    reverseReduceUntil(fn, test, start) {\n        return this._list.reverseReduceUntil(fn, test, start);\n    }\n    equals(b) {\n        const result = equals(this._list.values, b.values);\n        return result;\n    }\n    same(b) {\n        return this.equals(b);\n    }\n    intersect(b) {\n        let result = this.create(this.comparer);\n        let long;\n        let short;\n        if (this.length > 0 && b.length > 0) {\n            if (this.length < b.length) {\n                short = this, long = b;\n            }\n            else {\n                long = this, short = b;\n            }\n            if (b instanceof SortedList && this.comparer === b.comparer) {\n                let longPos = long.getInsertIndex(short.get(0)) - 1;\n                let lastPos = long.getInsertIndex(short.last()) - 1;\n                let i = -1;\n                let shortLen = short.length;\n                while (longPos < lastPos && ++i < shortLen) {\n                    let el = short.get(i);\n                    let aVsB;\n                    while (++longPos < lastPos && (aVsB = this.comparer(long.get(longPos), el)) < 0) {\n                        void (0);\n                    }\n                    if (longPos < lastPos && aVsB === 0) {\n                        result.add(el);\n                    }\n                }\n            }\n            else if (long instanceof SortedList || (long instanceof List && long.indexer !== null)) {\n                short.forEach((el) => {\n                    if (long.contains(el)) {\n                        result.add(el);\n                    }\n                });\n            }\n            else {\n                result = result.bulkAdd(short.toList().intersect(long));\n            }\n        }\n        return result;\n    }\n    union(b) {\n        let result;\n        let long;\n        let short;\n        if (this.length > 0 || b.length > 0) {\n            if (this.length < b.length) {\n                short = this, long = b;\n            }\n            else {\n                long = this, short = b;\n            }\n            if (b instanceof SortedList && this.comparer === b.comparer) {\n                result = this.create(this.comparer, long.values);\n                let longPos = long.getInsertIndex(short.get(0)) - 1;\n                let lastPos = long.getInsertIndex(short.last()) - 1;\n                let i = -1;\n                let shortLen = short.length;\n                while (++i < shortLen && longPos < lastPos) {\n                    let el = short.get(i);\n                    let aVsB = -1;\n                    while (++longPos < lastPos && (aVsB = this.comparer(long.get(longPos), el)) < 0) {\n                        void (0);\n                    }\n                    if ((aVsB > 0 && longPos < lastPos) || longPos === lastPos) {\n                        result.add(el);\n                    }\n                }\n                if (i < shortLen) {\n                    --i;\n                    while (++i < shortLen) {\n                        result.add(short.get(i));\n                    }\n                }\n            }\n            else if (long instanceof SortedList || (long instanceof List && long.indexer !== null)) {\n                result = this.create(this.comparer, long.values);\n                short.forEach((el) => {\n                    if (!long.contains(el)) {\n                        result.add(el);\n                    }\n                });\n            }\n            else {\n                result = this.create(this.comparer, short.toList().union(long));\n            }\n        }\n        else {\n            result = this.create(this.comparer);\n        }\n        return result;\n    }\n    toList() {\n        return new List(this.values);\n    }\n    toJSON() {\n        return this.values;\n    }\n    serialize() {\n        return this.values.map((el) => isFunction(el.serialize) ? el.serialize() : el);\n    }\n    deserialize(array, ...types) {\n        this._list.deserialize(array, ...types);\n        this.sort();\n        return this;\n    }\n}\n//# sourceMappingURL=SortedList.js.map","import { forEach } from \"../Arr\";\nimport { clone, setProperties, wipe } from \"../Obj\";\nimport { isFunction, isNotUndefined } from \"../Test\";\nexport class Dictionary {\n    constructor() {\n        this._lookup = Object.create(null);\n        this._list = new Array();\n        this._isDirty = false;\n    }\n    create() {\n        return new (this.constructor)();\n    }\n    has(key) {\n        return this._lookup[key] !== undefined;\n    }\n    contains(key) {\n        return this.has(key);\n    }\n    get(key) {\n        return this._lookup[key];\n    }\n    set(key, value) {\n        this._isDirty = this._isDirty || this.has(key);\n        if (value !== undefined) {\n            this._lookup[key] = value;\n            if (!this._isDirty) {\n                this._list.push(value);\n            }\n        }\n        return this;\n    }\n    delete(key) {\n        if (this.has(key)) {\n            delete this._lookup[key];\n            this._isDirty = true;\n        }\n        return this;\n    }\n    clear() {\n        wipe(this._lookup);\n        this._list.length = 0;\n        return this;\n    }\n    get values() {\n        this.cleanList();\n        return this._list;\n    }\n    get keys() {\n        return Object.keys(this._lookup);\n    }\n    get count() {\n        let result = 0;\n        if (this._isDirty) {\n            result = this.keys.length;\n        }\n        else {\n            result = this._list.length;\n        }\n        return result;\n    }\n    cleanList() {\n        if (this._isDirty) {\n            this.reCreateList();\n        }\n    }\n    reCreateList() {\n        let lookup = this._lookup;\n        let keys = Object.keys(this._lookup);\n        let i = -1;\n        let list = this._list;\n        list.length = 0;\n        while (++i < keys.length) {\n            list.push(lookup[keys[i]]);\n        }\n    }\n    clone() {\n        let result = this.create();\n        result._isDirty = this._isDirty;\n        result._list = clone(this._list);\n        result._lookup = clone(this._lookup);\n        return result;\n    }\n    toJSON() {\n        return this._lookup;\n    }\n    serialize() {\n        let obj = Object.create(null);\n        forEach(this.keys, (key) => {\n            let v = this.get(key);\n            obj[key] = isFunction(v.serialize) ? v.serialize() : v;\n        });\n        return obj;\n    }\n    deserialize(obj, ...types) {\n        let [T, ...passthroughT] = types;\n        this.clear();\n        if (isNotUndefined(T)) {\n            if (isNotUndefined(T.prototype.deserialize)) {\n                for (let key of Object.keys(obj)) {\n                    this.set(key, (new T()).deserialize(obj[key], ...passthroughT));\n                }\n            }\n            else {\n                for (let key of Object.keys(obj)) {\n                    let newT = new T();\n                    setProperties(newT, obj[key]);\n                    this.set(key, newT);\n                }\n            }\n        }\n        else {\n            for (let key of Object.keys(obj)) {\n                this.set(key, obj[key]);\n            }\n        }\n        return this;\n    }\n}\n//# sourceMappingURL=Dictionary.js.map","class TimerState {\n}\nTimerState._hasPerformance = typeof (performance) !== \"undefined\";\nexport class Timer {\n    static get time() {\n        return TimerState._time;\n    }\n    static now() {\n        if (TimerState._hasPerformance) {\n            return performance.now();\n        }\n        else {\n            const hrTime = process.hrtime();\n            return hrTime[0] * 1000 + (hrTime[1] / 1e6);\n        }\n    }\n    static start() {\n        const now = Timer.now();\n        TimerState._start = TimerState._last = now;\n        return TimerState._time = 0;\n    }\n    static stop() {\n        const start = TimerState._start;\n        const now = Timer.now();\n        TimerState._last = now;\n        return TimerState._time = now - start;\n    }\n}\n//# sourceMappingURL=Timer.js.map","import { Global } from \"./Global\";\nimport { hasConsole, hasWindow, isNotUndefined } from \"./Test\";\nimport { Timer } from \"./Timer\";\nclass LoggableCounter {\n    constructor(name = \"\") {\n        this.name = \"\";\n        this._value = 0;\n        this.name = name;\n    }\n    log() {\n        console.log(\"Counter \" + this.name + \": \" + this.toString());\n    }\n    inc() {\n        this._value++;\n        return this;\n    }\n    reset() {\n        this._value = 0;\n        return this;\n    }\n    valueOf() {\n        return this._value;\n    }\n    toString() {\n        return this._value.toString();\n    }\n}\nclass UtilState {\n}\nUtilState._int = { \"0\": 0 };\nUtilState._counter = { \"\": new LoggableCounter(\"\") };\nexport function init(win) {\n    if (win !== undefined) {\n        Global.window = win;\n    }\n}\nexport function getFunctionName(fn) {\n    let result;\n    if (fn.hasOwnProperty(\"name\") !== undefined) {\n        result = fn.name;\n    }\n    else {\n        const fnString = fn.toString();\n        result = fnString.substring(9, fnString.indexOf(\"(\"));\n    }\n    return result;\n}\nexport function getFunctionCode(fn) {\n    let result;\n    const fnString = fn.toString();\n    result = fnString.substring(fnString.indexOf(\"{\") + 1, fnString.lastIndexOf(\"}\"));\n    return result;\n}\nexport function newUUID() {\n    let d = new Date().getTime();\n    d += Timer.now();\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n        const r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n}\nexport function newInt(key = 0) {\n    if (UtilState._int[key] === undefined) {\n        UtilState._int[key] = 0;\n    }\n    return UtilState._int[key]++;\n}\nexport function counter(key = \"\") {\n    if (UtilState._counter[key] === undefined) {\n        UtilState._counter[key] = new LoggableCounter(key.toString());\n    }\n    return UtilState._counter[key];\n}\nexport function count(key = \"\") {\n    return counter(key).inc();\n}\nexport function callDebugger() {\n    debugger;\n}\nexport function pipeOut(log, warn, error) {\n    if (hasConsole()) {\n        proxyFn(console, \"log\", function (superfn, ...args) { superfn(...args); log(...args); });\n        proxyFn(console, \"warn\", function (superfn, ...args) { superfn(...args); warn(...args); });\n        proxyFn(console, \"error\", function (superfn, ...args) { superfn(...args); error(...args); });\n    }\n    else {\n        const console = {\n            log,\n            warn,\n            error\n        };\n        if (!(hasWindow())) {\n            Global.window = {};\n        }\n        Global.window.console = console;\n    }\n}\nexport function assert(assertion, message, isDebug = true) {\n    let result = true;\n    if (!assertion) {\n        if (hasConsole) {\n            result = false;\n            console.error(\"Assertion failed: \" + message);\n        }\n        if (isDebug) {\n            callDebugger();\n        }\n    }\n    return result;\n}\nexport function proxyFn(objOrClass, fnName, proxyFn) {\n    objOrClass = isNotUndefined(objOrClass.prototype) ? objOrClass.prototype : objOrClass;\n    const fn = objOrClass[fnName];\n    const _superFn = function (...args) {\n        if (args.length !== 0) {\n            return fn.apply(this || objOrClass, args);\n        }\n        else {\n            return fn.call(this || objOrClass);\n        }\n    };\n    objOrClass[fnName] = proxyFn.bind(objOrClass, _superFn);\n}\nexport function loop(count, fn) {\n    let i = -1;\n    while (++i < count) {\n        fn(i);\n    }\n}\nexport function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n}\n//# sourceMappingURL=Util.js.map","import { Global } from \"./Global\";\nexport var Sides;\n(function (Sides) {\n    Sides[Sides[\"Top\"] = 0] = \"Top\";\n    Sides[Sides[\"Bottom\"] = 1] = \"Bottom\";\n    Sides[Sides[\"Left\"] = 2] = \"Left\";\n    Sides[Sides[\"Right\"] = 3] = \"Right\";\n})(Sides || (Sides = {}));\nclass DomState {\n}\nDomState.Sides = Sides;\nDomState._window = Global.window;\nDomState._document = Global.window ? Global.window.document : undefined;\nDomState._el = Global.window ? Global.window.document.createElement(\"div\") : undefined;\nexport function init(win) {\n    Global.window = win;\n    DomState._window = Global.window;\n    DomState._document = DomState._window.document;\n    DomState._el = DomState._document.createElement(\"div\");\n}\nexport function toArray(a) {\n    return Array.prototype.slice.call(a);\n}\nexport function create(html, attr) {\n    let result, keys, i, k, styles, styleKeys;\n    DomState._el.innerHTML = html;\n    result = DomState._el.children[0];\n    setAttr(result, attr);\n    clear(DomState._el);\n    return result;\n}\nexport function outerHTML(el) {\n    DomState._el.appendChild(el);\n    const result = DomState._el.innerHTML;\n    clear(DomState._el);\n    return result;\n}\nexport function setAttr(_el, attr) {\n    let el;\n    if (typeof (_el) === \"string\") {\n        el = get(_el);\n    }\n    else {\n        el = _el;\n    }\n    let keys, i, k, styles, styleKeys, style;\n    if (attr !== undefined && typeof (attr) === \"object\") {\n        keys = Object.keys(attr);\n        for (i = 0; i < keys.length; i++) {\n            if (keys[i] === \"style\") {\n                styles = attr[keys[i]];\n                styleKeys = Object.keys(styles);\n                for (k = 0; k < styleKeys.length; k++) {\n                    style = styles[styleKeys[k]];\n                    if (typeof (style) === \"string\") {\n                        el.style.setProperty(styleKeys[k], style);\n                    }\n                    else {\n                        el.style.setProperty(styleKeys[k], style[0], style[1]);\n                    }\n                }\n            }\n            else if (keys[i] === \"classes\" && attr[keys[i]] !== undefined && attr[keys[i]].join) {\n                el.setAttribute(\"className\", attr[keys[i]].join(\" \"));\n            }\n            else {\n                el.setAttribute(keys[i], attr[keys[i]]);\n            }\n        }\n    }\n}\nexport function remove(element) {\n    return element.parentNode === undefined ? null : element.parentNode.removeChild(element);\n}\nexport function replace(src, target) {\n    let result = target;\n    if (src.parentNode) {\n        src.parentNode.replaceChild(target, src);\n    }\n    return result;\n}\nexport function clear(element) {\n    let i = element.children.length;\n    while (i--) {\n        element.removeChild(element.children[i]);\n    }\n}\nexport function get(id) {\n    let result = DomState._document.getElementById(id);\n    if (result === null) {\n        switch (id) {\n            default:\n                result = DomState._document.body;\n                break;\n        }\n    }\n    return result;\n}\nexport function find(selector) {\n    return DomState._document.querySelector(selector);\n}\nexport function findAll(selector, root) {\n    return toArray((root || DomState._document).querySelectorAll(selector));\n}\nexport function children(root, selector) {\n    const children = toArray((root || DomState._document).children);\n    return selector === undefined ? children : children.filter(is.bind(this, selector));\n}\nexport function findParent(root, selector) {\n    let result = root.parentElement;\n    while (result) {\n        if (is(selector, result)) {\n            break;\n        }\n        result = result.parentElement;\n    }\n    return result;\n}\nexport function position(el, x, y) {\n    el.style.top = y + \"px\";\n    el.style.left = x + \"px\";\n}\nexport function is(selector, element) {\n    let result = false;\n    if (element.matches) {\n        result = element.matches(selector);\n    }\n    else if (element.msMatchesSelector) {\n        result = element.msMatchesSelector(selector);\n    }\n    else if (element.webkitMatchesSelector) {\n        result = element.webkitMatchesSelector(selector);\n    }\n    else {\n        if (element.parentElement === null) {\n            throw new Error(\"Element has no parent\");\n        }\n        if (element.id !== \"\") {\n            result = element.parentElement.querySelector(\"#\" + element.id) !== null;\n        }\n        else {\n            result = toArray(element.parentElement.querySelectorAll(selector)).indexOf(element) !== -1;\n        }\n    }\n    return result;\n}\nexport function setStylesExplicitly(element, ...styles) {\n    const comp = DomState._window.getComputedStyle(element);\n    for (const style of styles) {\n        element.style[style] = comp[style];\n    }\n}\n//# sourceMappingURL=Dom.js.map","export var MocDataType;\n(function (MocDataType) {\n    MocDataType[MocDataType[\"LinearInt\"] = 0] = \"LinearInt\";\n    MocDataType[MocDataType[\"RandomInt\"] = 1] = \"RandomInt\";\n    MocDataType[MocDataType[\"LinearFloat\"] = 2] = \"LinearFloat\";\n    MocDataType[MocDataType[\"RandomFloat\"] = 3] = \"RandomFloat\";\n})(MocDataType || (MocDataType = {}));\nexport const VALID_CHARS = \" ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\nexport function randomString(length = 25) {\n    let result = \"\";\n    for (let i = 0; i < length; i += 1) {\n        result += VALID_CHARS.charAt(Math.floor(Math.random() * VALID_CHARS.length));\n    }\n    return result;\n}\nexport function randomInt() {\n    return this.randomNumber() | 0;\n}\nexport function randomNumber() {\n    return Math.random() * 2147483647;\n}\nexport function numericArray(length, type = MocDataType.LinearInt) {\n    const result = new Array(length);\n    switch (type) {\n        case MocDataType.RandomInt:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = this.randomInt();\n            }\n            break;\n        case MocDataType.LinearFloat:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = i + 0.5;\n            }\n            break;\n        case MocDataType.RandomFloat:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = this.randomNumber();\n            }\n            break;\n        default:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = i;\n            }\n            break;\n    }\n    return result;\n}\nexport function stringArray(arrayLength, stringLength) {\n    const result = new Array(arrayLength);\n    let i = -1;\n    while (++i < arrayLength) {\n        result[i] = this.randomString(stringLength);\n    }\n    return result;\n}\n//# sourceMappingURL=MocData.js.map","var VERSION = \"0.2.1\";\nimport { Dictionary, Vec2, Timer, List } from \"goodcore\";\nimport { until } from \"goodcore/Arr\";\nimport { newUUID } from \"goodcore/Util\";\nimport { is, findAll } from \"goodcore/Dom\";\nvar GoodTap = (function () {\n    function GoodTap(rootElement) {\n        this.version = VERSION;\n        this.minSwipeDistance = 100;\n        this.maxTapDuration = 400;\n        this.defaultLongPressDuration = 400;\n        this.defaultDragResistance = 0;\n        this.dragResistanceSquared = 0;\n        this.events = [\"down\", \"drag\", \"up\", \"press\", \"tap\", \"swipe\"];\n        this.downEvents = [\"down\"];\n        this.upEvents = [\"up\", \"tap\", \"swipe\"];\n        this.longPressIntervals = new Dictionary();\n        this.eventAttr = \"\";\n        this.upEventsAndPress = [];\n        this.index = 0;\n        this.lastInsides = new List();\n        this.dragging = new List();\n        this.isListeningToMovement = false;\n        this.init(rootElement || document.body);\n        this.eventAttr = this.events.map(function (name) { return \"[\" + name + \"]\"; }).join(\",\");\n        this.upEventsAndPress = this.upEvents.concat([\"press\"]);\n    }\n    GoodTap.prototype.init = function (rootElement) {\n        var _this = this;\n        if (this.hasTouchEvent()) {\n            rootElement.addEventListener(\"touchstart\", function (ev) { _this.start(ev, rootElement); });\n            rootElement.addEventListener(\"touchend\", function (ev) { _this.end(ev, rootElement); });\n        }\n        rootElement.addEventListener(\"mousedown\", function (ev) { _this.start(ev, rootElement); });\n        rootElement.addEventListener(\"mouseup\", function (ev) { _this.end(ev, rootElement); });\n        rootElement.addEventListener(\"focus\", function (ev) { return _this.triggerOutside(ev.target, ev, rootElement); }, true);\n        this.root = rootElement;\n    };\n    GoodTap.prototype.findTarget = function (el) {\n        var target = null;\n        while (el && el.parentElement !== document && target === null) {\n            if (is(this.eventAttr, el)) {\n                target = el;\n            }\n            el = el.parentElement;\n        }\n        return target;\n    };\n    GoodTap.prototype.findTargets = function (el) {\n        var targets = [];\n        while (el && el.parentElement !== document) {\n            if (!el.id) {\n                el.id = newUUID();\n            }\n            if (is(this.eventAttr, el)) {\n                targets.push(el);\n            }\n            el = el.parentElement;\n        }\n        return targets;\n    };\n    GoodTap.prototype.getTouchPos = function (ev, pos) {\n        pos = pos || new Vec2(0, 0);\n        if (ev instanceof TouchEvent) {\n            pos.x = ev.changedTouches[0].pageX;\n            pos.y = ev.changedTouches[0].pageY;\n        }\n        else if (ev instanceof MouseEvent) {\n            pos.x = ev.pageX;\n            pos.y = ev.pageY;\n        }\n        return pos;\n    };\n    GoodTap.prototype.longPress = function (ev, target) {\n        var result = true;\n        var touchInfo = target.touchInfo;\n        result = this.executeAction(ev, target, \"press\", touchInfo);\n        if (result === false || target.hasAttribute(\"once\")) {\n            clearInterval(this.longPressIntervals.get(touchInfo.index));\n            this.longPressIntervals.delete(touchInfo.index);\n        }\n    };\n    GoodTap.prototype.triggerOutside = function (target, ev, rootElement) {\n        var _this = this;\n        var outside = new List(findAll(\"[outside]\", this.root));\n        if (outside.length > 0) {\n            var insides_1 = new List(this.findTargets(target));\n            var preventOutside = insides_1.contains(function (el) { return el.hasAttribute(\"preventDefault\"); });\n            if (!preventOutside) {\n                outside\n                    .filter(function (el) { return _this.lastInsides.contains(el) && !insides_1.contains(el); })\n                    .forEach(function (el) { return _this.handleEvent(\"outside\", ev, el); });\n                this.lastInsides = insides_1;\n            }\n        }\n    };\n    GoodTap.prototype.move = function (ev, rootElement, target, action) {\n        var result = true;\n        var touchInfo = target.touchInfo;\n        if (touchInfo === undefined) {\n            this.end(ev, rootElement);\n            return;\n        }\n        this.getTouchPos(ev, touchInfo.pos);\n        if (touchInfo.dragResistance === 0 ||\n            this.getTouchPos(ev).subtract(touchInfo.pos).lengthSq() < touchInfo.dragResistance) {\n            touchInfo.dragResistance = 0;\n            try {\n                if (action === \"[fn]\" && (\"drag-fn\") in target) {\n                    result = target[\"drag-fn\"](ev, target, touchInfo);\n                }\n                else {\n                    target[\"drag-fn\"] = (new Function(\"event\", \"target\", \"touch\", action)).bind(target);\n                    result = target[\"drag-fn\"](ev, target, touchInfo);\n                }\n            }\n            catch (err) {\n                throw name + \" event function error on element '\" + target.id + \"'\\n\" + err.toString();\n            }\n            if (result === false) {\n                this.end(ev, rootElement);\n            }\n        }\n    };\n    GoodTap.prototype.start = function (ev, rootElement) {\n        var _this = this;\n        this.longPressIntervals.values.forEach(function (long) { return clearInterval(long); });\n        this.longPressIntervals.clear();\n        var preventDefault = false;\n        var stopPropagation = false;\n        var target = ev.target;\n        var loopCounter = 0;\n        this.triggerOutside(target, ev, rootElement);\n        while (loopCounter < 100 && (target = this.findTarget(target)) && !stopPropagation) {\n            ++loopCounter;\n            var pressInterval = null;\n            if (target.hasAttribute(\"press\")) {\n                pressInterval = setInterval((function (target) { return _this.longPress(ev, target); }).bind(this, target), parseInt(target.getAttribute(\"pressInterval\")) || this.defaultLongPressDuration);\n            }\n            var moveHandler = undefined;\n            var dragResistance = 0;\n            if (target.hasAttribute(\"drag\")) {\n                dragResistance = parseInt(target.getAttribute(\"dragResistance\"));\n                if (isNaN(dragResistance)) {\n                    dragResistance = this.defaultDragResistance;\n                }\n                dragResistance *= dragResistance;\n                var dragAction = target.getAttribute(\"drag\");\n                moveHandler = (function (t, d, ev) {\n                    _this.move(ev, rootElement, t, d);\n                }).bind(this, target, dragAction);\n                if (this.hasTouchEvent()) {\n                    rootElement.addEventListener(\"touchmove\", moveHandler);\n                }\n                rootElement.addEventListener(\"mousemove\", moveHandler);\n            }\n            target.classList.add(\"gt-active\");\n            target.touchInfo = {\n                index: this.index++,\n                time: Timer.now(),\n                pos: this.getTouchPos(ev),\n                long: pressInterval,\n                moveHandler: moveHandler,\n                dragResistance: dragResistance,\n            };\n            if (target.hasAttribute(\"dragstart\")) {\n                this.handleEvent(\"dragstart\", ev, target);\n            }\n            if (pressInterval) {\n                this.longPressIntervals.set(target.touchInfo.index, target.touchInfo.long);\n            }\n            until(this.downEvents, function (name) {\n                if (target.hasAttribute(name)) {\n                    stopPropagation = (_this.handleEvent(name, ev, target) === false);\n                    if (!stopPropagation && target.hasAttribute(\"stopPropagation\") || target.hasAttribute(\"gt-false\")) {\n                        stopPropagation = true;\n                        ev.stopPropagation();\n                    }\n                    if (target.hasAttribute(\"preventDefault\") || target.hasAttribute(\"gt-false\")) {\n                        ev.preventDefault();\n                        preventDefault = true;\n                    }\n                }\n                return stopPropagation;\n            });\n            target = target.parentElement;\n        }\n    };\n    GoodTap.prototype.isSwipe = function (ev, target) {\n        var pos = this.getTouchPos(ev);\n        var result = false;\n        if (\"touchInfo\" in target) {\n            var dX = pos.x - target.touchInfo.pos.x;\n            var dY = pos.y - target.touchInfo.pos.y;\n            var absDX = Math.abs(dX);\n            var absDY = Math.abs(dY);\n            var horizontal = absDX > absDY;\n            var distance = horizontal ? absDX : absDY;\n            result = distance >= this.minSwipeDistance;\n            if (result) {\n                target.touchInfo.swipeInfo = {\n                    direction: horizontal ?\n                        (dX < 0 ? \"left\" : \"right\") :\n                        (dY < 0 ? \"up\" : \"down\"),\n                    distance: distance,\n                    delta: new Vec2(dX, dY)\n                };\n            }\n        }\n        return result;\n    };\n    GoodTap.prototype.end = function (ev, rootElement) {\n        var _this = this;\n        var time = Timer.now();\n        var stopPropagation = false;\n        var target = ev.target;\n        var loopCounter = 0;\n        var endedOutsideTargets = new List();\n        var originalTarget = target;\n        this.dragging.clear();\n        var _loop_1 = function () {\n            ++loopCounter;\n            var touchInfo = target.touchInfo;\n            if (touchInfo !== undefined) {\n                var duration_1 = time - touchInfo.time;\n                until(this_1.upEventsAndPress, function (name) {\n                    if (target.hasAttribute(name)) {\n                        var isSwipe = _this.isSwipe(ev, target);\n                        if ((name === \"swipe\" && isSwipe)\n                            || (name === \"tap\" && !isSwipe && duration_1 < _this.maxTapDuration)\n                            || (name === \"up\")) {\n                            stopPropagation = (_this.handleEvent(name, ev, target) === false);\n                        }\n                        if (stopPropagation || target.hasAttribute(\"stopPropagation\") || target.hasAttribute(\"gt-false\")) {\n                            stopPropagation = true;\n                            ev.stopPropagation();\n                            delete target.touchInfo;\n                        }\n                        if (target.hasAttribute(\"preventDefault\") || target.hasAttribute(\"gt-false\")) {\n                            ev.preventDefault();\n                        }\n                    }\n                    return stopPropagation;\n                });\n            }\n            target = target.parentElement;\n        };\n        var this_1 = this;\n        while (loopCounter < 100 && (target = this.findTarget(target)) && !stopPropagation) {\n            _loop_1();\n        }\n        findAll(\".gt-active\").forEach(function (el) {\n            el.classList.remove(\"gt-active\");\n            if (el.touchInfo !== undefined && el.touchInfo.moveHandler !== undefined) {\n                rootElement.removeEventListener(\"touchmove\", el.touchInfo.moveHandler);\n                rootElement.removeEventListener(\"mousemove\", el.touchInfo.moveHandler);\n                _this.handleEvent(\"dragend\", ev, el);\n            }\n            delete el.touchInfo;\n        });\n        this.longPressIntervals.values.forEach(function (long) { return clearInterval(long); });\n        this.longPressIntervals.clear();\n    };\n    GoodTap.prototype.executeAction = function (ev, target, actionAttr, touchInfo) {\n        var result = true;\n        var action = target.getAttribute(actionAttr);\n        try {\n            if (action === \"[fn]\" && (actionAttr + \"-fn\") in target) {\n                result = target[actionAttr + \"-fn\"](ev, target, touchInfo);\n            }\n            else {\n                result = (new Function(\"event\", \"target\", \"touch\", action)).bind(target)(ev, target, touchInfo);\n            }\n        }\n        catch (err) {\n            throw name + \" event function error on element '\" + target.id + \"'\\n\" + err.toString();\n        }\n        return result;\n    };\n    GoodTap.prototype.handleEvent = function (name, ev, target) {\n        var actionAttr = name;\n        var result = true;\n        if (target) {\n            result = this.executeAction(ev, target, actionAttr, target.touchInfo);\n            if (name in this.upEvents) {\n                target.classList.remove(\"gt-active\");\n                if (this.longPressIntervals.has(target.touchInfo.index)) {\n                    clearInterval(this.longPressIntervals.get(target.touchInfo.index));\n                }\n                delete target.touchInfo;\n            }\n        }\n        return result;\n    };\n    GoodTap.prototype.on = function (element, name, fn) {\n        element.setAttribute(name, \"[fn]\");\n        element[name + \"-fn\"] = fn;\n    };\n    GoodTap.prototype.off = function (element, name) {\n        element.removeAttribute(name + \"-action\");\n        delete element[name + \"-fn\"];\n    };\n    GoodTap.prototype.hideKeyboard = function () {\n        var field = document.createElement(\"input\");\n        field.setAttribute(\"type\", \"text\");\n        document.body.appendChild(field);\n        setTimeout(function () {\n            field.focus();\n            setTimeout(function () {\n                field.setAttribute(\"style\", \"display:none;\");\n                field.parentElement.removeChild(field);\n            }, 50);\n        }, 50);\n    };\n    GoodTap.prototype.hasTouchEvent = function () {\n        return \"ontouchstart\" in document.documentElement;\n    };\n    GoodTap.prototype.outside = function () {\n        this.triggerOutside(this.root, new FocusEvent(\"\"));\n        this.hideKeyboard();\n    };\n    return GoodTap;\n}());\nexport { GoodTap };\nexport function init(root) {\n    return new GoodTap(root);\n}\n//# sourceMappingURL=index.js.map"],"names":["CalcConst","ROTATION_DEGREE_PRECISION","RADIAN_FACTOR","Math","PI","DEGREE_FACTOR","DEG360","ROTATION_LOOKUP","lookup","i","push","cos","sin","Vec2Const","EPSILON","IDENTITY","x","y","X_DIM","Y_DIM","Vec2","[object Object]","this","angle","horizontalAngle","direction","isZero","src","out","set","create","ceil","sqrt","lengthSq","atan2","rot","rotation","deg","rotationDeg","rotationRad","nx","ny","center","subtract","rotate","add","len","length","vectorB","scalar","target","abs","isNormalized","result","clone","normalize","temp","coeff","v","max","min","nativeWindow","win","window","Global","_window","_nativeWindow","hasNativeWindow","hasWindow","isArray","it","Array","Object","prototype","toString","call","isFunction","isNullOrUndefined","arg","undefined","isUndefined","isNotUndefined","wipe","obj","keys","constructor","Date","getTime","RegExp","key","setProperties","values","mapping","value","slice","from","count","Infinity","removeAt","arr","index","indexOfElement","el","indexOf","fn","shallowCopy","deepCopyInto","filter","mapInto","forEach","startIndex","until","fnOrTest","isCombined","populator","Symbol","iterator","List","_array","_index","_indexer","_pointer","done","pos","Error","indexer","_reindex","size","j","unshift","insertAt","pop","shift","arr2","arrs","concat","apply","offset","append","shallowCopyInto","deepCopy","unindexEl","n","forSome","reverseForEach","combined","reverseUntil","some","all","find","array","left","right","temporary","reverse","get","first","space","filterInto","remove","insert","srcLen","insertLen","newLen","delta","splice","sort","map","start","acc","reduce","test","reduceUntil","reverseReduce","reverseReduceUntil","b","equals","a","args","areNullOrUndefined","areNotNullOrUndefined","isSameClass","contains","long","short","select","list","t","u","tuple","maxDepth","_flattenInner","depth","serialize","types","T","passthroughT","deserialize","newT","Dictionary","_lookup","_list","_isDirty","has","cleanList","reCreateList","clear","TimerState","_hasPerformance","Timer","time","_time","performance","now","hrTime","process","hrtime","_start","_last","newUUID","d","replace","c","r","random","floor","Sides","MocDataType","DomState","toArray","findAll","selector","root","_document","querySelectorAll","is","element","matches","msMatchesSelector","webkitMatchesSelector","parentElement","id","querySelector","document","_el","createElement","VERSION","GoodTap","rootElement","version","minSwipeDistance","maxTapDuration","defaultLongPressDuration","defaultDragResistance","dragResistanceSquared","events","downEvents","upEvents","longPressIntervals","eventAttr","upEventsAndPress","lastInsides","dragging","isListeningToMovement","init","body","name","join","_this","hasTouchEvent","addEventListener","ev","end","triggerOutside","findTarget","findTargets","targets","getTouchPos","TouchEvent","changedTouches","pageX","pageY","MouseEvent","longPress","touchInfo","executeAction","hasAttribute","clearInterval","delete","outside","insides_1","handleEvent","move","action","dragResistance","Function","bind","err","stopPropagation","loopCounter","pressInterval","setInterval","parseInt","getAttribute","moveHandler","isNaN","dragAction","classList","preventDefault","isSwipe","dX","dY","absDX","absDY","horizontal","distance","swipeInfo","_loop_1","duration_1","this_1","removeEventListener","actionAttr","on","setAttribute","off","removeAttribute","hideKeyboard","field","appendChild","setTimeout","focus","removeChild","documentElement","FocusEvent"],"mappings":"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"}