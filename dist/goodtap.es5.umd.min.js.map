{"version":3,"file":"goodtap.es5.umd.min.js","sources":["../node_modules/goodcore/Global.js","../node_modules/goodcore/Test.js","../node_modules/goodcore/Obj.js","../node_modules/goodcore/Arr.js","../node_modules/goodcore/Timer.js","../node_modules/goodcore/Util.js","../node_modules/goodcore/Dom.js","../node_modules/goodcore/Calc.js","../node_modules/goodcore/struct/Vec2.js","../node_modules/goodcore/struct/Dictionary.js","../node_modules/goodcore/struct/List.js","../node_modules/goodcore/struct/SortedList.js","../node_modules/goodcore/struct/Tree.js","../node_modules/goodcore/struct/Stack.js","../node_modules/goodcore/MocData.js","../node_modules/goodcore/standard/mixins/Initable.js","lib/index.js"],"sourcesContent":["let nativeWindow = true;\nvar win;\nif (typeof (window) === \"undefined\") {\n    win = null;\n    nativeWindow = false;\n}\nelse {\n    win = window;\n}\nexport class _Global {\n    constructor() {\n        this._window = win;\n        this._nativeWindow = nativeWindow;\n    }\n    get window() {\n        return this._window;\n    }\n    set window(v) {\n        this._window = v;\n        if (this.hasNativeWindow) {\n            win = v;\n        }\n    }\n    get hasNativeWindow() {\n        return this._nativeWindow;\n    }\n}\nexport let Global = new _Global();\n//# sourceMappingURL=Global.js.map","import { Global } from \"./Global\";\nexport function hasWindow() {\n    return Global.window !== null;\n}\nexport function hasConsole() {\n    return this.hasWindow() && Global.window.console !== undefined || typeof (console) === \"function\";\n}\nexport function isArray(it) {\n    return Array.isArray ? Array.isArray(it) : Object.prototype.toString.call(it) === \"[object Array]\";\n}\nexport function isElement(target) {\n    return target !== undefined && target !== null && target.nodeType === 1 ? true : false;\n}\nexport function isFunction(it) {\n    return Object.prototype.toString.call(it) === \"[object Function]\";\n}\nexport function isNumber(x) {\n    return x === +x;\n}\nexport function isInt(x) {\n    return isNumber(x) && (x === (x | 0));\n}\nexport function isString(x) {\n    return isNotNullOrUndefined(x) && x.constructor === String;\n}\nexport function areNullOrUndefined(...args) {\n    const len = args.length;\n    let i = -1;\n    let a;\n    let result = false;\n    while (!result && ++i < len) {\n        a = args[i];\n        result = a === undefined || a === null;\n    }\n    return result;\n}\nexport function areNotNullOrUndefined(...args) {\n    return !areNullOrUndefined(...args);\n}\nexport function isNullOrUndefined(arg) {\n    return arg === undefined || arg === null;\n}\nexport function isNotNullOrUndefined(arg) {\n    return !isNullOrUndefined(arg);\n}\nexport function areUndefined(...args) {\n    const len = args.length;\n    let i = -1;\n    let a;\n    let result = false;\n    while (!result && ++i < len) {\n        a = args[i];\n        result = a === undefined;\n    }\n    return result;\n}\nexport function areNotUndefined(...args) {\n    return !areUndefined(...args);\n}\nexport function isUndefined(arg) {\n    return arg === undefined;\n}\nexport function isNotUndefined(arg) {\n    return !isUndefined(arg);\n}\n//# sourceMappingURL=Test.js.map","import { deepCopy, flatten } from \"./Arr\";\nimport { areNotNullOrUndefined, isArray, isFunction } from \"./Test\";\nexport function destroy(obj) {\n    if (obj.constructor.prototype.destroy !== undefined) {\n        obj.destroy();\n    }\n    else {\n        setNull(obj);\n    }\n}\nexport function wipe(obj) {\n    const keys = Object.keys(obj);\n    let i = -1;\n    const len = keys.length;\n    while (++i < len) {\n        delete obj[keys[i]];\n    }\n}\nexport function setNull(obj) {\n    if (obj.constructor.prototype.clear !== undefined) {\n        obj.clear();\n    }\n    else {\n        const keys = Object.keys(obj);\n        let key = null;\n        let i = -1;\n        const len = keys.length;\n        while (++i < len) {\n            key = keys[i];\n            obj[key] = null;\n        }\n    }\n}\nexport function isClassOf(a, b) {\n    return areNotNullOrUndefined(a, b) && a instanceof b.constructor;\n}\nexport function isSameClass(a, b) {\n    return areNotNullOrUndefined(a, b) && a.constructor === b.constructor;\n}\nexport function inherits(a, b) {\n    return isClassOf(a, b) && !isSameClass(a, b);\n}\nexport function equals(a, b) {\n    let result = a === b;\n    if (a !== b && (a instanceof Object) && isSameClass(a, b)) {\n        if (isArray(a)) {\n            const len = a.length;\n            let i = 0;\n            result = len === b.length;\n            if (result) {\n                for (; i < len; i += 1) {\n                    result = equals(a[i], b[i]);\n                    if (result === false) {\n                        break;\n                    }\n                }\n            }\n        }\n        else if (a.constructor.prototype.equals) {\n            result = a.equals(b);\n        }\n        else {\n            const keys = Object.keys(a);\n            let key = null;\n            result = true;\n            let i = -1;\n            const len = keys.length;\n            while (++i < len) {\n                key = keys[i];\n                result = equals(a[key], b[key]);\n                if (!result) {\n                    if (isFunction(a[key])) {\n                        result = true;\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return result;\n}\nexport function isDifferent(a, b) {\n    return !equals(a, b);\n}\nexport function shallowCopy(obj) {\n    const keys = Object.keys(obj);\n    const result = {};\n    let i = -1;\n    const len = keys.length;\n    while (++i < len) {\n        const key = keys[i];\n        result[key] = obj[key];\n    }\n    return result;\n}\nexport function clone(obj) {\n    let result;\n    if (!(obj instanceof Object)) {\n        result = obj;\n    }\n    else if (obj.constructor.prototype.clone !== undefined) {\n        result = obj.clone();\n    }\n    else if (isArray(obj)) {\n        result = deepCopy(obj);\n    }\n    else if (obj instanceof Date) {\n        return new Date(obj.getTime());\n    }\n    else if (obj instanceof RegExp) {\n        return new RegExp(obj);\n    }\n    else {\n        result = new obj.constructor();\n        const keys = Object.keys(obj);\n        let key = null;\n        let i = -1;\n        const len = keys.length;\n        while (++i < len) {\n            key = keys[i];\n            result[key] = clone(obj[key]);\n        }\n    }\n    return result;\n}\nexport function cloneInto(src, target) {\n    if (isArray(target)) {\n        const arrS = src;\n        const arrT = target;\n        const len = arrS.length;\n        arrT.length = len;\n        let i = -1;\n        while (++i < len) {\n            if (arrS[i] instanceof Object) {\n                cloneInto(arrS[i], arrT[i]);\n            }\n            else {\n                arrT[i] = arrS[i];\n            }\n        }\n    }\n    else {\n        const keys = Object.keys(src);\n        let key = null;\n        let i = -1;\n        const len = keys.length;\n        while (++i < len) {\n            key = keys[i];\n            const a = src[key];\n            if (a instanceof Object) {\n                let b = target[key];\n                if (b === undefined || b === null) {\n                    if (isArray(a)) {\n                        b = target[key] = [];\n                    }\n                    else {\n                        b = target[key] = {};\n                    }\n                }\n                if (isDifferent(a, b)) {\n                    cloneInto(a, b);\n                }\n            }\n            else {\n                target[key] = a;\n            }\n        }\n    }\n    return target;\n}\nexport function mixin(target = {}, exclude, ...sources) {\n    const result = target, len = sources ? sources.length : 0;\n    let i = 0;\n    sources = flatten(sources);\n    for (; i < len; i++) {\n        let src = sources[i];\n        if (isFunction(src)) {\n            src = src.prototype;\n        }\n        if (src === undefined) {\n            continue;\n        }\n        const keys = Object.keys(src);\n        let key = null;\n        if (exclude) {\n            let i = -1;\n            const len = keys.length;\n            while (++i < len) {\n                key = keys[i];\n                if (exclude.hasOwnProperty(key)) {\n                    continue;\n                }\n                target[key] = src[key];\n            }\n        }\n        else {\n            let i = -1;\n            const len = keys.length;\n            while (++i < len) {\n                key = keys[i];\n                target[key] = src[key];\n            }\n        }\n    }\n    return result;\n}\nexport function setProperties(target, values, mapping) {\n    const keys = Object.keys(values);\n    let key;\n    let value;\n    let i = -1;\n    const len = keys.length;\n    while (++i < len) {\n        key = keys[i];\n        value = values[key];\n        if (mapping && key in mapping) {\n            key = mapping[key];\n        }\n        if (key in target) {\n            target[key] = values[keys[i]];\n        }\n    }\n}\n//# sourceMappingURL=Obj.js.map","import { clone, setProperties } from \"./Obj\";\nimport { isArray, isNullOrUndefined, isNumber, isUndefined, isNotUndefined } from \"./Test\";\nclass ArrayState {\n}\nexport function flatten(src) {\n    return flattenInner(src);\n}\nfunction flattenInner(src, result = []) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        if (isArray(src[i])) {\n            flattenInner(src[i], result);\n        }\n        else {\n            result.push(src[i]);\n        }\n    }\n    return result;\n}\nexport function reverse(array) {\n    let left = null;\n    let right = null;\n    const length = isNullOrUndefined(array) ? 0 : array.length;\n    for (left = 0; left < length / 2; left += 1) {\n        right = length - 1 - left;\n        const temporary = array[left];\n        array[left] = array[right];\n        array[right] = temporary;\n    }\n    return array;\n}\nexport function concat(...arrs) {\n    const result = Array.prototype.concat.apply([], arrs);\n    return result;\n}\nexport function slice(src, from = 0, count = Infinity) {\n    let len = Math.min(isNullOrUndefined(src) ? 0 : src.length - from, count);\n    if (len < 0) {\n        len = 0;\n    }\n    let i = -1;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = src[i + from];\n    }\n    return result;\n}\nexport function splice(src, pos = 0, remove = Infinity, insert = []) {\n    if (isNullOrUndefined(src)) {\n        throw new Error(\"Unable to splice on null or undefined\");\n    }\n    let srcLen = src.length;\n    pos = Math.max(0, pos);\n    pos = Math.min(pos, srcLen);\n    remove = Math.max(0, remove);\n    remove = Math.min(remove, srcLen - pos);\n    let insertLen = insert.length;\n    let newLen = srcLen - remove + insertLen;\n    let delta = remove - insertLen;\n    if (delta < 0) {\n        src.length = newLen;\n        let i = newLen;\n        while (--i >= pos + remove) {\n            src[i] = src[i + delta];\n        }\n    }\n    let i = pos - 1;\n    while (++i < pos + insertLen) {\n        src[i] = insert[i - pos];\n    }\n    if (delta > 0) {\n        --i;\n        while (++i < srcLen - delta) {\n            src[i] = src[i + delta];\n        }\n        src.length = newLen;\n    }\n}\nexport function append(arr, values) {\n    let index = -1;\n    const offset = arr.length;\n    const length = isNullOrUndefined(values) ? 0 : values.length;\n    while (++index < length) {\n        arr[offset + index] = values[index];\n    }\n}\nexport function removeAt(arr, index) {\n    let result;\n    let len = isNullOrUndefined(arr) ? 0 : arr.length;\n    if (index >= 0 && index < len) {\n        let i = index;\n        result = arr[index];\n        while (++i < len) {\n            arr[i - 1] = arr[i];\n        }\n        arr.length -= 1;\n    }\n    return result;\n}\nexport function indexOfElement(src, el) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        if (src[i] === el) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(arr, el) {\n    const start = indexOfElement(arr, el);\n    removeAt(arr, start);\n}\nexport function indexOf(src, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        if (fn(src[i])) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function removeOneByFn(arr, fn) {\n    const start = indexOf(arr, fn);\n    removeAt(arr, start);\n}\nexport function shallowCopy(src) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = src[i];\n    }\n    return result;\n}\nexport function shallowCopyInto(src, target) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    target.length = len;\n    while (++i < len) {\n        target[i] = src[i];\n    }\n}\nexport function shallowFill(src, target, at = 0) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    if (target.length < len + at) {\n        target.length = len + at;\n    }\n    while (++i < len) {\n        target[at + i] = src[i];\n    }\n}\nexport function deepCopy(src) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = (clone(src[i]));\n    }\n    return result;\n}\nexport function deepCopyInto(src, target) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    target.length = len;\n    while (++i < len) {\n        target[i] = (clone(src[i]));\n    }\n}\nexport function deepFill(src, target, at = 0) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    if (target.length < len + at) {\n        target.length = len + at;\n    }\n    while (++i < len) {\n        target[at + i] = (clone(src[i]));\n    }\n}\nexport function filter(src, fn) {\n    const result = [];\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        const el = src[i];\n        if (fn(el, i) === true) {\n            result.push(el);\n        }\n    }\n    return result;\n}\nexport function filterInto(src, target, fn) {\n    let i = -1;\n    let j = 0;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const space = target.length;\n    while (++i < len) {\n        const el = src[i];\n        if (fn(el, i) === true) {\n            if (j < space) {\n                target[j++] = el;\n            }\n            else {\n                ++j;\n                target.push(el);\n            }\n        }\n    }\n    target.length = j;\n}\nexport function map(src, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = fn(src[i], i);\n    }\n    return result;\n}\nexport function mapInto(src, target, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    target.length = len;\n    while (++i < len) {\n        target[i] = fn(src[i], i);\n    }\n}\nexport function reduce(src, fn, start) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (++i < len) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function reduceUntil(src, fn, test, start) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (++i < len && !test(acc, src[i])) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function reverseReduce(src, fn, start) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (--i >= 0) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function reverseReduceUntil(src, fn, test, start) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (--i >= 0 && !test(acc, src[i])) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function forEach(src, fn, startIndex = 0) {\n    let i = startIndex - 1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        fn(src[i], i);\n    }\n}\nexport function forSome(src, filter, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        const el = src[i];\n        if (filter(el, i)) {\n            fn(el, i);\n        }\n    }\n}\nexport function until(src, fnOrTest, fn, startIndex) {\n    let isCombined = isUndefined(fn) || isNumber(fn);\n    startIndex = isCombined ? fn : startIndex;\n    let i = isUndefined(startIndex) || startIndex < 0 ? -1 : startIndex - 1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len && (isCombined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\n    }\n}\nexport function reverseForEach(src, fn) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    while (--i >= 0) {\n        fn(src[i], i);\n    }\n}\nexport function reverseUntil(src, fnOrTest, fn) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    let combined = isUndefined(fn);\n    while (--i >= 0 && (combined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\n    }\n}\nexport function some(src, fn) {\n    let result = false;\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len && !(result = fn(src[i]))) {\n    }\n    return result;\n}\nexport function all(src, fn) {\n    let result = true;\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len && (result = fn(src[i]))) {\n    }\n    return result;\n}\nexport function insertAt(src, pos, v) {\n    if (isNullOrUndefined(src)) {\n        throw new Error(\"Unable to insertAt on null or undefined\");\n    }\n    if (pos === 0) {\n        src.unshift(v);\n    }\n    else if (pos > 0) {\n        let i = src.length;\n        while (--i >= pos) {\n            src[i + 1] = src[i];\n        }\n        src[i + 1] = v;\n    }\n}\nexport function binarySearch(src, cmp, closest = false) {\n    let lo = 0, hi = isNullOrUndefined(src) ? -1 : src.length - 1, mid, element;\n    while (lo <= hi) {\n        mid = ((lo + hi) >> 1);\n        element = src[mid];\n        let val = cmp(element);\n        if (val < 0) {\n            lo = mid + 1;\n        }\n        else if (val > 0) {\n            hi = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return closest ? lo : -1;\n}\nexport function create(length, populator) {\n    if ((length || -1) < 0) {\n        length = 0;\n    }\n    let arr = new Array(length);\n    let i = -1;\n    while (++i < length) {\n        arr[i] = populator(i, arr);\n    }\n    return arr;\n}\nexport function deserialize(array, target, ...types) {\n    let [T, ...passthroughT] = types;\n    if (isNotUndefined(T)) {\n        if (isNotUndefined(T.prototype.deserialize)) {\n            mapInto(array, target, (el) => {\n                return (new T()).deserialize(el, ...passthroughT);\n            });\n        }\n        else {\n            mapInto(array, target, (el) => {\n                let newT = new T();\n                setProperties(newT, el);\n                return newT;\n            });\n        }\n    }\n    else {\n        deepCopyInto(array, target);\n    }\n    return this;\n}\n//# sourceMappingURL=Arr.js.map","class TimerState {\n}\nTimerState._hasPerformance = typeof (performance) !== \"undefined\";\nexport class Timer {\n    static get time() {\n        return TimerState._time;\n    }\n    static now() {\n        if (TimerState._hasPerformance) {\n            return performance.now();\n        }\n        else {\n            const hrTime = process.hrtime();\n            return hrTime[0] * 1000 + (hrTime[1] / 1e6);\n        }\n    }\n    static start() {\n        const now = Timer.now();\n        TimerState._start = TimerState._last = now;\n        return TimerState._time = 0;\n    }\n    static stop() {\n        const start = TimerState._start;\n        const now = Timer.now();\n        TimerState._last = now;\n        return TimerState._time = now - start;\n    }\n}\n//# sourceMappingURL=Timer.js.map","import { Global } from \"./Global\";\nimport { hasConsole, hasWindow, isNotUndefined } from \"./Test\";\nimport { Timer } from \"./Timer\";\nclass LoggableCounter {\n    constructor(name = \"\") {\n        this.name = \"\";\n        this._value = 0;\n        this.name = name;\n    }\n    log() {\n        console.log(\"Counter \" + this.name + \": \" + this.toString());\n    }\n    inc() {\n        this._value++;\n        return this;\n    }\n    reset() {\n        this._value = 0;\n        return this;\n    }\n    valueOf() {\n        return this._value;\n    }\n    toString() {\n        return this._value.toString();\n    }\n}\nclass UtilState {\n}\nUtilState._int = { \"0\": 0 };\nUtilState._counter = { \"\": new LoggableCounter(\"\") };\nexport function init(win) {\n    if (win !== undefined) {\n        Global.window = win;\n    }\n}\nexport function getFunctionName(fn) {\n    let result;\n    if (fn.hasOwnProperty(\"name\") !== undefined) {\n        result = fn.name;\n    }\n    else {\n        const fnString = fn.toString();\n        result = fnString.substring(9, fnString.indexOf(\"(\"));\n    }\n    return result;\n}\nexport function getFunctionCode(fn) {\n    let result;\n    const fnString = fn.toString();\n    result = fnString.substring(fnString.indexOf(\"{\") + 1, fnString.lastIndexOf(\"}\"));\n    return result;\n}\nexport function newUUID() {\n    let d = new Date().getTime();\n    d += Timer.now();\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n        const r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n}\nexport function newInt(key = 0) {\n    if (UtilState._int[key] === undefined) {\n        UtilState._int[key] = 0;\n    }\n    return UtilState._int[key]++;\n}\nexport function counter(key = \"\") {\n    if (UtilState._counter[key] === undefined) {\n        UtilState._counter[key] = new LoggableCounter(key.toString());\n    }\n    return UtilState._counter[key];\n}\nexport function count(key = \"\") {\n    return counter(key).inc();\n}\nexport function callDebugger() {\n    debugger;\n}\nexport function pipeOut(log, warn, error) {\n    if (hasConsole()) {\n        proxyFn(console, \"log\", function (superfn, ...args) { superfn(...args); log(...args); });\n        proxyFn(console, \"warn\", function (superfn, ...args) { superfn(...args); warn(...args); });\n        proxyFn(console, \"error\", function (superfn, ...args) { superfn(...args); error(...args); });\n    }\n    else {\n        const console = {\n            log,\n            warn,\n            error\n        };\n        if (!(hasWindow())) {\n            Global.window = {};\n        }\n        Global.window.console = console;\n    }\n}\nexport function assert(assertion, message, isDebug = true) {\n    let result = true;\n    if (!assertion) {\n        if (hasConsole) {\n            result = false;\n            console.error(\"Assertion failed: \" + message);\n        }\n        if (isDebug) {\n            callDebugger();\n        }\n    }\n    return result;\n}\nexport function proxyFn(objOrClass, fnName, proxyFn) {\n    objOrClass = isNotUndefined(objOrClass.prototype) ? objOrClass.prototype : objOrClass;\n    const fn = objOrClass[fnName];\n    const _superFn = function (...args) {\n        if (args.length !== 0) {\n            return fn.apply(this || objOrClass, args);\n        }\n        else {\n            return fn.call(this || objOrClass);\n        }\n    };\n    objOrClass[fnName] = proxyFn.bind(objOrClass, _superFn);\n}\nexport function loop(count, fn) {\n    let i = -1;\n    while (++i < count) {\n        fn(i);\n    }\n}\nexport function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n}\n//# sourceMappingURL=Util.js.map","import { Global } from \"./Global\";\nexport var Sides;\n(function (Sides) {\n    Sides[Sides[\"Top\"] = 0] = \"Top\";\n    Sides[Sides[\"Bottom\"] = 1] = \"Bottom\";\n    Sides[Sides[\"Left\"] = 2] = \"Left\";\n    Sides[Sides[\"Right\"] = 3] = \"Right\";\n})(Sides || (Sides = {}));\nclass DomState {\n}\nDomState.Sides = Sides;\nDomState._window = Global.window;\nDomState._document = Global.window ? Global.window.document : undefined;\nDomState._el = Global.window ? Global.window.document.createElement(\"div\") : undefined;\nexport function init(win) {\n    Global.window = win;\n    DomState._window = Global.window;\n    DomState._document = DomState._window.document;\n    DomState._el = DomState._document.createElement(\"div\");\n}\nexport function toArray(a) {\n    return Array.prototype.slice.call(a);\n}\nexport function create(html, attr) {\n    let result, keys, i, k, styles, styleKeys;\n    DomState._el.innerHTML = html;\n    result = DomState._el.children[0];\n    setAttr(result, attr);\n    clear(DomState._el);\n    return result;\n}\nexport function outerHTML(el) {\n    DomState._el.appendChild(el);\n    const result = DomState._el.innerHTML;\n    clear(DomState._el);\n    return result;\n}\nexport function setAttr(_el, attr) {\n    let el;\n    if (typeof (_el) === \"string\") {\n        el = get(_el);\n    }\n    else {\n        el = _el;\n    }\n    let keys, i, k, styles, styleKeys, style;\n    if (attr !== undefined && typeof (attr) === \"object\") {\n        keys = Object.keys(attr);\n        for (i = 0; i < keys.length; i++) {\n            if (keys[i] === \"style\") {\n                styles = attr[keys[i]];\n                styleKeys = Object.keys(styles);\n                for (k = 0; k < styleKeys.length; k++) {\n                    style = styles[styleKeys[k]];\n                    if (typeof (style) === \"string\") {\n                        el.style.setProperty(styleKeys[k], style);\n                    }\n                    else {\n                        el.style.setProperty(styleKeys[k], style[0], style[1]);\n                    }\n                }\n            }\n            else if (keys[i] === \"classes\" && attr[keys[i]] !== undefined && attr[keys[i]].join) {\n                el.setAttribute(\"className\", attr[keys[i]].join(\" \"));\n            }\n            else {\n                el.setAttribute(keys[i], attr[keys[i]]);\n            }\n        }\n    }\n}\nexport function remove(element) {\n    return element.parentNode === undefined ? null : element.parentNode.removeChild(element);\n}\nexport function replace(src, target) {\n    let result = target;\n    if (src.parentNode) {\n        src.parentNode.replaceChild(target, src);\n    }\n    return result;\n}\nexport function clear(element) {\n    let i = element.children.length;\n    while (i--) {\n        element.removeChild(element.children[i]);\n    }\n}\nexport function get(id) {\n    let result = DomState._document.getElementById(id);\n    if (result === null) {\n        switch (id) {\n            default:\n                result = DomState._document.body;\n                break;\n        }\n    }\n    return result;\n}\nexport function find(selector) {\n    return DomState._document.querySelector(selector);\n}\nexport function findAll(selector, root) {\n    return toArray((root || DomState._document).querySelectorAll(selector));\n}\nexport function children(root, selector) {\n    const children = toArray((root || DomState._document).children);\n    return selector === undefined ? children : children.filter(is.bind(this, selector));\n}\nexport function findParent(root, selector) {\n    let result = root.parentElement;\n    while (result) {\n        if (is(selector, result)) {\n            break;\n        }\n        result = result.parentElement;\n    }\n    return result;\n}\nexport function position(el, x, y) {\n    el.style.top = y + \"px\";\n    el.style.left = x + \"px\";\n}\nexport function is(selector, element) {\n    let result = false;\n    if (element.matches) {\n        result = element.matches(selector);\n    }\n    else if (element.msMatchesSelector) {\n        result = element.msMatchesSelector(selector);\n    }\n    else if (element.webkitMatchesSelector) {\n        result = element.webkitMatchesSelector(selector);\n    }\n    else {\n        if (element.parentElement === null) {\n            throw new Error(\"Element has no parent\");\n        }\n        if (element.id !== \"\") {\n            result = element.parentElement.querySelector(\"#\" + element.id) !== null;\n        }\n        else {\n            result = toArray(element.parentElement.querySelectorAll(selector)).indexOf(element) !== -1;\n        }\n    }\n    return result;\n}\nexport function setStylesExplicitly(element, ...styles) {\n    const comp = DomState._window.getComputedStyle(element);\n    for (const style of styles) {\n        element.style[style] = comp[style];\n    }\n}\n//# sourceMappingURL=Dom.js.map","export class CalcConst {\n}\nCalcConst.ROTATION_DEGREE_PRECISION = 1;\nCalcConst.RADIAN_FACTOR = (1 / 360) * (2 * Math.PI);\nCalcConst.DEGREE_FACTOR = (1 / (2 * Math.PI) * 360);\nCalcConst.DEG360 = 360 * CalcConst.ROTATION_DEGREE_PRECISION;\nCalcConst.ROTATION_LOOKUP = (function () {\n    const lookup = [];\n    for (let i = 0; i < 360 * CalcConst.ROTATION_DEGREE_PRECISION; i++) {\n        lookup.push([Math.cos(i * CalcConst.RADIAN_FACTOR), Math.sin(i * CalcConst.RADIAN_FACTOR)]);\n    }\n    return lookup;\n})();\nexport function sign(x) {\n    return typeof x === \"number\" ? x ? x < 0 ? -1 : 1 : x === x ? 0 : NaN : NaN;\n}\nexport function rotationDeg(rotation) {\n    let deg = (rotation * CalcConst.ROTATION_DEGREE_PRECISION) | 0;\n    while (deg < 0) {\n        deg += CalcConst.DEG360;\n    }\n    while (deg >= CalcConst.DEG360) {\n        deg -= CalcConst.DEG360;\n    }\n    return CalcConst.ROTATION_LOOKUP[deg];\n}\nexport function rotationRad(rotation) {\n    const deg = rotation * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\n    return this.rotationDeg(deg / CalcConst.ROTATION_DEGREE_PRECISION);\n}\nexport function closestRadianRotation(radian) {\n    let deg = radian * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\n    while (deg < 0) {\n        deg += CalcConst.DEG360;\n    }\n    while (deg >= CalcConst.DEG360) {\n        deg -= CalcConst.DEG360;\n    }\n    return deg * CalcConst.RADIAN_FACTOR / CalcConst.ROTATION_DEGREE_PRECISION;\n}\n//# sourceMappingURL=Calc.js.map","import { rotationRad } from \"../Calc\";\nexport class Vec2Const {\n}\nVec2Const.EPSILON = 1e-8;\nVec2Const.IDENTITY = { x: 1, y: 1 };\nVec2Const.X_DIM = { x: 1, y: 0 };\nVec2Const.Y_DIM = { x: 0, y: 1 };\nexport class Vec2 {\n    constructor(x = 0, y = 0) {\n        this.angle = this.horizontalAngle;\n        this.direction = this.horizontalAngle;\n        this.x = x;\n        this.y = y;\n    }\n    get isZero() {\n        return this.x === 0 && this.y === 0;\n    }\n    create(x = 0, y = 0) {\n        return new (this.constructor)(x, y);\n    }\n    set(src) {\n        this.x = src.x;\n        this.y = src.y;\n        return this;\n    }\n    clone(out) {\n        const result = out ? out.set(this) : this.create(this.x, this.y);\n        return result;\n    }\n    toInt() {\n        this.x |= 0;\n        this.y |= 0;\n        return this;\n    }\n    ceil() {\n        this.x = Math.ceil(this.x);\n        this.y = Math.ceil(this.y);\n        return this;\n    }\n    toDecimal() {\n        this.x += Vec2Const.EPSILON;\n        this.y += Vec2Const.EPSILON;\n        return this;\n    }\n    lengthSq() { return (this.x * this.x + this.y * this.y); }\n    length() { return Math.sqrt(this.lengthSq()); }\n    horizontalAngle() { return Math.atan2(this.y, this.x); }\n    rotate(angle) {\n        const rot = rotationRad(angle);\n        const nx = (this.x * rot[0]) - (this.y * rot[1]);\n        const ny = (this.x * rot[1]) + (this.y * rot[0]);\n        this.x = nx;\n        this.y = ny;\n        return this;\n    }\n    rotateAround(center, angle) {\n        return this.subtract(center).rotate(angle).add(center);\n    }\n    normalize() {\n        const len = this.length();\n        if (len === 0) {\n            this.x = 1;\n            this.y = 0;\n        }\n        else {\n            this.x = this.x / len;\n            this.y = this.y / len;\n        }\n        return this;\n    }\n    scale(vectorB) {\n        this.x = this.x * vectorB.x;\n        this.y = this.y * vectorB.y;\n        return this;\n    }\n    relate(vectorB) {\n        this.x = this.x / vectorB.x;\n        this.y = this.y / vectorB.y;\n        return this;\n    }\n    multiply(scalar) {\n        this.x = this.x * scalar;\n        this.y = this.y * scalar;\n        return this;\n    }\n    add(vectorB) {\n        this.x = this.x + vectorB.x;\n        this.y = this.y + vectorB.y;\n        return this;\n    }\n    subtract(vectorB) {\n        this.x = this.x - vectorB.x;\n        this.y = this.y - vectorB.y;\n        return this;\n    }\n    invert() {\n        this.x = -this.x;\n        this.y = -this.y;\n        return this;\n    }\n    equals(target) {\n        return this.x === target.x && this.y === target.y;\n    }\n    almostEquals(target) {\n        return Math.abs(this.x - target.x) < Vec2Const.EPSILON && Math.abs(this.y - target.y) < Vec2Const.EPSILON;\n    }\n    getNormal(isNormalized) {\n        const result = this.clone();\n        if (!isNormalized) {\n            result.set(this).normalize();\n        }\n        const temp = result.x;\n        result.x = result.y;\n        result.y = -temp;\n        return result;\n    }\n    dot(vectorB) { return (this.x * vectorB.x + this.y * vectorB.y); }\n    cross(vectorB) { return ((this.x * vectorB.y) - (this.y * vectorB.x)); }\n    projectOnto(vectorB) {\n        const coeff = ((this.x * vectorB.x) + (this.y * vectorB.y)) / ((vectorB.x * vectorB.x) + (vectorB.y * vectorB.y));\n        this.x = coeff * vectorB.x;\n        this.y = coeff * vectorB.y;\n        return this;\n    }\n    verticalAngle() { return Math.atan2(this.x, this.y); }\n    rotateBy(rotation) {\n        const angle = -this.horizontalAngle() + rotation;\n        return this.rotate(angle);\n    }\n    max(v) {\n        this.x = Math.max(this.x, v.x);\n        this.y = Math.max(this.y, v.y);\n        return this;\n    }\n    min(v) {\n        this.x = Math.min(this.x, v.x);\n        this.y = Math.min(this.y, v.y);\n        return this;\n    }\n    zero() {\n        this.x = 0;\n        this.y = 0;\n        return this;\n    }\n}\n//# sourceMappingURL=Vec2.js.map","import { forEach } from \"../Arr\";\nimport { clone, setProperties, wipe } from \"../Obj\";\nimport { isFunction, isNotUndefined } from \"../Test\";\nimport { List } from \"./List\";\nexport class Dictionary {\n    constructor() {\n        this._lookup = Object.create(null);\n        this._list = new List();\n        this._isDirty = false;\n    }\n    create() {\n        return new (this.constructor)();\n    }\n    has(key) {\n        return this._lookup[key] !== undefined;\n    }\n    contains(key) {\n        return this.has(key);\n    }\n    get(key) {\n        return this._lookup[key];\n    }\n    set(key, value) {\n        this._isDirty = this._isDirty || this.has(key);\n        if (value !== undefined) {\n            this._lookup[key] = value;\n            if (!this._isDirty) {\n                this._list.push(value);\n            }\n        }\n        return this;\n    }\n    delete(key) {\n        if (this.has(key)) {\n            delete this._lookup[key];\n            this._isDirty = true;\n        }\n        return this;\n    }\n    clear() {\n        wipe(this._lookup);\n        this._list.clear();\n        return this;\n    }\n    get values() {\n        this.cleanList();\n        return this._list.values;\n    }\n    get keys() {\n        return Object.keys(this._lookup);\n    }\n    get list() {\n        this.cleanList();\n        return this._list;\n    }\n    get count() {\n        let result = 0;\n        if (this._isDirty) {\n            result = this.keys.length;\n        }\n        else {\n            result = this._list.count;\n        }\n        return result;\n    }\n    cleanList() {\n        if (this._isDirty) {\n            this.reCreateList();\n        }\n    }\n    reCreateList() {\n        let lookup = this._lookup;\n        let keys = Object.keys(this._lookup);\n        let i = -1;\n        let list = this._list;\n        list.clear();\n        while (++i < keys.length) {\n            list.add(lookup[keys[i]]);\n        }\n    }\n    clone() {\n        let result = this.create();\n        result._isDirty = this._isDirty;\n        result._list = this._list.clone();\n        result._lookup = clone(this._lookup);\n        return result;\n    }\n    toJSON() {\n        return this._lookup;\n    }\n    serialize() {\n        let obj = Object.create(null);\n        forEach(this.keys, (key) => {\n            let v = this.get(key);\n            obj[key] = isFunction(v.serialize) ? v.serialize() : v;\n        });\n        return obj;\n    }\n    deserialize(obj, ...types) {\n        let [T, ...passthroughT] = types;\n        this.clear();\n        if (isNotUndefined(T)) {\n            if (isNotUndefined(T.prototype.deserialize)) {\n                for (let key of Object.keys(obj)) {\n                    this.set(key, (new T()).deserialize(obj[key], ...passthroughT));\n                }\n            }\n            else {\n                for (let key of Object.keys(obj)) {\n                    let newT = new T();\n                    setProperties(newT, obj[key]);\n                    this.set(key, newT);\n                }\n            }\n        }\n        else {\n            for (let key of Object.keys(obj)) {\n                this.set(key, obj[key]);\n            }\n        }\n        return this;\n    }\n}\n//# sourceMappingURL=Dictionary.js.map","import * as Arr from \"../Arr\";\nimport { clone, equals } from \"../Obj\";\nimport { isArray, isFunction, isNotNullOrUndefined, hasWindow } from \"../Test\";\nimport { Dictionary } from \"./Dictionary\";\nif (hasWindow() && !window.Symbol) {\n    window.Symbol = { iterator: \"iterator\" };\n}\nexport class List {\n    constructor(arr) {\n        this._array = [];\n        this._index = null;\n        this._indexer = null;\n        this._pointer = 0;\n        if (arr === undefined) {\n            this._array = new Array();\n        }\n        else {\n            if (arr instanceof (List)) {\n                this._array = Arr.shallowCopy(arr._array);\n            }\n            else {\n                this._array = Arr.shallowCopy(arr);\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    next(value) {\n        return {\n            done: this._pointer >= this.length,\n            value: this._pointer < this.length ? this._array[this._pointer++] : (this._pointer = 0, undefined)\n        };\n    }\n    create(arr) {\n        return new (this.constructor)(arr);\n    }\n    get values() {\n        return this._array;\n    }\n    get(pos) {\n        return this._array[pos];\n    }\n    getByIndex(key) {\n        let result;\n        return isNotNullOrUndefined(this._index) ? this._index.get(key) : undefined;\n    }\n    set(pos, v) {\n        if (pos >= 0 && pos < this.length) {\n            this._array[pos | 0] = v;\n            if (this._indexer !== null) {\n                this._index.set(this._indexer(v), v);\n            }\n        }\n        else {\n            throw new Error(`index out of bounds on <List>.set(${pos}, ${v.toString()})`);\n        }\n        return this;\n    }\n    get count() {\n        return this._array.length;\n    }\n    get length() {\n        return this._array.length;\n    }\n    get indexer() {\n        return this._indexer;\n    }\n    set indexer(fn) {\n        this._indexer = fn;\n        this._reindex();\n    }\n    _reindex() {\n        if (this._indexer === null) {\n            this._index = null;\n        }\n        else {\n            if (this._index === null) {\n                this._index = new Dictionary();\n            }\n            else {\n                this._index.clear();\n            }\n            this.forEach((el) => this._index.set(this._indexer(el), el));\n        }\n    }\n    fill(size, populator) {\n        size = Math.max(0, size || 0);\n        if (isFunction(populator)) {\n            this._array = Arr.create(size, populator);\n        }\n        else if (!(populator instanceof Object)) {\n            this._array = Arr.create(size, () => populator);\n        }\n        else {\n            this._array = Arr.create(size, () => clone(populator));\n        }\n        this._reindex();\n        return this;\n    }\n    clear() {\n        this._array.length = 0;\n        if (this._index !== null) {\n            this._index.clear();\n        }\n        return this;\n    }\n    add(v) {\n        this._array.push(v);\n        if (this._indexer !== null) {\n            this._index.set(this._indexer(v), v);\n        }\n        return this;\n    }\n    insertAt(pos, v) {\n        Arr.insertAt(this._array, pos, v);\n        if (this._indexer !== null) {\n            this._index.set(this._indexer(v), v);\n        }\n        return this;\n    }\n    push(v) {\n        if (this._indexer !== null) {\n            this._index.set(this._indexer(v), v);\n        }\n        return this._array.push(v);\n    }\n    pop() {\n        let result = this._array.pop();\n        if (result !== undefined && this._indexer !== null) {\n            this._index.delete(this._indexer(result));\n        }\n        return result;\n    }\n    shift() {\n        let result = this._array.shift();\n        if (result !== undefined && this._indexer !== null) {\n            this._index.delete(this._indexer(result));\n        }\n        return result;\n    }\n    concat(v) {\n        let arr;\n        let arr2 = v instanceof List ? v.values : v;\n        arr = Arr.concat(this._array, arr2);\n        return this.create(arr);\n    }\n    index(arr) {\n        if (this._indexer !== null) {\n            Arr.forEach(arr, (el) => {\n                this._index.set(this._indexer(el), el);\n            });\n        }\n    }\n    unindexEl(el) {\n        if (this._indexer !== null) {\n            this._index.delete(this._indexer(el));\n        }\n    }\n    append(v) {\n        let arr2 = v instanceof List ? v.values : v;\n        Arr.append(this._array, arr2);\n        this.index(arr2);\n        return this;\n    }\n    copy(src) {\n        let arr2 = src instanceof List ? src.values : src;\n        Arr.deepCopyInto(arr2, this._array);\n        this.index(arr2);\n        return this;\n    }\n    shallowCopy(src) {\n        let arr2 = src instanceof List ? src.values : src;\n        Arr.shallowCopyInto(arr2, this._array);\n        this.index(arr2);\n        return this;\n    }\n    clone() {\n        const arr = Arr.deepCopy(this._array);\n        let result = this.create(arr);\n        if (this._indexer !== null) {\n            result._indexer = this._indexer;\n            result._index = this._index.clone();\n        }\n        return result;\n    }\n    remove(v) {\n        Arr.remove(this._array, v);\n        this.unindexEl(v);\n        return this;\n    }\n    removeFirst(fn) {\n        let result = this.removeAt(this.indexOf(fn));\n        this.unindexEl(result);\n        return result;\n    }\n    removeAt(n) {\n        let result = Arr.removeAt(this._array, n);\n        this.unindexEl(result);\n        return result;\n    }\n    forEach(fn, startIndex = 0) {\n        Arr.forEach(this._array, fn, startIndex);\n        return this;\n    }\n    forSome(filter, fn) {\n        Arr.forSome(this._array, filter, fn);\n        return this;\n    }\n    until(fnOrTest, fn, startIndex) {\n        Arr.until(this._array, fnOrTest, fn, startIndex);\n        return this;\n    }\n    reverseForEach(fn) {\n        Arr.reverseForEach(this._array, fn);\n        return this;\n    }\n    reverseUntil(fnOrTest, fn) {\n        Arr.reverseUntil(this._array, fnOrTest, fn);\n        return this;\n    }\n    some(fn) {\n        return Arr.some(this._array, fn);\n    }\n    all(fn) {\n        return Arr.all(this._array, fn);\n    }\n    indexOf(v) {\n        let result = -1;\n        if (isFunction(v)) {\n            result = Arr.indexOf(this._array, v);\n        }\n        else {\n            result = Arr.indexOfElement(this._array, v);\n        }\n        return result;\n    }\n    contains(v) {\n        let result = false;\n        if (isFunction(v)) {\n            result = this.find(v) !== undefined;\n        }\n        else {\n            if (this._indexer !== null) {\n                result = this._index.contains(this._indexer(v));\n            }\n            else {\n                result = Arr.indexOfElement(this._array, v) !== -1;\n            }\n        }\n        return result;\n    }\n    reverse() {\n        Arr.reverse(this._array);\n        return this;\n    }\n    first(fn) {\n        let index = -1;\n        let result;\n        if (fn === undefined) {\n            index = 0;\n        }\n        else {\n            index = Arr.indexOf(this._array, fn);\n        }\n        return index === -1 ? undefined : this.get(index);\n    }\n    find(fn) {\n        return this.first(fn);\n    }\n    last() {\n        return this.length === 0 ? undefined : this.get(this.length - 1);\n    }\n    filter(fn) {\n        return this.create(Arr.filter(this._array, fn));\n    }\n    select(fn) {\n        return this.create(Arr.filter(this._array, fn));\n    }\n    selectInto(src, fn) {\n        let arr = src instanceof List ? src.values : src;\n        Arr.filterInto(arr, this._array, fn);\n        this.index(arr);\n        return this;\n    }\n    head(count = 1) {\n        count = Math.max(0, count);\n        return this.create(Arr.slice(this._array, 0, count));\n    }\n    tail(count = 1) {\n        count = Math.min(this._array.length, count);\n        return this.create(Arr.slice(this._array, Math.max(0, this._array.length - count)));\n    }\n    splice(pos = 0, remove = Infinity, insert = []) {\n        Arr.splice(this._array, pos, remove, isArray(insert) ? insert : insert.values);\n        this._reindex();\n        return this;\n    }\n    orderBy(fn) {\n        this._array.sort(fn);\n        return this;\n    }\n    map(fn) {\n        return this.create(Arr.map(this._array, fn));\n    }\n    mapInto(src, fn) {\n        let arr = src instanceof List ? src.values : src;\n        Arr.mapInto(arr, this._array, fn);\n        this._reindex();\n        return this;\n    }\n    reduce(fn, start) {\n        return Arr.reduce(this._array, fn, start);\n    }\n    reduceUntil(fn, test, start) {\n        return Arr.reduceUntil(this._array, fn, test, start);\n    }\n    reverseReduce(fn, start) {\n        return Arr.reverseReduce(this._array, fn, start);\n    }\n    reverseReduceUntil(fn, test, start) {\n        return Arr.reverseReduceUntil(this._array, fn, test, start);\n    }\n    equals(b) {\n        const result = equals(this._array, b.values);\n        return result;\n    }\n    same(b) {\n        let a = this;\n        let count = 0;\n        if (a.length === b.length) {\n            if (a.indexer !== null) {\n                b.until((el) => !a.contains(el), (el, i) => ++count);\n            }\n            else {\n                a.until((el) => !b.contains(el), (el, i) => ++count);\n            }\n        }\n        return count === a.length;\n    }\n    intersect(b) {\n        let result = this.create();\n        let long;\n        let short;\n        result.indexer = this.indexer;\n        if (this.length < b.length) {\n            short = this, long = b;\n        }\n        else {\n            long = this, short = b;\n        }\n        if (long.indexer !== null) {\n            short.forEach((el) => {\n                if (long.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        else {\n            long.forEach((el) => {\n                if (short.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        return result;\n    }\n    union(b) {\n        let result = this.create();\n        let long;\n        let short;\n        result.indexer = this.indexer;\n        if (this.length < b.length) {\n            short = this, long = b;\n        }\n        else {\n            long = this, short = b;\n        }\n        if (long.indexer !== null) {\n            result = long.clone();\n            short.forEach((el) => {\n                if (!long.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        else {\n            result = short.clone();\n            long.forEach((el) => {\n                if (!short.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        return result;\n    }\n    subtract(b) {\n        let result = this.create();\n        result.indexer = this.indexer;\n        result = this.select((el) => !b.contains(el));\n        return result;\n    }\n    zip(list, fn = (t, u) => [t, u]) {\n        let result = this.create();\n        let length = list.length;\n        this.until(function (el, i) {\n            return i >= length;\n        }, function (el, i) {\n            result.push(fn(el, list.get(i)));\n        });\n        return result;\n    }\n    unzip(fn = (el) => [el[0], el[1]]) {\n        let result = [this.create(), this.create()];\n        this.forEach(function (el) {\n            let tuple = fn(el);\n            result[0].push(tuple[0]);\n            result[1].push(tuple[1]);\n        });\n        return result;\n    }\n    flatten(maxDepth = Infinity) {\n        return this.create(maxDepth < 1 ? this.values : this._flattenInner(this.values, maxDepth));\n    }\n    _flattenInner(src, maxDepth, depth = -1, result = []) {\n        let i = -1;\n        const len = src.length;\n        if (++depth > maxDepth) {\n            result.push(src);\n        }\n        else {\n            while (++i < len) {\n                if (isArray(src[i])) {\n                    this._flattenInner(src[i], maxDepth, depth, result);\n                }\n                else if (src[i] instanceof List) {\n                    this._flattenInner(src[i].values, maxDepth, depth, result);\n                }\n                else {\n                    result.push(src[i]);\n                }\n            }\n        }\n        return result;\n    }\n    toJSON() {\n        return this.values;\n    }\n    serialize() {\n        return this.values.map((el) => isFunction(el.serialize) ? el.serialize() : el);\n    }\n    deserialize(array, ...types) {\n        Arr.deserialize(array, this._array, ...types);\n        return this;\n    }\n}\n//# sourceMappingURL=List.js.map","import { binarySearch } from \"../Arr\";\nimport { equals } from \"../Obj\";\nimport { isFunction, hasWindow } from \"../Test\";\nimport { List } from \"./List\";\nif (hasWindow() && !window.Symbol) {\n    window.Symbol = { iterator: \"iterator\" };\n}\nexport class Comparer {\n}\nComparer.StringAsc = function (a, b) { return a < b ? -1 : a === b ? 0 : 1; };\nComparer.StringDesc = function (a, b) { return a < b ? 1 : a === b ? 0 : -1; };\nComparer.NumberAsc = function (a, b) { return a < b ? -1 : a === b ? 0 : 1; };\nComparer.NumberDesc = function (a, b) { return a < b ? 1 : a === b ? 0 : -1; };\nexport class SortedList {\n    constructor(comparer = ((a, b) => a < b ? -1 : a === b ? 0 : 1), arr) {\n        this._list = new List();\n        this._pointer = 0;\n        this._cmp = comparer;\n        if (arr === undefined) {\n            this._list = new List();\n        }\n        else {\n            if (arr instanceof (List) || arr instanceof (SortedList)) {\n                this.copy(arr.values);\n            }\n            else {\n                this.copy(arr);\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    next(value) {\n        return {\n            done: this._pointer >= this.length,\n            value: this._pointer < this.length ? this.values[this._pointer++] : (this._pointer = 0, undefined)\n        };\n    }\n    create(comparer, arr) {\n        return new (this.constructor)(comparer, arr);\n    }\n    get values() {\n        return this._list.values;\n    }\n    get(pos) {\n        return this._list.get(pos);\n    }\n    get count() {\n        return this._list.length;\n    }\n    get length() {\n        return this._list.length;\n    }\n    get comparer() {\n        return this._cmp;\n    }\n    set comparer(v) {\n        this._cmp = v;\n        this.sort();\n    }\n    sort() {\n        this._list.orderBy(this._cmp);\n    }\n    fill(size, populator) {\n        this._list.fill(size, populator);\n        this.sort();\n        return this;\n    }\n    clear() {\n        this._list.clear();\n        return this;\n    }\n    add(v) {\n        let index = this.getInsertIndex(v);\n        this._list.insertAt(index, v);\n        return this;\n    }\n    pop() {\n        return this._list.pop();\n    }\n    shift() {\n        return this._list.shift();\n    }\n    bulkAdd(v) {\n        if (v instanceof List || v instanceof SortedList) {\n            this._list.append(v.values);\n        }\n        else {\n            this._list.append(v);\n        }\n        this.sort();\n        return this;\n    }\n    copy(src) {\n        if (src instanceof List || src instanceof SortedList) {\n            this._list.copy(src.values);\n        }\n        else {\n            this._list.copy(src);\n        }\n        this.sort();\n        return this;\n    }\n    clone() {\n        return this.create(this._cmp, this._list.clone());\n    }\n    remove(v) {\n        let index = this.indexOf(v);\n        if (index !== -1) {\n            this._list.removeAt(index);\n        }\n        return this;\n    }\n    removeAt(n) {\n        return this._list.removeAt(n);\n    }\n    removeFirst(fn) {\n        return this._list.removeFirst(fn);\n    }\n    forEach(fn, startIndex = 0) {\n        this._list.forEach(fn, startIndex);\n        return this;\n    }\n    forSome(filter, fn) {\n        this._list.forSome(filter, fn);\n        return this;\n    }\n    until(fnOrTest, fn, startIndex) {\n        this._list.until(fnOrTest, fn, startIndex);\n        return this;\n    }\n    reverseForEach(fn) {\n        this._list.reverseForEach(fn);\n        return this;\n    }\n    reverseUntil(fnOrTest, fn) {\n        this._list.reverseUntil(fnOrTest, fn);\n        return this;\n    }\n    some(fn) {\n        return this._list.some(fn);\n    }\n    all(fn) {\n        return this._list.all(fn);\n    }\n    getInsertIndex(v) {\n        return binarySearch(this._list.values, (el) => this._cmp(el, v), true);\n    }\n    indexOf(v) {\n        let result = -1;\n        if (v instanceof Function) {\n            result = this._list.indexOf(v);\n        }\n        else {\n            result = binarySearch(this._list.values, (el) => this._cmp(el, v), false);\n        }\n        return result;\n    }\n    contains(v) {\n        return this.indexOf(v) !== -1;\n    }\n    first(fn) {\n        return this._list.first(fn);\n    }\n    find(fn) {\n        return this._list.find(fn);\n    }\n    last() {\n        return this._list.last();\n    }\n    filter(fn) {\n        return this.create(this._cmp, this._list.filter(fn));\n    }\n    select(fn) {\n        return this.create(this._cmp, this._list.filter(fn));\n    }\n    selectInto(src, fn) {\n        if (src instanceof List || src instanceof SortedList) {\n            this._list.selectInto(src.values, fn);\n        }\n        else {\n            this._list.selectInto(src, fn);\n        }\n        this.sort();\n        return this;\n    }\n    head(count = 1) {\n        return this.create(this.comparer, this._list.head(count));\n    }\n    tail(count = 1) {\n        return this.create(this.comparer, this._list.tail(count));\n    }\n    map(fn) {\n        return this._list.map(fn);\n    }\n    mapInto(src, fn) {\n        if (src instanceof List || src instanceof SortedList) {\n            this._list.mapInto(src.values, fn);\n        }\n        else {\n            this._list.mapInto(src, fn);\n        }\n        this.sort();\n        return this;\n    }\n    reduce(fn, start) {\n        return this._list.reduce(fn, start);\n    }\n    reduceUntil(fn, test, start) {\n        return this._list.reduceUntil(fn, test, start);\n    }\n    reverseReduce(fn, start) {\n        return this._list.reverseReduce(fn, start);\n    }\n    reverseReduceUntil(fn, test, start) {\n        return this._list.reverseReduceUntil(fn, test, start);\n    }\n    equals(b) {\n        const result = equals(this._list.values, b.values);\n        return result;\n    }\n    same(b) {\n        return this.equals(b);\n    }\n    intersect(b) {\n        let result = this.create(this.comparer);\n        let long;\n        let short;\n        if (this.length > 0 && b.length > 0) {\n            if (this.length < b.length) {\n                short = this, long = b;\n            }\n            else {\n                long = this, short = b;\n            }\n            if (b instanceof SortedList && this.comparer === b.comparer) {\n                let longPos = long.getInsertIndex(short.get(0)) - 1;\n                let lastPos = long.getInsertIndex(short.last()) - 1;\n                let i = -1;\n                let shortLen = short.length;\n                while (longPos < lastPos && ++i < shortLen) {\n                    let el = short.get(i);\n                    let aVsB;\n                    while (++longPos < lastPos && (aVsB = this.comparer(long.get(longPos), el)) < 0) {\n                        void (0);\n                    }\n                    if (longPos < lastPos && aVsB === 0) {\n                        result.add(el);\n                    }\n                }\n            }\n            else if (long instanceof SortedList || (long instanceof List && long.indexer !== null)) {\n                short.forEach((el) => {\n                    if (long.contains(el)) {\n                        result.add(el);\n                    }\n                });\n            }\n            else {\n                result = result.bulkAdd(short.toList().intersect(long));\n            }\n        }\n        return result;\n    }\n    union(b) {\n        let result;\n        let long;\n        let short;\n        if (this.length > 0 || b.length > 0) {\n            if (this.length < b.length) {\n                short = this, long = b;\n            }\n            else {\n                long = this, short = b;\n            }\n            if (b instanceof SortedList && this.comparer === b.comparer) {\n                result = this.create(this.comparer, long.values);\n                let longPos = long.getInsertIndex(short.get(0)) - 1;\n                let lastPos = long.getInsertIndex(short.last()) - 1;\n                let i = -1;\n                let shortLen = short.length;\n                while (++i < shortLen && longPos < lastPos) {\n                    let el = short.get(i);\n                    let aVsB = -1;\n                    while (++longPos < lastPos && (aVsB = this.comparer(long.get(longPos), el)) < 0) {\n                        void (0);\n                    }\n                    if ((aVsB > 0 && longPos < lastPos) || longPos === lastPos) {\n                        result.add(el);\n                    }\n                }\n                if (i < shortLen) {\n                    --i;\n                    while (++i < shortLen) {\n                        result.add(short.get(i));\n                    }\n                }\n            }\n            else if (long instanceof SortedList || (long instanceof List && long.indexer !== null)) {\n                result = this.create(this.comparer, long.values);\n                short.forEach((el) => {\n                    if (!long.contains(el)) {\n                        result.add(el);\n                    }\n                });\n            }\n            else {\n                result = this.create(this.comparer, short.toList().union(long));\n            }\n        }\n        else {\n            result = this.create(this.comparer);\n        }\n        return result;\n    }\n    toList() {\n        return new List(this.values);\n    }\n    toJSON() {\n        return this.values;\n    }\n    serialize() {\n        return this.values.map((el) => isFunction(el.serialize) ? el.serialize() : el);\n    }\n    deserialize(array, ...types) {\n        this._list.deserialize(array, ...types);\n        this.sort();\n        return this;\n    }\n}\n//# sourceMappingURL=SortedList.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { map } from \"../Arr\";\nimport { clone, isSameClass, setProperties } from \"../Obj\";\nimport { Initable } from \"../standard/mixins/Initable\";\nimport { isArray } from \"../Test\";\nimport { newUUID } from \"../Util\";\nimport { Dictionary } from \"./Dictionary\";\nimport { List } from \"./List\";\nimport { Stack } from \"./Stack\";\nlet Tree = Tree_1 = class Tree {\n    constructor(id) {\n        this.id = \"\";\n        this.parent = null;\n        this.children = null;\n        this.data = null;\n        this.virtual = false;\n        this.id = id || newUUID();\n    }\n    static fromObject(obj) {\n        const parent = (this instanceof Tree_1) ? this : null;\n        const root = new Tree_1(obj.id).init({ data: obj.data, parent });\n        if (obj.children !== undefined && isArray(obj.children)) {\n            root.children = new List(map(obj.children, Tree_1.fromObject.bind(root)));\n        }\n        return root;\n    }\n    static fromNodeList(nodes, mapcfg, virtualRoot = false) {\n        let result = new Tree_1();\n        let mapResolver = (key) => {\n            return !mapcfg || typeof (mapcfg[key]) === \"undefined\" ? (el) => el[key] :\n                typeof (mapcfg[key]) === \"string\" ? (el) => el[mapcfg[key]] :\n                    mapcfg[key];\n        };\n        let map = {\n            id: mapResolver(\"id\"),\n            parent: mapResolver(\"parent\"),\n            data: mapResolver(\"data\")\n        };\n        let list = new List(nodes);\n        let lookup = new Dictionary();\n        function getLookupKey(node) {\n            return node.parent ? `${node.parent.id}_${node.id}` : \"_root_\" + node.id;\n        }\n        let nodeList = list.map((el) => new Tree_1().init({ id: map.id(el), data: map.data(el) }));\n        nodeList.forEach((node, i) => {\n            if (!lookup.has(node.id)) {\n                lookup.set(node.id, []);\n            }\n            lookup.get(node.id).push(node);\n        });\n        let rootNodes = new List();\n        list.forEach((el, i) => {\n            let parentId = map.parent(el);\n            let nodeId = map.id(el);\n            if (lookup.contains(parentId)) {\n                lookup.get(parentId).forEach((p) => p.add(nodeList.get(i)));\n            }\n            else {\n                rootNodes.add(nodeList.get(i));\n            }\n        });\n        if (virtualRoot === false) {\n            result = rootNodes.first();\n        }\n        else {\n            result = new Tree_1().init({ virtual: true });\n            rootNodes.forEach((el) => result.add(el));\n        }\n        return result;\n    }\n    create(...args) {\n        return new (this.constructor)(...args);\n    }\n    init(obj) {\n        setProperties(this, obj);\n        return this;\n    }\n    insertAt(pos, data, id) {\n        let node;\n        if (this.children === null || this.children.count <= pos) {\n            node = this.add(data);\n        }\n        else {\n            node = this.create(id).init({ data, parent: this });\n            this.children.insertAt(pos, node);\n        }\n        return node;\n    }\n    add(data, id) {\n        let node;\n        if (this.children === null) {\n            this.children = new List();\n        }\n        if (isSameClass(data, this)) {\n            node = data;\n            node.parent = this;\n            this.children.add(node);\n        }\n        else {\n            node = (this.create(id)).init({ data: data, parent: this });\n            this.children.add(node);\n        }\n        return node;\n    }\n    remove() {\n        if (this.parent !== null) {\n            this.parent.children.remove(this);\n        }\n    }\n    prune() {\n        if (this.children !== null) {\n            this.children\n                .forEach(function (el, i) {\n                el.parent = null;\n            })\n                .clear();\n        }\n        this.children = null;\n        return this;\n    }\n    reduce(fn, start) {\n        const stack = new Stack();\n        let acc = start;\n        if (!fn) {\n            fn = (acc, cur) => (acc.push({ id: cur.id, parent: cur.parent ? cur.parent.id : null, data: cur.data }), acc);\n        }\n        if (start === undefined) {\n            acc = [];\n        }\n        let cur;\n        let i;\n        stack.push(this);\n        while (cur = stack.pop()) {\n            acc = fn(acc, cur);\n            i = (cur.children && cur.children.count) || 0;\n            while (i--) {\n                stack.push(cur.children.get(i));\n            }\n        }\n        return acc;\n    }\n    clone() {\n        const result = this.create();\n        result.id = this.id;\n        result.parent = this.parent;\n        result.children = this.children === null ? null : this.children.clone();\n        result.data = this.data === null || this.data === undefined ? this.data : clone(this.data);\n        return result;\n    }\n    duplicateNode() {\n        const result = this.create();\n        result.id = this.id;\n        result.parent = this.parent;\n        result.children = this.children;\n        result.data = this.data;\n        return result;\n    }\n    filter(condition) {\n        const root = this.duplicateNode();\n        const children = this.children;\n        if (children !== null) {\n            root.children =\n                root.children\n                    .select(condition)\n                    .map(function (el, i) {\n                    return el.filter(condition);\n                });\n        }\n        return root;\n    }\n    select(condition, acc = new List()) {\n        const result = acc;\n        const children = this.children;\n        if (condition === undefined || condition(this)) {\n            result.add(this);\n        }\n        if (children) {\n            children.reduce(function (acc, cur) {\n                return cur.select(condition, acc);\n            }, result);\n        }\n        return result;\n    }\n    find(condition) {\n        let result = null;\n        const children = this.children;\n        if (children !== null) {\n            let i = -1;\n            const len = this.children.count;\n            const val = this.children.values;\n            while (++i < len) {\n                if (condition(val[i].data)) {\n                    result = val[i];\n                    break;\n                }\n                else {\n                    result = val[i].children !== null ? val[i].find(condition) : null;\n                    if (result !== null) {\n                        break;\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    depth() {\n        let result = 0;\n        let node = this;\n        while (node.parent) {\n            node = node.parent;\n            ++result;\n        }\n        return result;\n    }\n    sort(comparer) {\n        if (this.children !== null) {\n            this.children.orderBy(comparer);\n            this.children.forEach((el) => el.sort(comparer));\n        }\n        return this;\n    }\n    toJSON() {\n        let result = new List();\n        result.push({ id: this.id, data: this.data, parent: this.parent === null ? null : this.parent.id, children: this.children === null ? null : this.children.map((el) => el.id) });\n        if (this.children !== null) {\n            this.children.forEach((node) => result.append(node.toJSON()));\n        }\n        return result.toJSON();\n    }\n    serialize() {\n        let result = new List();\n        result.push({ id: this.id, data: this.data, parent: this.parent === null ? null : this.parent.id, children: this.children === null ? null : this.children.map((el) => el.id) });\n        if (this.children !== null) {\n            this.children.forEach((node) => result.append(node.serialize()));\n        }\n        return result.serialize();\n    }\n};\nTree = Tree_1 = __decorate([\n    Initable,\n    __metadata(\"design:paramtypes\", [Object])\n], Tree);\nexport { Tree };\nvar Tree_1;\n//# sourceMappingURL=Tree.js.map","import { deepCopy, slice, deserialize } from \"../Arr\";\nimport { isFunction } from \"../Test\";\nimport { List } from \"./List\";\nexport class Stack {\n    constructor(size) {\n        this.DEFAULT_SIZE = 100;\n        this._pos = 0;\n        this._limit = 0;\n        if (!size) {\n            size = this.DEFAULT_SIZE;\n        }\n        this.DEFAULT_SIZE = size;\n        this._array = new Array(size);\n        this.push = this.fastPush;\n    }\n    get values() {\n        return slice(this._array, 0, this._pos);\n    }\n    get depth() {\n        return this._pos;\n    }\n    get size() {\n        return this._pos;\n    }\n    get isEmpty() {\n        return this.size === 0;\n    }\n    get limit() {\n        return this._limit;\n    }\n    set limit(value) {\n        if (value < 0) {\n            value = 0;\n        }\n        this._limit = value;\n        if (value === 0) {\n            this.push = this.fastPush;\n        }\n        else {\n            this.push = this.limitedPush;\n            this.limitObjects();\n        }\n    }\n    create(size) {\n        return new (this.constructor)(size);\n    }\n    push(obj) {\n    }\n    fastPush(obj) {\n        this._array[this._pos++] = obj;\n    }\n    limitedPush(obj) {\n        this._array[this._pos] = obj;\n        ++this._pos;\n        this.limitObjects();\n    }\n    pop() {\n        let result = undefined;\n        if (this._pos !== 0) {\n            result = this._array[--this._pos];\n        }\n        return result;\n    }\n    peek() {\n        return this._array[this._pos - 1];\n    }\n    peekAt(index) {\n        return index < 0 || index >= this._pos ? undefined : this._array[this._pos - index - 1];\n    }\n    toList() {\n        const result = new List();\n        return new List(this.values);\n    }\n    clear() {\n        this._pos = 0;\n        this._array.length = this.DEFAULT_SIZE;\n        return this;\n    }\n    clone() {\n        const arr = deepCopy(this._array);\n        let result = this.create(this.DEFAULT_SIZE);\n        result._array = arr;\n        result._limit = this._limit;\n        result._pos = this._pos;\n        return result;\n    }\n    limitObjects() {\n        while (this._pos > this._limit) {\n            this._array.shift();\n            --this._pos;\n        }\n    }\n    toJSON() {\n        return slice(this.values, 0, this._pos);\n    }\n    serialize() {\n        return slice(this.values, 0, this._pos).map((el) => isFunction(el.serialize) ? el.serialize() : el);\n    }\n    deserialize(array, ...types) {\n        deserialize(array, this._array, ...types);\n        this._pos = array.length;\n        return this;\n    }\n}\n//# sourceMappingURL=Stack.js.map","export var MocDataType;\n(function (MocDataType) {\n    MocDataType[MocDataType[\"LinearInt\"] = 0] = \"LinearInt\";\n    MocDataType[MocDataType[\"RandomInt\"] = 1] = \"RandomInt\";\n    MocDataType[MocDataType[\"LinearFloat\"] = 2] = \"LinearFloat\";\n    MocDataType[MocDataType[\"RandomFloat\"] = 3] = \"RandomFloat\";\n})(MocDataType || (MocDataType = {}));\nexport const VALID_CHARS = \" ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\nexport function randomString(length = 25) {\n    let result = \"\";\n    for (let i = 0; i < length; i += 1) {\n        result += VALID_CHARS.charAt(Math.floor(Math.random() * VALID_CHARS.length));\n    }\n    return result;\n}\nexport function randomInt() {\n    return this.randomNumber() | 0;\n}\nexport function randomNumber() {\n    return Math.random() * 2147483647;\n}\nexport function numericArray(length, type = MocDataType.LinearInt) {\n    const result = new Array(length);\n    switch (type) {\n        case MocDataType.RandomInt:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = this.randomInt();\n            }\n            break;\n        case MocDataType.LinearFloat:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = i + 0.5;\n            }\n            break;\n        case MocDataType.RandomFloat:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = this.randomNumber();\n            }\n            break;\n        default:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = i;\n            }\n            break;\n    }\n    return result;\n}\nexport function stringArray(arrayLength, stringLength) {\n    const result = new Array(arrayLength);\n    let i = -1;\n    while (++i < arrayLength) {\n        result[i] = this.randomString(stringLength);\n    }\n    return result;\n}\n//# sourceMappingURL=MocData.js.map","import { setProperties } from \"../../Obj\";\nexport function Initable(constructor) {\n    return class extends constructor {\n        init(obj, mapping) {\n            setProperties(this, obj, mapping);\n            return this;\n        }\n    };\n}\n//# sourceMappingURL=Initable.js.map","var VERSION = \"0.1.0\";\nimport { until } from \"goodcore/Arr\";\nimport { newUUID } from \"goodcore/Util\";\nimport { is, findAll } from \"goodcore/Dom\";\nimport { Dictionary, Vec2, Timer, List } from \"goodcore\";\nvar GoodTap = (function () {\n    function GoodTap(rootElement) {\n        this.version = VERSION;\n        this.minSwipeDistance = 100;\n        this.events = [\"down\", \"up\", \"press\", \"tap\", \"swipe\"];\n        this.downEvents = [\"down\"];\n        this.upEvents = [\"up\", \"tap\", \"swipe\"];\n        this.longPressIntervals = new Dictionary();\n        this.eventAttr = \"\";\n        this.upEventsAndPress = [];\n        this.index = 0;\n        this.lastInsides = new List();\n        this.init(rootElement || document.body);\n        this.eventAttr = this.events.map(function (name) { return \"[\" + name + \"]\"; }).join(\",\");\n        this.upEventsAndPress = this.upEvents.concat([\"press\"]);\n    }\n    GoodTap.prototype.init = function (rootElement) {\n        var _this = this;\n        if (this.hasTouchEvent()) {\n            rootElement.addEventListener(\"touchstart\", function (ev) { _this.begin(ev); });\n            rootElement.addEventListener(\"touchend\", function (ev) { _this.end(ev); });\n        }\n        rootElement.addEventListener(\"mousedown\", function (ev) { _this.begin(ev); });\n        rootElement.addEventListener(\"mouseup\", function (ev) { _this.end(ev); });\n        rootElement.addEventListener(\"focus\", function (ev) { return _this.triggerOutside(ev.target, ev); }, true);\n        this.root = rootElement;\n    };\n    GoodTap.prototype.findTarget = function (el) {\n        var target = null;\n        while (el && el.parentElement !== document && target === null) {\n            if (is(this.eventAttr, el)) {\n                target = el;\n            }\n            el = el.parentElement;\n        }\n        return target;\n    };\n    GoodTap.prototype.findTargets = function (el) {\n        var targets = [];\n        while (el && el.parentElement !== document) {\n            if (!el.id) {\n                el.id = newUUID();\n            }\n            if (is(this.eventAttr, el)) {\n                targets.push(el);\n            }\n            el = el.parentElement;\n        }\n        return targets;\n    };\n    GoodTap.prototype.getTouchPos = function (ev) {\n        var pos = new Vec2(0, 0);\n        if (ev instanceof TouchEvent) {\n            pos = new Vec2(ev.changedTouches[0].pageX, ev.changedTouches[0].pageY);\n        }\n        else if (ev instanceof MouseEvent) {\n            pos = new Vec2(ev.pageX, ev.pageY);\n        }\n        return pos;\n    };\n    GoodTap.prototype.longPress = function (ev, target) {\n        var result = true;\n        var touchInfo = target.touchInfo;\n        result = this.executeAction(ev, target, \"press\", touchInfo);\n        if (result === false || target.hasAttribute(\"once\")) {\n            clearInterval(this.longPressIntervals.get(touchInfo.index));\n            this.longPressIntervals.delete(touchInfo.index);\n        }\n    };\n    GoodTap.prototype.triggerOutside = function (target, ev) {\n        var _this = this;\n        var outside = new List(findAll(\"[outside]\", this.root));\n        if (outside.length > 0) {\n            var insides_1 = new List(this.findTargets(target));\n            var preventOutside = insides_1.contains(function (el) { return el.hasAttribute(\"preventDefault\"); });\n            if (!preventOutside) {\n                outside\n                    .filter(function (el) { return _this.lastInsides.contains(el) && !insides_1.contains(el); })\n                    .forEach(function (el) { return _this.handleEvent(\"outside\", ev, el); });\n                this.lastInsides = insides_1;\n            }\n        }\n    };\n    GoodTap.prototype.begin = function (ev) {\n        var _this = this;\n        this.longPressIntervals.list.forEach(function (long) { return clearInterval(long); });\n        this.longPressIntervals.clear();\n        var preventDefault = false;\n        var stopPropagation = false;\n        var target = ev.target;\n        var loopCounter = 0;\n        this.triggerOutside(target, ev);\n        while (loopCounter < 100 && (target = this.findTarget(target)) && !stopPropagation) {\n            ++loopCounter;\n            var pressInterval = null;\n            if (target.hasAttribute(\"press\")) {\n                pressInterval = setInterval((function (target) { return _this.longPress(ev, target); }).bind(this, target), parseInt(target.getAttribute(\"pressInterval\")) || 500);\n            }\n            target.classList.add(\"gt-active\");\n            target.touchInfo = {\n                index: this.index++,\n                time: Timer.now(),\n                pos: this.getTouchPos(ev),\n                long: pressInterval\n            };\n            if (pressInterval) {\n                this.longPressIntervals.set(target.touchInfo.index, target.touchInfo.long);\n            }\n            until(this.downEvents, function (name) {\n                if (target.hasAttribute(name)) {\n                    stopPropagation = (_this.handleEvent(name, ev, target) === false);\n                    if (!stopPropagation && target.hasAttribute(\"stopPropagation\") || target.hasAttribute(\"gt-false\")) {\n                        stopPropagation = true;\n                        ev.stopPropagation();\n                    }\n                    if (target.hasAttribute(\"preventDefault\") || target.hasAttribute(\"gt-false\")) {\n                        ev.preventDefault();\n                        preventDefault = true;\n                    }\n                }\n                return stopPropagation;\n            });\n            target = target.parentElement;\n        }\n    };\n    GoodTap.prototype.isSwipe = function (ev, target) {\n        var pos = this.getTouchPos(ev);\n        var result = false;\n        if (\"touchInfo\" in target) {\n            var dX = pos.x - target.touchInfo.pos.x;\n            var dY = pos.y - target.touchInfo.pos.y;\n            var absDX = Math.abs(dX);\n            var absDY = Math.abs(dY);\n            var horizontal = absDX > absDY;\n            var distance = horizontal ? absDX : absDY;\n            result = distance >= this.minSwipeDistance;\n            if (result) {\n                target.touchInfo.swipeInfo = {\n                    direction: horizontal ?\n                        (dX < 0 ? \"left\" : \"right\") :\n                        (dY < 0 ? \"up\" : \"down\"),\n                    distance: distance,\n                    delta: new Vec2(dX, dY)\n                };\n            }\n        }\n        return result;\n    };\n    GoodTap.prototype.end = function (ev) {\n        var _this = this;\n        var time = Timer.now();\n        var stopPropagation = false;\n        var target = ev.target;\n        var loopCounter = 0;\n        while (loopCounter < 100 && (target = this.findTarget(target)) && !stopPropagation) {\n            ++loopCounter;\n            var touchInfo = target.touchInfo;\n            var endedOutsideOrMultiTouch = touchInfo === undefined;\n            if (endedOutsideOrMultiTouch && this.longPressIntervals.has(touchInfo.index)) {\n                target.classList.remove(\"gt-active\");\n                clearInterval(this.longPressIntervals.get(touchInfo.index));\n                delete target.touchInfo;\n            }\n            else {\n                until(this.upEventsAndPress, function (name) {\n                    if (target.hasAttribute(name)) {\n                        var isSwipe = _this.isSwipe(ev, target);\n                        if (name === \"swipe\" && isSwipe\n                            || name === \"tap\" && !isSwipe\n                            || name === \"up\") {\n                            stopPropagation = (_this.handleEvent(name, ev, target) === false);\n                        }\n                        if (stopPropagation || target.hasAttribute(\"stopPropagation\") || target.hasAttribute(\"gt-false\")) {\n                            stopPropagation = true;\n                            ev.stopPropagation();\n                            delete target.touchInfo;\n                        }\n                        if (target.hasAttribute(\"preventDefault\") || target.hasAttribute(\"gt-false\")) {\n                            ev.preventDefault();\n                        }\n                    }\n                    return stopPropagation;\n                });\n            }\n            target = target.parentElement;\n        }\n        findAll(\".gt-active\").forEach(function (el) {\n            el.classList.remove(\"gt-active\");\n            delete el.touchInfo;\n        });\n        this.longPressIntervals.list.forEach(function (long) { return clearInterval(long); });\n        this.longPressIntervals.clear();\n    };\n    GoodTap.prototype.executeAction = function (ev, target, actionAttr, touchInfo) {\n        var result = true;\n        var action = target.getAttribute(actionAttr);\n        try {\n            if (action === \"[fn]\" && (actionAttr + \"-fn\") in target) {\n                result = target[actionAttr + \"-fn\"](ev, target, touchInfo);\n            }\n            else {\n                result = (new Function(\"event\", \"target\", \"touch\", action)).bind(target)(ev, target, touchInfo);\n            }\n        }\n        catch (err) {\n            throw name + \" event function error on element '\" + target.id + \"'\\n\" + err.toString();\n        }\n        return result;\n    };\n    GoodTap.prototype.handleEvent = function (name, ev, target) {\n        var actionAttr = name;\n        var result = true;\n        if (target) {\n            result = this.executeAction(ev, target, actionAttr, target.touchInfo);\n            if (name in this.upEvents) {\n                target.classList.remove(\"gt-active\");\n                if (this.longPressIntervals.has(target.touchInfo.index)) {\n                    clearInterval(this.longPressIntervals.get(target.touchInfo.index));\n                }\n                delete target.touchInfo;\n            }\n        }\n        return result;\n    };\n    GoodTap.prototype.on = function (element, name, fn) {\n        element.setAttribute(name, \"[fn]\");\n        element[name + \"-fn\"] = fn;\n    };\n    GoodTap.prototype.off = function (element, name) {\n        element.removeAttribute(name + \"-action\");\n        delete element[name + \"-fn\"];\n    };\n    GoodTap.prototype.hideKeyboard = function () {\n        var field = document.createElement(\"input\");\n        field.setAttribute(\"type\", \"text\");\n        document.body.appendChild(field);\n        setTimeout(function () {\n            field.focus();\n            setTimeout(function () {\n                field.setAttribute(\"style\", \"display:none;\");\n                field.parentElement.removeChild(field);\n            }, 50);\n        }, 50);\n    };\n    GoodTap.prototype.hasTouchEvent = function () {\n        return \"ontouchstart\" in document.documentElement;\n    };\n    GoodTap.prototype.outside = function () {\n        this.triggerOutside(this.root, new FocusEvent(\"\"));\n        this.hideKeyboard();\n    };\n    return GoodTap;\n}());\nexport { GoodTap };\nexport function init(root) {\n    return new GoodTap(root);\n}\n//# sourceMappingURL=index.js.map"],"names":["nativeWindow","win","window","Global","[object Object]","this","_window","_nativeWindow","v","hasNativeWindow","hasWindow","isArray","it","Array","Object","prototype","toString","call","isFunction","isNullOrUndefined","arg","undefined","isUndefined","isNotUndefined","isSameClass","a","b","args","len","length","i","result","areNullOrUndefined","areNotNullOrUndefined","constructor","clone","obj","deepCopy","Date","getTime","RegExp","keys","key","setProperties","target","values","mapping","value","slice","src","from","count","Infinity","Math","min","removeAt","arr","index","indexOfElement","el","indexOf","fn","shallowCopy","deepCopyInto","filter","push","map","mapInto","forEach","startIndex","until","fnOrTest","isCombined","x","create","populator","deserialize","array","types","T","passthroughT","newT","TimerState","_hasPerformance","Timer","time","_time","performance","now","hrTime","process","hrtime","_start","_last","start","newUUID","d","replace","c","r","random","floor","Sides","DomState","toArray","findAll","selector","root","_document","querySelectorAll","is","element","matches","msMatchesSelector","webkitMatchesSelector","parentElement","Error","id","querySelector","document","_el","createElement","CalcConst","ROTATION_DEGREE_PRECISION","RADIAN_FACTOR","PI","DEGREE_FACTOR","DEG360","ROTATION_LOOKUP","lookup","cos","sin","Vec2Const","EPSILON","IDENTITY","y","X_DIM","Y_DIM","Vec2","angle","horizontalAngle","direction","isZero","out","set","ceil","sqrt","lengthSq","atan2","rot","rotation","deg","rotationDeg","rotationRad","nx","ny","center","subtract","rotate","add","vectorB","scalar","abs","isNormalized","normalize","temp","coeff","max","Dictionary","_lookup","_list","List","_isDirty","has","wipe","clear","cleanList","list","reCreateList","get","serialize","Symbol","iterator","_array","_index","_indexer","_pointer","Arr.shallowCopy","done","pos","indexer","_reindex","size","Arr.create","unshift","Arr.insertAt","pop","delete","shift","arr2","arrs","concat","apply","Arr.concat","Arr.forEach","offset","Arr.append","Arr.deepCopyInto","Arr.shallowCopyInto","Arr.deepCopy","unindexEl","n","Arr.removeAt","Arr.forSome","Arr.until","Arr.reverseForEach","combined","Arr.reverseUntil","Arr.some","Arr.all","Arr.indexOf","Arr.indexOfElement","find","contains","left","right","temporary","Arr.reverse","first","Arr.filter","j","space","Arr.filterInto","Arr.slice","remove","insert","srcLen","insertLen","newLen","delta","Arr.splice","sort","Arr.map","Arr.mapInto","acc","Arr.reduce","test","Arr.reduceUntil","Arr.reverseReduce","Arr.reverseReduceUntil","equals","long","short","select","t","u","tuple","maxDepth","_flattenInner","depth","Arr.deserialize","Tree","Tree_1","parent","children","data","virtual","init","fromObject","bind","nodes","mapcfg","virtualRoot","mapResolver","nodeList","node","rootNodes","parentId","p","insertAt","stack","DEFAULT_SIZE","_pos","_limit","fastPush","isEmpty","limit","limitedPush","limitObjects","cur","condition","duplicateNode","reduce","val","comparer","orderBy","append","toJSON","MocDataType","decorators","desc","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__decorate","k","metadata","__metadata","VERSION","GoodTap","rootElement","version","minSwipeDistance","events","downEvents","upEvents","longPressIntervals","eventAttr","upEventsAndPress","lastInsides","body","name","join","_this","hasTouchEvent","addEventListener","ev","begin","end","triggerOutside","findTarget","findTargets","targets","getTouchPos","TouchEvent","changedTouches","pageX","pageY","MouseEvent","longPress","touchInfo","executeAction","hasAttribute","clearInterval","outside","insides_1","handleEvent","stopPropagation","loopCounter","pressInterval","setInterval","parseInt","getAttribute","classList","preventDefault","isSwipe","dX","dY","absDX","absDY","horizontal","distance","swipeInfo","actionAttr","action","Function","err","on","setAttribute","off","removeAttribute","hideKeyboard","field","appendChild","setTimeout","focus","removeChild","documentElement","FocusEvent"],"mappings":"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"}