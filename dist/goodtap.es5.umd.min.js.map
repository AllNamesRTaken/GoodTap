{"version":3,"file":"goodtap.es5.umd.min.js","sources":["../node_modules/goodcore/Calc.js","../node_modules/goodcore/struct/Vec2.js","../node_modules/goodcore/Global.js","../node_modules/goodcore/Test.js","../node_modules/goodcore/Obj.js","../node_modules/goodcore/Arr.js","../node_modules/goodcore/struct/Dictionary.js","../node_modules/goodcore/struct/List.js","../node_modules/goodcore/struct/SortedList.js","../node_modules/goodcore/Timer.js","../node_modules/goodcore/Util.js","../node_modules/goodcore/struct/Tree.js","../node_modules/goodcore/struct/Stack.js","../node_modules/goodcore/Dom.js","../node_modules/goodcore/MocData.js","../node_modules/goodcore/standard/mixins/Initable.js","lib/index.js"],"sourcesContent":["export class CalcConst {\n}\nCalcConst.ROTATION_DEGREE_PRECISION = 1;\nCalcConst.RADIAN_FACTOR = (1 / 360) * (2 * Math.PI);\nCalcConst.DEGREE_FACTOR = (1 / (2 * Math.PI) * 360);\nCalcConst.DEG360 = 360 * CalcConst.ROTATION_DEGREE_PRECISION;\nCalcConst.ROTATION_LOOKUP = (function () {\n    const lookup = [];\n    for (let i = 0; i < 360 * CalcConst.ROTATION_DEGREE_PRECISION; i++) {\n        lookup.push([Math.cos(i * CalcConst.RADIAN_FACTOR), Math.sin(i * CalcConst.RADIAN_FACTOR)]);\n    }\n    return lookup;\n})();\nexport function sign(x) {\n    return typeof x === \"number\" ? x ? x < 0 ? -1 : 1 : x === x ? 0 : NaN : NaN;\n}\nexport function rotationDeg(rotation) {\n    let deg = (rotation * CalcConst.ROTATION_DEGREE_PRECISION) | 0;\n    while (deg < 0) {\n        deg += CalcConst.DEG360;\n    }\n    while (deg >= CalcConst.DEG360) {\n        deg -= CalcConst.DEG360;\n    }\n    return CalcConst.ROTATION_LOOKUP[deg];\n}\nexport function rotationRad(rotation) {\n    const deg = rotation * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\n    return this.rotationDeg(deg / CalcConst.ROTATION_DEGREE_PRECISION);\n}\nexport function closestRadianRotation(radian) {\n    let deg = radian * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\n    while (deg < 0) {\n        deg += CalcConst.DEG360;\n    }\n    while (deg >= CalcConst.DEG360) {\n        deg -= CalcConst.DEG360;\n    }\n    return deg * CalcConst.RADIAN_FACTOR / CalcConst.ROTATION_DEGREE_PRECISION;\n}\n//# sourceMappingURL=Calc.js.map","import { rotationRad } from \"../Calc\";\nexport class Vec2Const {\n}\nVec2Const.EPSILON = 1e-8;\nVec2Const.IDENTITY = { x: 1, y: 1 };\nVec2Const.X_DIM = { x: 1, y: 0 };\nVec2Const.Y_DIM = { x: 0, y: 1 };\nexport class Vec2 {\n    constructor(x = 0, y = 0) {\n        this.angle = this.horizontalAngle;\n        this.direction = this.horizontalAngle;\n        this.x = x;\n        this.y = y;\n    }\n    get isZero() {\n        return this.x === 0 && this.y === 0;\n    }\n    create(x = 0, y = 0) {\n        return new (this.constructor)(x, y);\n    }\n    set(src) {\n        this.x = src.x;\n        this.y = src.y;\n        return this;\n    }\n    clone(out) {\n        const result = out ? out.set(this) : this.create(this.x, this.y);\n        return result;\n    }\n    toInt() {\n        this.x |= 0;\n        this.y |= 0;\n        return this;\n    }\n    ceil() {\n        this.x = Math.ceil(this.x);\n        this.y = Math.ceil(this.y);\n        return this;\n    }\n    toDecimal() {\n        this.x += Vec2Const.EPSILON;\n        this.y += Vec2Const.EPSILON;\n        return this;\n    }\n    lengthSq() { return (this.x * this.x + this.y * this.y); }\n    length() { return Math.sqrt(this.lengthSq()); }\n    horizontalAngle() { return Math.atan2(this.y, this.x); }\n    rotate(angle) {\n        const rot = rotationRad(angle);\n        const nx = (this.x * rot[0]) - (this.y * rot[1]);\n        const ny = (this.x * rot[1]) + (this.y * rot[0]);\n        this.x = nx;\n        this.y = ny;\n        return this;\n    }\n    rotateAround(center, angle) {\n        return this.subtract(center).rotate(angle).add(center);\n    }\n    normalize() {\n        const len = this.length();\n        if (len === 0) {\n            this.x = 1;\n            this.y = 0;\n        }\n        else {\n            this.x = this.x / len;\n            this.y = this.y / len;\n        }\n        return this;\n    }\n    scale(vectorB) {\n        this.x = this.x * vectorB.x;\n        this.y = this.y * vectorB.y;\n        return this;\n    }\n    relate(vectorB) {\n        this.x = this.x / vectorB.x;\n        this.y = this.y / vectorB.y;\n        return this;\n    }\n    multiply(scalar) {\n        this.x = this.x * scalar;\n        this.y = this.y * scalar;\n        return this;\n    }\n    add(vectorB) {\n        this.x = this.x + vectorB.x;\n        this.y = this.y + vectorB.y;\n        return this;\n    }\n    subtract(vectorB) {\n        this.x = this.x - vectorB.x;\n        this.y = this.y - vectorB.y;\n        return this;\n    }\n    invert() {\n        this.x = -this.x;\n        this.y = -this.y;\n        return this;\n    }\n    equals(target) {\n        return this.x === target.x && this.y === target.y;\n    }\n    almostEquals(target) {\n        return Math.abs(this.x - target.x) < Vec2Const.EPSILON && Math.abs(this.y - target.y) < Vec2Const.EPSILON;\n    }\n    getNormal(isNormalized) {\n        const result = this.clone();\n        if (!isNormalized) {\n            result.set(this).normalize();\n        }\n        const temp = result.x;\n        result.x = result.y;\n        result.y = -temp;\n        return result;\n    }\n    dot(vectorB) { return (this.x * vectorB.x + this.y * vectorB.y); }\n    cross(vectorB) { return ((this.x * vectorB.y) - (this.y * vectorB.x)); }\n    projectOnto(vectorB) {\n        const coeff = ((this.x * vectorB.x) + (this.y * vectorB.y)) / ((vectorB.x * vectorB.x) + (vectorB.y * vectorB.y));\n        this.x = coeff * vectorB.x;\n        this.y = coeff * vectorB.y;\n        return this;\n    }\n    verticalAngle() { return Math.atan2(this.x, this.y); }\n    rotateBy(rotation) {\n        const angle = -this.horizontalAngle() + rotation;\n        return this.rotate(angle);\n    }\n    max(v) {\n        this.x = Math.max(this.x, v.x);\n        this.y = Math.max(this.y, v.y);\n        return this;\n    }\n    min(v) {\n        this.x = Math.min(this.x, v.x);\n        this.y = Math.min(this.y, v.y);\n        return this;\n    }\n    zero() {\n        this.x = 0;\n        this.y = 0;\n        return this;\n    }\n}\n//# sourceMappingURL=Vec2.js.map","let nativeWindow = true;\nvar win;\nif (typeof (window) === \"undefined\") {\n    win = null;\n    nativeWindow = false;\n}\nelse {\n    win = window;\n}\nexport class _Global {\n    constructor() {\n        this._window = win;\n        this._nativeWindow = nativeWindow;\n    }\n    get window() {\n        return this._window;\n    }\n    set window(v) {\n        this._window = v;\n        if (this.hasNativeWindow) {\n            win = v;\n        }\n    }\n    get hasNativeWindow() {\n        return this._nativeWindow;\n    }\n}\nexport let Global = new _Global();\n//# sourceMappingURL=Global.js.map","import { Global } from \"./Global\";\nexport function hasWindow() {\n    return Global.window !== null;\n}\nexport function hasConsole() {\n    return this.hasWindow() && Global.window.console !== undefined || typeof (console) === \"function\";\n}\nexport function isArray(it) {\n    return Array.isArray ? Array.isArray(it) : Object.prototype.toString.call(it) === \"[object Array]\";\n}\nexport function isElement(target) {\n    return target !== undefined && target !== null && target.nodeType === 1 ? true : false;\n}\nexport function isFunction(it) {\n    return Object.prototype.toString.call(it) === \"[object Function]\";\n}\nexport function isNumber(x) {\n    return x === +x;\n}\nexport function isInt(x) {\n    return isNumber(x) && (x === (x | 0));\n}\nexport function isString(x) {\n    return isNotNullOrUndefined(x) && x.constructor === String;\n}\nexport function areNullOrUndefined(...args) {\n    const len = args.length;\n    let i = -1;\n    let a;\n    let result = false;\n    while (!result && ++i < len) {\n        a = args[i];\n        result = a === undefined || a === null;\n    }\n    return result;\n}\nexport function areNotNullOrUndefined(...args) {\n    return !areNullOrUndefined(...args);\n}\nexport function isNullOrUndefined(arg) {\n    return arg === undefined || arg === null;\n}\nexport function isNotNullOrUndefined(arg) {\n    return !isNullOrUndefined(arg);\n}\nexport function areUndefined(...args) {\n    const len = args.length;\n    let i = -1;\n    let a;\n    let result = false;\n    while (!result && ++i < len) {\n        a = args[i];\n        result = a === undefined;\n    }\n    return result;\n}\nexport function areNotUndefined(...args) {\n    return !areUndefined(...args);\n}\nexport function isUndefined(arg) {\n    return arg === undefined;\n}\nexport function isNotUndefined(arg) {\n    return !isUndefined(arg);\n}\n//# sourceMappingURL=Test.js.map","import { deepCopy, flatten } from \"./Arr\";\nimport { areNotNullOrUndefined, isArray, isFunction } from \"./Test\";\nexport function destroy(obj) {\n    if (obj.constructor.prototype.destroy !== undefined) {\n        obj.destroy();\n    }\n    else {\n        setNull(obj);\n    }\n}\nexport function wipe(obj) {\n    const keys = Object.keys(obj);\n    let i = -1;\n    const len = keys.length;\n    while (++i < len) {\n        delete obj[keys[i]];\n    }\n}\nexport function setNull(obj) {\n    if (obj.constructor.prototype.clear !== undefined) {\n        obj.clear();\n    }\n    else {\n        const keys = Object.keys(obj);\n        let key = null;\n        let i = -1;\n        const len = keys.length;\n        while (++i < len) {\n            key = keys[i];\n            obj[key] = null;\n        }\n    }\n}\nexport function isClassOf(a, b) {\n    return areNotNullOrUndefined(a, b) && a instanceof b.constructor;\n}\nexport function isSameClass(a, b) {\n    return areNotNullOrUndefined(a, b) && a.constructor === b.constructor;\n}\nexport function inherits(a, b) {\n    return isClassOf(a, b) && !isSameClass(a, b);\n}\nexport function equals(a, b) {\n    let result = a === b;\n    if (a !== b && (a instanceof Object) && isSameClass(a, b)) {\n        if (isArray(a)) {\n            const len = a.length;\n            let i = 0;\n            result = len === b.length;\n            if (result) {\n                for (; i < len; i += 1) {\n                    result = equals(a[i], b[i]);\n                    if (result === false) {\n                        break;\n                    }\n                }\n            }\n        }\n        else if (a.constructor.prototype.equals) {\n            result = a.equals(b);\n        }\n        else {\n            const keys = Object.keys(a);\n            let key = null;\n            result = true;\n            let i = -1;\n            const len = keys.length;\n            while (++i < len) {\n                key = keys[i];\n                result = equals(a[key], b[key]);\n                if (!result) {\n                    if (isFunction(a[key])) {\n                        result = true;\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return result;\n}\nexport function isDifferent(a, b) {\n    return !equals(a, b);\n}\nexport function shallowCopy(obj) {\n    const keys = Object.keys(obj);\n    const result = {};\n    let i = -1;\n    const len = keys.length;\n    while (++i < len) {\n        const key = keys[i];\n        result[key] = obj[key];\n    }\n    return result;\n}\nexport function clone(obj) {\n    let result;\n    if (!(obj instanceof Object)) {\n        result = obj;\n    }\n    else if (obj.constructor.prototype.clone !== undefined) {\n        result = obj.clone();\n    }\n    else if (isArray(obj)) {\n        result = deepCopy(obj);\n    }\n    else if (obj instanceof Date) {\n        return new Date(obj.getTime());\n    }\n    else if (obj instanceof RegExp) {\n        return new RegExp(obj);\n    }\n    else {\n        result = new obj.constructor();\n        const keys = Object.keys(obj);\n        let key = null;\n        let i = -1;\n        const len = keys.length;\n        while (++i < len) {\n            key = keys[i];\n            result[key] = clone(obj[key]);\n        }\n    }\n    return result;\n}\nexport function cloneInto(src, target) {\n    if (isArray(target)) {\n        const arrS = src;\n        const arrT = target;\n        const len = arrS.length;\n        arrT.length = len;\n        let i = -1;\n        while (++i < len) {\n            if (arrS[i] instanceof Object) {\n                cloneInto(arrS[i], arrT[i]);\n            }\n            else {\n                arrT[i] = arrS[i];\n            }\n        }\n    }\n    else {\n        const keys = Object.keys(src);\n        let key = null;\n        let i = -1;\n        const len = keys.length;\n        while (++i < len) {\n            key = keys[i];\n            const a = src[key];\n            if (a instanceof Object) {\n                let b = target[key];\n                if (b === undefined || b === null) {\n                    if (isArray(a)) {\n                        b = target[key] = [];\n                    }\n                    else {\n                        b = target[key] = {};\n                    }\n                }\n                if (isDifferent(a, b)) {\n                    cloneInto(a, b);\n                }\n            }\n            else {\n                target[key] = a;\n            }\n        }\n    }\n    return target;\n}\nexport function mixin(target = {}, exclude, ...sources) {\n    const result = target, len = sources ? sources.length : 0;\n    let i = 0;\n    sources = flatten(sources);\n    for (; i < len; i++) {\n        let src = sources[i];\n        if (isFunction(src)) {\n            src = src.prototype;\n        }\n        if (src === undefined) {\n            continue;\n        }\n        const keys = Object.keys(src);\n        let key = null;\n        if (exclude) {\n            let i = -1;\n            const len = keys.length;\n            while (++i < len) {\n                key = keys[i];\n                if (exclude.hasOwnProperty(key)) {\n                    continue;\n                }\n                target[key] = src[key];\n            }\n        }\n        else {\n            let i = -1;\n            const len = keys.length;\n            while (++i < len) {\n                key = keys[i];\n                target[key] = src[key];\n            }\n        }\n    }\n    return result;\n}\nexport function setProperties(target, values, mapping) {\n    const keys = Object.keys(values);\n    let key;\n    let value;\n    let i = -1;\n    const len = keys.length;\n    while (++i < len) {\n        key = keys[i];\n        value = values[key];\n        if (mapping && key in mapping) {\n            key = mapping[key];\n        }\n        if (key in target) {\n            target[key] = values[keys[i]];\n        }\n    }\n}\n//# sourceMappingURL=Obj.js.map","import { clone, setProperties } from \"./Obj\";\nimport { isArray, isNullOrUndefined, isNumber, isUndefined, isNotUndefined } from \"./Test\";\nclass ArrayState {\n}\nexport function flatten(src) {\n    return flattenInner(src);\n}\nfunction flattenInner(src, result = []) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        if (isArray(src[i])) {\n            flattenInner(src[i], result);\n        }\n        else {\n            result.push(src[i]);\n        }\n    }\n    return result;\n}\nexport function reverse(array) {\n    let left = null;\n    let right = null;\n    const length = isNullOrUndefined(array) ? 0 : array.length;\n    for (left = 0; left < length / 2; left += 1) {\n        right = length - 1 - left;\n        const temporary = array[left];\n        array[left] = array[right];\n        array[right] = temporary;\n    }\n    return array;\n}\nexport function concat(...arrs) {\n    const result = Array.prototype.concat.apply([], arrs);\n    return result;\n}\nexport function slice(src, from = 0, count = Infinity) {\n    let len = Math.min(isNullOrUndefined(src) ? 0 : src.length - from, count);\n    if (len < 0) {\n        len = 0;\n    }\n    let i = -1;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = src[i + from];\n    }\n    return result;\n}\nexport function splice(src, pos = 0, remove = Infinity, insert = []) {\n    if (isNullOrUndefined(src)) {\n        throw new Error(\"Unable to splice on null or undefined\");\n    }\n    let srcLen = src.length;\n    pos = Math.max(0, pos);\n    pos = Math.min(pos, srcLen);\n    remove = Math.max(0, remove);\n    remove = Math.min(remove, srcLen - pos);\n    let insertLen = insert.length;\n    let newLen = srcLen - remove + insertLen;\n    let delta = remove - insertLen;\n    if (delta < 0) {\n        src.length = newLen;\n        let i = newLen;\n        while (--i >= pos + remove) {\n            src[i] = src[i + delta];\n        }\n    }\n    let i = pos - 1;\n    while (++i < pos + insertLen) {\n        src[i] = insert[i - pos];\n    }\n    if (delta > 0) {\n        --i;\n        while (++i < srcLen - delta) {\n            src[i] = src[i + delta];\n        }\n        src.length = newLen;\n    }\n}\nexport function append(arr, values) {\n    let index = -1;\n    const offset = arr.length;\n    const length = isNullOrUndefined(values) ? 0 : values.length;\n    while (++index < length) {\n        arr[offset + index] = values[index];\n    }\n}\nexport function removeAt(arr, index) {\n    let result;\n    let len = isNullOrUndefined(arr) ? 0 : arr.length;\n    if (index >= 0 && index < len) {\n        let i = index;\n        result = arr[index];\n        while (++i < len) {\n            arr[i - 1] = arr[i];\n        }\n        arr.length -= 1;\n    }\n    return result;\n}\nexport function indexOfElement(src, el) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        if (src[i] === el) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(arr, el) {\n    const start = indexOfElement(arr, el);\n    removeAt(arr, start);\n}\nexport function indexOf(src, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        if (fn(src[i])) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function removeOneByFn(arr, fn) {\n    const start = indexOf(arr, fn);\n    removeAt(arr, start);\n}\nexport function shallowCopy(src) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = src[i];\n    }\n    return result;\n}\nexport function shallowCopyInto(src, target) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    target.length = len;\n    while (++i < len) {\n        target[i] = src[i];\n    }\n}\nexport function shallowFill(src, target, at = 0) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    if (target.length < len + at) {\n        target.length = len + at;\n    }\n    while (++i < len) {\n        target[at + i] = src[i];\n    }\n}\nexport function deepCopy(src) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = (clone(src[i]));\n    }\n    return result;\n}\nexport function deepCopyInto(src, target) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    target.length = len;\n    while (++i < len) {\n        target[i] = (clone(src[i]));\n    }\n}\nexport function deepFill(src, target, at = 0) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    if (target.length < len + at) {\n        target.length = len + at;\n    }\n    while (++i < len) {\n        target[at + i] = (clone(src[i]));\n    }\n}\nexport function filter(src, fn) {\n    const result = [];\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        const el = src[i];\n        if (fn(el, i) === true) {\n            result.push(el);\n        }\n    }\n    return result;\n}\nexport function filterInto(src, target, fn) {\n    let i = -1;\n    let j = 0;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const space = target.length;\n    while (++i < len) {\n        const el = src[i];\n        if (fn(el, i) === true) {\n            if (j < space) {\n                target[j++] = el;\n            }\n            else {\n                ++j;\n                target.push(el);\n            }\n        }\n    }\n    target.length = j;\n}\nexport function map(src, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = fn(src[i], i);\n    }\n    return result;\n}\nexport function mapInto(src, target, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    target.length = len;\n    while (++i < len) {\n        target[i] = fn(src[i], i);\n    }\n}\nexport function reduce(src, fn, start) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (++i < len) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function reduceUntil(src, fn, test, start) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (++i < len && !test(acc, src[i])) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function reverseReduce(src, fn, start) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (--i >= 0) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function reverseReduceUntil(src, fn, test, start) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (--i >= 0 && !test(acc, src[i])) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function forEach(src, fn, startIndex = 0) {\n    let i = startIndex - 1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        fn(src[i], i);\n    }\n}\nexport function forSome(src, filter, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        const el = src[i];\n        if (filter(el, i)) {\n            fn(el, i);\n        }\n    }\n}\nexport function until(src, fnOrTest, fn, startIndex) {\n    let isCombined = isUndefined(fn) || isNumber(fn);\n    startIndex = isCombined ? fn : startIndex;\n    let i = isUndefined(startIndex) || startIndex < 0 ? -1 : startIndex - 1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len && (isCombined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\n    }\n}\nexport function reverseForEach(src, fn) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    while (--i >= 0) {\n        fn(src[i], i);\n    }\n}\nexport function reverseUntil(src, fnOrTest, fn) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    let combined = isUndefined(fn);\n    while (--i >= 0 && (combined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\n    }\n}\nexport function some(src, fn) {\n    let result = false;\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len && !(result = fn(src[i]))) {\n    }\n    return result;\n}\nexport function all(src, fn) {\n    let result = true;\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len && (result = fn(src[i]))) {\n    }\n    return result;\n}\nexport function insertAt(src, pos, v) {\n    if (isNullOrUndefined(src)) {\n        throw new Error(\"Unable to insertAt on null or undefined\");\n    }\n    if (pos === 0) {\n        src.unshift(v);\n    }\n    else if (pos > 0) {\n        let i = src.length;\n        while (--i >= pos) {\n            src[i + 1] = src[i];\n        }\n        src[i + 1] = v;\n    }\n}\nexport function binarySearch(src, cmp, closest = false) {\n    let lo = 0, hi = isNullOrUndefined(src) ? -1 : src.length - 1, mid, element;\n    while (lo <= hi) {\n        mid = ((lo + hi) >> 1);\n        element = src[mid];\n        let val = cmp(element);\n        if (val < 0) {\n            lo = mid + 1;\n        }\n        else if (val > 0) {\n            hi = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return closest ? lo : -1;\n}\nexport function create(length, populator) {\n    if ((length || -1) < 0) {\n        length = 0;\n    }\n    let arr = new Array(length);\n    let i = -1;\n    while (++i < length) {\n        arr[i] = populator(i, arr);\n    }\n    return arr;\n}\nexport function deserialize(array, target, ...types) {\n    let [T, ...passthroughT] = types;\n    if (isNotUndefined(T)) {\n        if (isNotUndefined(T.prototype.deserialize)) {\n            mapInto(array, target, (el) => {\n                return (new T()).deserialize(el, ...passthroughT);\n            });\n        }\n        else {\n            mapInto(array, target, (el) => {\n                let newT = new T();\n                setProperties(newT, el);\n                return newT;\n            });\n        }\n    }\n    else {\n        deepCopyInto(array, target);\n    }\n    return this;\n}\n//# sourceMappingURL=Arr.js.map","import { forEach } from \"../Arr\";\nimport { clone, setProperties, wipe } from \"../Obj\";\nimport { isFunction, isNotUndefined } from \"../Test\";\nimport { List } from \"./List\";\nexport class Dictionary {\n    constructor() {\n        this._lookup = Object.create(null);\n        this._list = new List();\n        this._isDirty = false;\n    }\n    create() {\n        return new (this.constructor)();\n    }\n    has(key) {\n        return this._lookup[key] !== undefined;\n    }\n    contains(key) {\n        return this.has(key);\n    }\n    get(key) {\n        return this._lookup[key];\n    }\n    set(key, value) {\n        this._isDirty = this._isDirty || this.has(key);\n        if (value !== undefined) {\n            this._lookup[key] = value;\n            if (!this._isDirty) {\n                this._list.push(value);\n            }\n        }\n        return this;\n    }\n    delete(key) {\n        if (this.has(key)) {\n            delete this._lookup[key];\n            this._isDirty = true;\n        }\n        return this;\n    }\n    clear() {\n        wipe(this._lookup);\n        this._list.clear();\n        return this;\n    }\n    get values() {\n        this.cleanList();\n        return this._list.values;\n    }\n    get keys() {\n        return Object.keys(this._lookup);\n    }\n    get list() {\n        this.cleanList();\n        return this._list;\n    }\n    get count() {\n        let result = 0;\n        if (this._isDirty) {\n            result = this.keys.length;\n        }\n        else {\n            result = this._list.count;\n        }\n        return result;\n    }\n    cleanList() {\n        if (this._isDirty) {\n            this.reCreateList();\n        }\n    }\n    reCreateList() {\n        let lookup = this._lookup;\n        let keys = Object.keys(this._lookup);\n        let i = -1;\n        let list = this._list;\n        list.clear();\n        while (++i < keys.length) {\n            list.add(lookup[keys[i]]);\n        }\n    }\n    clone() {\n        let result = this.create();\n        result._isDirty = this._isDirty;\n        result._list = this._list.clone();\n        result._lookup = clone(this._lookup);\n        return result;\n    }\n    toJSON() {\n        return this._lookup;\n    }\n    serialize() {\n        let obj = Object.create(null);\n        forEach(this.keys, (key) => {\n            let v = this.get(key);\n            obj[key] = isFunction(v.serialize) ? v.serialize() : v;\n        });\n        return obj;\n    }\n    deserialize(obj, ...types) {\n        let [T, ...passthroughT] = types;\n        this.clear();\n        if (isNotUndefined(T)) {\n            if (isNotUndefined(T.prototype.deserialize)) {\n                for (let key of Object.keys(obj)) {\n                    this.set(key, (new T()).deserialize(obj[key], ...passthroughT));\n                }\n            }\n            else {\n                for (let key of Object.keys(obj)) {\n                    let newT = new T();\n                    setProperties(newT, obj[key]);\n                    this.set(key, newT);\n                }\n            }\n        }\n        else {\n            for (let key of Object.keys(obj)) {\n                this.set(key, obj[key]);\n            }\n        }\n        return this;\n    }\n}\n//# sourceMappingURL=Dictionary.js.map","import * as Arr from \"../Arr\";\nimport { clone, equals } from \"../Obj\";\nimport { isArray, isFunction, isNotNullOrUndefined, hasWindow } from \"../Test\";\nimport { Dictionary } from \"./Dictionary\";\nif (hasWindow() && !window.Symbol) {\n    window.Symbol = { iterator: \"iterator\" };\n}\nexport class List {\n    constructor(arr) {\n        this._array = [];\n        this._index = null;\n        this._indexer = null;\n        this._pointer = 0;\n        if (arr === undefined) {\n            this._array = new Array();\n        }\n        else {\n            if (arr instanceof (List)) {\n                this._array = Arr.shallowCopy(arr._array);\n            }\n            else {\n                this._array = Arr.shallowCopy(arr);\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    next(value) {\n        return {\n            done: this._pointer >= this.length,\n            value: this._pointer < this.length ? this._array[this._pointer++] : (this._pointer = 0, undefined)\n        };\n    }\n    create(arr) {\n        return new (this.constructor)(arr);\n    }\n    get values() {\n        return this._array;\n    }\n    get(pos) {\n        return this._array[pos];\n    }\n    getByIndex(key) {\n        let result;\n        return isNotNullOrUndefined(this._index) ? this._index.get(key) : undefined;\n    }\n    set(pos, v) {\n        if (pos >= 0 && pos < this.length) {\n            this._array[pos | 0] = v;\n            if (this._indexer !== null) {\n                this._index.set(this._indexer(v), v);\n            }\n        }\n        else {\n            throw new Error(`index out of bounds on <List>.set(${pos}, ${v.toString()})`);\n        }\n        return this;\n    }\n    get count() {\n        return this._array.length;\n    }\n    get length() {\n        return this._array.length;\n    }\n    get indexer() {\n        return this._indexer;\n    }\n    set indexer(fn) {\n        this._indexer = fn;\n        this._reindex();\n    }\n    _reindex() {\n        if (this._indexer === null) {\n            this._index = null;\n        }\n        else {\n            if (this._index === null) {\n                this._index = new Dictionary();\n            }\n            else {\n                this._index.clear();\n            }\n            this.forEach((el) => this._index.set(this._indexer(el), el));\n        }\n    }\n    truncate(size = 0) {\n        if (size < 0) {\n            let arr = this._array;\n            let len = arr.length;\n            size = Math.min(len, -1 * size);\n            let i = len - size - 1;\n            let j = -1;\n            while (++i < len) {\n                arr[++j] = arr[i];\n            }\n        }\n        this._array.length = Math.max(0, Math.min(this._array.length, size));\n        this._reindex();\n        return this;\n    }\n    fill(size, populator) {\n        size = Math.max(0, size || 0);\n        if (isFunction(populator)) {\n            this._array = Arr.create(size, populator);\n        }\n        else if (!(populator instanceof Object)) {\n            this._array = Arr.create(size, () => populator);\n        }\n        else {\n            this._array = Arr.create(size, () => clone(populator));\n        }\n        this._reindex();\n        return this;\n    }\n    clear() {\n        this._array.length = 0;\n        if (this._index !== null) {\n            this._index.clear();\n        }\n        return this;\n    }\n    add(v) {\n        this._array.push(v);\n        if (this._indexer !== null) {\n            this._index.set(this._indexer(v), v);\n        }\n        return this;\n    }\n    insertAt(pos, v) {\n        Arr.insertAt(this._array, pos, v);\n        if (this._indexer !== null) {\n            this._index.set(this._indexer(v), v);\n        }\n        return this;\n    }\n    push(v) {\n        if (this._indexer !== null) {\n            this._index.set(this._indexer(v), v);\n        }\n        return this._array.push(v);\n    }\n    pop() {\n        let result = this._array.pop();\n        if (result !== undefined && this._indexer !== null) {\n            this._index.delete(this._indexer(result));\n        }\n        return result;\n    }\n    shift() {\n        let result = this._array.shift();\n        if (result !== undefined && this._indexer !== null) {\n            this._index.delete(this._indexer(result));\n        }\n        return result;\n    }\n    concat(v) {\n        let arr;\n        let arr2 = v instanceof List ? v.values : v;\n        arr = Arr.concat(this._array, arr2);\n        return this.create(arr);\n    }\n    index(arr) {\n        if (this._indexer !== null) {\n            Arr.forEach(arr, (el) => {\n                this._index.set(this._indexer(el), el);\n            });\n        }\n    }\n    unindexEl(el) {\n        if (this._indexer !== null) {\n            this._index.delete(this._indexer(el));\n        }\n    }\n    append(v) {\n        let arr2 = v instanceof List ? v.values : v;\n        Arr.append(this._array, arr2);\n        this.index(arr2);\n        return this;\n    }\n    copy(src) {\n        let arr2 = src instanceof List ? src.values : src;\n        Arr.deepCopyInto(arr2, this._array);\n        this.index(arr2);\n        return this;\n    }\n    shallowCopy(src) {\n        let arr2 = src instanceof List ? src.values : src;\n        Arr.shallowCopyInto(arr2, this._array);\n        this.index(arr2);\n        return this;\n    }\n    clone() {\n        const arr = Arr.deepCopy(this._array);\n        let result = this.create(arr);\n        if (this._indexer !== null) {\n            result._indexer = this._indexer;\n            result._index = this._index.clone();\n        }\n        return result;\n    }\n    remove(v) {\n        Arr.remove(this._array, v);\n        this.unindexEl(v);\n        return this;\n    }\n    removeFirst(fn) {\n        let result = this.removeAt(this.indexOf(fn));\n        this.unindexEl(result);\n        return result;\n    }\n    removeAt(n) {\n        let result = Arr.removeAt(this._array, n);\n        this.unindexEl(result);\n        return result;\n    }\n    forEach(fn, startIndex = 0) {\n        Arr.forEach(this._array, fn, startIndex);\n        return this;\n    }\n    forSome(filter, fn) {\n        Arr.forSome(this._array, filter, fn);\n        return this;\n    }\n    until(fnOrTest, fn, startIndex) {\n        Arr.until(this._array, fnOrTest, fn, startIndex);\n        return this;\n    }\n    reverseForEach(fn) {\n        Arr.reverseForEach(this._array, fn);\n        return this;\n    }\n    reverseUntil(fnOrTest, fn) {\n        Arr.reverseUntil(this._array, fnOrTest, fn);\n        return this;\n    }\n    some(fn) {\n        return Arr.some(this._array, fn);\n    }\n    all(fn) {\n        return Arr.all(this._array, fn);\n    }\n    indexOf(v) {\n        let result = -1;\n        if (isFunction(v)) {\n            result = Arr.indexOf(this._array, v);\n        }\n        else {\n            result = Arr.indexOfElement(this._array, v);\n        }\n        return result;\n    }\n    contains(v) {\n        let result = false;\n        if (isFunction(v)) {\n            result = this.find(v) !== undefined;\n        }\n        else {\n            if (this._indexer !== null) {\n                result = this._index.contains(this._indexer(v));\n            }\n            else {\n                result = Arr.indexOfElement(this._array, v) !== -1;\n            }\n        }\n        return result;\n    }\n    reverse() {\n        Arr.reverse(this._array);\n        return this;\n    }\n    first(fn) {\n        let index = -1;\n        let result;\n        if (fn === undefined) {\n            index = 0;\n        }\n        else {\n            index = Arr.indexOf(this._array, fn);\n        }\n        return index === -1 ? undefined : this.get(index);\n    }\n    find(fn) {\n        return this.first(fn);\n    }\n    last() {\n        return this.length === 0 ? undefined : this.get(this.length - 1);\n    }\n    filter(fn) {\n        return this.create(Arr.filter(this._array, fn));\n    }\n    select(fn) {\n        return this.create(Arr.filter(this._array, fn));\n    }\n    selectInto(src, fn) {\n        let arr = src instanceof List ? src.values : src;\n        Arr.filterInto(arr, this._array, fn);\n        this.index(arr);\n        return this;\n    }\n    head(count = 1) {\n        count = Math.max(0, count);\n        return this.create(Arr.slice(this._array, 0, count));\n    }\n    tail(count = 1) {\n        count = Math.min(this._array.length, count);\n        return this.create(Arr.slice(this._array, Math.max(0, this._array.length - count)));\n    }\n    splice(pos = 0, remove = Infinity, insert = []) {\n        Arr.splice(this._array, pos, remove, isArray(insert) ? insert : insert.values);\n        this._reindex();\n        return this;\n    }\n    orderBy(fn) {\n        this._array.sort(fn);\n        return this;\n    }\n    map(fn) {\n        return this.create(Arr.map(this._array, fn));\n    }\n    mapInto(src, fn) {\n        let arr = src instanceof List ? src.values : src;\n        Arr.mapInto(arr, this._array, fn);\n        this._reindex();\n        return this;\n    }\n    reduce(fn, start) {\n        return Arr.reduce(this._array, fn, start);\n    }\n    reduceUntil(fn, test, start) {\n        return Arr.reduceUntil(this._array, fn, test, start);\n    }\n    reverseReduce(fn, start) {\n        return Arr.reverseReduce(this._array, fn, start);\n    }\n    reverseReduceUntil(fn, test, start) {\n        return Arr.reverseReduceUntil(this._array, fn, test, start);\n    }\n    equals(b) {\n        const result = equals(this._array, b.values);\n        return result;\n    }\n    same(b) {\n        let a = this;\n        let count = 0;\n        if (a.length === b.length) {\n            if (a.indexer !== null) {\n                b.until((el) => !a.contains(el), (el, i) => ++count);\n            }\n            else {\n                a.until((el) => !b.contains(el), (el, i) => ++count);\n            }\n        }\n        return count === a.length;\n    }\n    intersect(b) {\n        let result = this.create();\n        let long;\n        let short;\n        result.indexer = this.indexer;\n        if (this.length < b.length) {\n            short = this, long = b;\n        }\n        else {\n            long = this, short = b;\n        }\n        if (long.indexer !== null) {\n            short.forEach((el) => {\n                if (long.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        else {\n            long.forEach((el) => {\n                if (short.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        return result;\n    }\n    union(b) {\n        let result = this.create();\n        let long;\n        let short;\n        result.indexer = this.indexer;\n        if (this.length < b.length) {\n            short = this, long = b;\n        }\n        else {\n            long = this, short = b;\n        }\n        if (long.indexer !== null) {\n            result = long.clone();\n            short.forEach((el) => {\n                if (!long.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        else {\n            result = short.clone();\n            long.forEach((el) => {\n                if (!short.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        return result;\n    }\n    subtract(b) {\n        let result = this.create();\n        result.indexer = this.indexer;\n        result = this.select((el) => !b.contains(el));\n        return result;\n    }\n    zip(list, fn = (t, u) => [t, u]) {\n        let result = this.create();\n        let length = list.length;\n        this.until(function (el, i) {\n            return i >= length;\n        }, function (el, i) {\n            result.push(fn(el, list.get(i)));\n        });\n        return result;\n    }\n    unzip(fn = (el) => [el[0], el[1]]) {\n        let result = [this.create(), this.create()];\n        this.forEach(function (el) {\n            let tuple = fn(el);\n            result[0].push(tuple[0]);\n            result[1].push(tuple[1]);\n        });\n        return result;\n    }\n    flatten(maxDepth = Infinity) {\n        return this.create(maxDepth < 1 ? this.values : this._flattenInner(this.values, maxDepth));\n    }\n    _flattenInner(src, maxDepth, depth = -1, result = []) {\n        let i = -1;\n        const len = src.length;\n        if (++depth > maxDepth) {\n            result.push(src);\n        }\n        else {\n            while (++i < len) {\n                if (isArray(src[i])) {\n                    this._flattenInner(src[i], maxDepth, depth, result);\n                }\n                else if (src[i] instanceof List) {\n                    this._flattenInner(src[i].values, maxDepth, depth, result);\n                }\n                else {\n                    result.push(src[i]);\n                }\n            }\n        }\n        return result;\n    }\n    toJSON() {\n        return this.values;\n    }\n    serialize() {\n        return this.values.map((el) => isFunction(el.serialize) ? el.serialize() : el);\n    }\n    deserialize(array, ...types) {\n        Arr.deserialize(array, this._array, ...types);\n        return this;\n    }\n}\n//# sourceMappingURL=List.js.map","import { binarySearch } from \"../Arr\";\nimport { equals } from \"../Obj\";\nimport { isFunction, hasWindow } from \"../Test\";\nimport { List } from \"./List\";\nif (hasWindow() && !window.Symbol) {\n    window.Symbol = { iterator: \"iterator\" };\n}\nexport class Comparer {\n}\nComparer.StringAsc = function (a, b) { return a < b ? -1 : a === b ? 0 : 1; };\nComparer.StringDesc = function (a, b) { return a < b ? 1 : a === b ? 0 : -1; };\nComparer.NumberAsc = function (a, b) { return a < b ? -1 : a === b ? 0 : 1; };\nComparer.NumberDesc = function (a, b) { return a < b ? 1 : a === b ? 0 : -1; };\nexport class SortedList {\n    constructor(comparer = ((a, b) => a < b ? -1 : a === b ? 0 : 1), arr) {\n        this._list = new List();\n        this._pointer = 0;\n        this._cmp = comparer;\n        if (arr === undefined) {\n            this._list = new List();\n        }\n        else {\n            if (arr instanceof (List) || arr instanceof (SortedList)) {\n                this.copy(arr.values);\n            }\n            else {\n                this.copy(arr);\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    next(value) {\n        return {\n            done: this._pointer >= this.length,\n            value: this._pointer < this.length ? this.values[this._pointer++] : (this._pointer = 0, undefined)\n        };\n    }\n    create(comparer, arr) {\n        return new (this.constructor)(comparer, arr);\n    }\n    get values() {\n        return this._list.values;\n    }\n    get(pos) {\n        return this._list.get(pos);\n    }\n    get count() {\n        return this._list.length;\n    }\n    get length() {\n        return this._list.length;\n    }\n    get comparer() {\n        return this._cmp;\n    }\n    set comparer(v) {\n        this._cmp = v;\n        this.sort();\n    }\n    sort() {\n        this._list.orderBy(this._cmp);\n    }\n    truncate(size = 0) {\n        this._list.truncate(size);\n        return this;\n    }\n    fill(size, populator) {\n        this._list.fill(size, populator);\n        this.sort();\n        return this;\n    }\n    clear() {\n        this._list.clear();\n        return this;\n    }\n    add(v) {\n        let index = this.getInsertIndex(v);\n        this._list.insertAt(index, v);\n        return this;\n    }\n    pop() {\n        return this._list.pop();\n    }\n    shift() {\n        return this._list.shift();\n    }\n    bulkAdd(v) {\n        if (v instanceof List || v instanceof SortedList) {\n            this._list.append(v.values);\n        }\n        else {\n            this._list.append(v);\n        }\n        this.sort();\n        return this;\n    }\n    copy(src) {\n        if (src instanceof List || src instanceof SortedList) {\n            this._list.copy(src.values);\n        }\n        else {\n            this._list.copy(src);\n        }\n        this.sort();\n        return this;\n    }\n    clone() {\n        return this.create(this._cmp, this._list.clone());\n    }\n    remove(v) {\n        let index = this.indexOf(v);\n        if (index !== -1) {\n            this._list.removeAt(index);\n        }\n        return this;\n    }\n    removeAt(n) {\n        return this._list.removeAt(n);\n    }\n    removeFirst(fn) {\n        return this._list.removeFirst(fn);\n    }\n    forEach(fn, startIndex = 0) {\n        this._list.forEach(fn, startIndex);\n        return this;\n    }\n    forSome(filter, fn) {\n        this._list.forSome(filter, fn);\n        return this;\n    }\n    until(fnOrTest, fn, startIndex) {\n        this._list.until(fnOrTest, fn, startIndex);\n        return this;\n    }\n    reverseForEach(fn) {\n        this._list.reverseForEach(fn);\n        return this;\n    }\n    reverseUntil(fnOrTest, fn) {\n        this._list.reverseUntil(fnOrTest, fn);\n        return this;\n    }\n    some(fn) {\n        return this._list.some(fn);\n    }\n    all(fn) {\n        return this._list.all(fn);\n    }\n    getInsertIndex(v) {\n        return binarySearch(this._list.values, (el) => this._cmp(el, v), true);\n    }\n    indexOf(v) {\n        let result = -1;\n        if (v instanceof Function) {\n            result = this._list.indexOf(v);\n        }\n        else {\n            result = binarySearch(this._list.values, (el) => this._cmp(el, v), false);\n        }\n        return result;\n    }\n    contains(v) {\n        return this.indexOf(v) !== -1;\n    }\n    first(fn) {\n        return this._list.first(fn);\n    }\n    find(fn) {\n        return this._list.find(fn);\n    }\n    last() {\n        return this._list.last();\n    }\n    filter(fn) {\n        return this.create(this._cmp, this._list.filter(fn));\n    }\n    select(fn) {\n        return this.create(this._cmp, this._list.filter(fn));\n    }\n    selectInto(src, fn) {\n        if (src instanceof List || src instanceof SortedList) {\n            this._list.selectInto(src.values, fn);\n        }\n        else {\n            this._list.selectInto(src, fn);\n        }\n        this.sort();\n        return this;\n    }\n    head(count = 1) {\n        return this.create(this.comparer, this._list.head(count));\n    }\n    tail(count = 1) {\n        return this.create(this.comparer, this._list.tail(count));\n    }\n    map(fn) {\n        return this._list.map(fn);\n    }\n    mapInto(src, fn) {\n        if (src instanceof List || src instanceof SortedList) {\n            this._list.mapInto(src.values, fn);\n        }\n        else {\n            this._list.mapInto(src, fn);\n        }\n        this.sort();\n        return this;\n    }\n    reduce(fn, start) {\n        return this._list.reduce(fn, start);\n    }\n    reduceUntil(fn, test, start) {\n        return this._list.reduceUntil(fn, test, start);\n    }\n    reverseReduce(fn, start) {\n        return this._list.reverseReduce(fn, start);\n    }\n    reverseReduceUntil(fn, test, start) {\n        return this._list.reverseReduceUntil(fn, test, start);\n    }\n    equals(b) {\n        const result = equals(this._list.values, b.values);\n        return result;\n    }\n    same(b) {\n        return this.equals(b);\n    }\n    intersect(b) {\n        let result = this.create(this.comparer);\n        let long;\n        let short;\n        if (this.length > 0 && b.length > 0) {\n            if (this.length < b.length) {\n                short = this, long = b;\n            }\n            else {\n                long = this, short = b;\n            }\n            if (b instanceof SortedList && this.comparer === b.comparer) {\n                let longPos = long.getInsertIndex(short.get(0)) - 1;\n                let lastPos = long.getInsertIndex(short.last()) - 1;\n                let i = -1;\n                let shortLen = short.length;\n                while (longPos < lastPos && ++i < shortLen) {\n                    let el = short.get(i);\n                    let aVsB;\n                    while (++longPos < lastPos && (aVsB = this.comparer(long.get(longPos), el)) < 0) {\n                        void (0);\n                    }\n                    if (longPos < lastPos && aVsB === 0) {\n                        result.add(el);\n                    }\n                }\n            }\n            else if (long instanceof SortedList || (long instanceof List && long.indexer !== null)) {\n                short.forEach((el) => {\n                    if (long.contains(el)) {\n                        result.add(el);\n                    }\n                });\n            }\n            else {\n                result = result.bulkAdd(short.toList().intersect(long));\n            }\n        }\n        return result;\n    }\n    union(b) {\n        let result;\n        let long;\n        let short;\n        if (this.length > 0 || b.length > 0) {\n            if (this.length < b.length) {\n                short = this, long = b;\n            }\n            else {\n                long = this, short = b;\n            }\n            if (b instanceof SortedList && this.comparer === b.comparer) {\n                result = this.create(this.comparer, long.values);\n                let longPos = long.getInsertIndex(short.get(0)) - 1;\n                let lastPos = long.getInsertIndex(short.last()) - 1;\n                let i = -1;\n                let shortLen = short.length;\n                while (++i < shortLen && longPos < lastPos) {\n                    let el = short.get(i);\n                    let aVsB = -1;\n                    while (++longPos < lastPos && (aVsB = this.comparer(long.get(longPos), el)) < 0) {\n                        void (0);\n                    }\n                    if ((aVsB > 0 && longPos < lastPos) || longPos === lastPos) {\n                        result.add(el);\n                    }\n                }\n                if (i < shortLen) {\n                    --i;\n                    while (++i < shortLen) {\n                        result.add(short.get(i));\n                    }\n                }\n            }\n            else if (long instanceof SortedList || (long instanceof List && long.indexer !== null)) {\n                result = this.create(this.comparer, long.values);\n                short.forEach((el) => {\n                    if (!long.contains(el)) {\n                        result.add(el);\n                    }\n                });\n            }\n            else {\n                result = this.create(this.comparer, short.toList().union(long));\n            }\n        }\n        else {\n            result = this.create(this.comparer);\n        }\n        return result;\n    }\n    toList() {\n        return new List(this.values);\n    }\n    toJSON() {\n        return this.values;\n    }\n    serialize() {\n        return this.values.map((el) => isFunction(el.serialize) ? el.serialize() : el);\n    }\n    deserialize(array, ...types) {\n        this._list.deserialize(array, ...types);\n        this.sort();\n        return this;\n    }\n}\n//# sourceMappingURL=SortedList.js.map","class TimerState {\n}\nTimerState._hasPerformance = typeof (performance) !== \"undefined\";\nexport class Timer {\n    static get time() {\n        return TimerState._time;\n    }\n    static now() {\n        if (TimerState._hasPerformance) {\n            return performance.now();\n        }\n        else {\n            const hrTime = process.hrtime();\n            return hrTime[0] * 1000 + (hrTime[1] / 1e6);\n        }\n    }\n    static start() {\n        const now = Timer.now();\n        TimerState._start = TimerState._last = now;\n        return TimerState._time = 0;\n    }\n    static stop() {\n        const start = TimerState._start;\n        const now = Timer.now();\n        TimerState._last = now;\n        return TimerState._time = now - start;\n    }\n}\n//# sourceMappingURL=Timer.js.map","import { Global } from \"./Global\";\nimport { hasConsole, hasWindow, isNotUndefined } from \"./Test\";\nimport { Timer } from \"./Timer\";\nclass LoggableCounter {\n    constructor(name = \"\") {\n        this.name = \"\";\n        this._value = 0;\n        this.name = name;\n    }\n    log() {\n        console.log(\"Counter \" + this.name + \": \" + this.toString());\n    }\n    inc() {\n        this._value++;\n        return this;\n    }\n    reset() {\n        this._value = 0;\n        return this;\n    }\n    valueOf() {\n        return this._value;\n    }\n    toString() {\n        return this._value.toString();\n    }\n}\nclass UtilState {\n}\nUtilState._int = { \"0\": 0 };\nUtilState._counter = { \"\": new LoggableCounter(\"\") };\nexport function init(win) {\n    if (win !== undefined) {\n        Global.window = win;\n    }\n}\nexport function getFunctionName(fn) {\n    let result;\n    if (fn.hasOwnProperty(\"name\") !== undefined) {\n        result = fn.name;\n    }\n    else {\n        const fnString = fn.toString();\n        result = fnString.substring(9, fnString.indexOf(\"(\"));\n    }\n    return result;\n}\nexport function getFunctionCode(fn) {\n    let result;\n    const fnString = fn.toString();\n    result = fnString.substring(fnString.indexOf(\"{\") + 1, fnString.lastIndexOf(\"}\"));\n    return result;\n}\nexport function newUUID() {\n    let d = new Date().getTime();\n    d += Timer.now();\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n        const r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n}\nexport function newInt(key = 0) {\n    if (UtilState._int[key] === undefined) {\n        UtilState._int[key] = 0;\n    }\n    return UtilState._int[key]++;\n}\nexport function counter(key = \"\") {\n    if (UtilState._counter[key] === undefined) {\n        UtilState._counter[key] = new LoggableCounter(key.toString());\n    }\n    return UtilState._counter[key];\n}\nexport function count(key = \"\") {\n    return counter(key).inc();\n}\nexport function callDebugger() {\n    debugger;\n}\nexport function pipeOut(log, warn, error) {\n    if (hasConsole()) {\n        proxyFn(console, \"log\", function (superfn, ...args) { superfn(...args); log(...args); });\n        proxyFn(console, \"warn\", function (superfn, ...args) { superfn(...args); warn(...args); });\n        proxyFn(console, \"error\", function (superfn, ...args) { superfn(...args); error(...args); });\n    }\n    else {\n        const console = {\n            log,\n            warn,\n            error\n        };\n        if (!(hasWindow())) {\n            Global.window = {};\n        }\n        Global.window.console = console;\n    }\n}\nexport function assert(assertion, message, isDebug = true) {\n    let result = true;\n    if (!assertion) {\n        if (hasConsole) {\n            result = false;\n            console.error(\"Assertion failed: \" + message);\n        }\n        if (isDebug) {\n            callDebugger();\n        }\n    }\n    return result;\n}\nexport function proxyFn(objOrClass, fnName, proxyFn) {\n    objOrClass = isNotUndefined(objOrClass.prototype) ? objOrClass.prototype : objOrClass;\n    const fn = objOrClass[fnName];\n    const _superFn = function (...args) {\n        if (args.length !== 0) {\n            return fn.apply(this || objOrClass, args);\n        }\n        else {\n            return fn.call(this || objOrClass);\n        }\n    };\n    objOrClass[fnName] = proxyFn.bind(objOrClass, _superFn);\n}\nexport function loop(count, fn) {\n    let i = -1;\n    while (++i < count) {\n        fn(i);\n    }\n}\nexport function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n}\n//# sourceMappingURL=Util.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { map } from \"../Arr\";\nimport { clone, isSameClass, setProperties } from \"../Obj\";\nimport { Initable } from \"../standard/mixins/Initable\";\nimport { isArray, isNullOrUndefined } from \"../Test\";\nimport { newUUID } from \"../Util\";\nimport { Dictionary } from \"./Dictionary\";\nimport { List } from \"./List\";\nimport { Stack } from \"./Stack\";\nlet Tree = Tree_1 = class Tree {\n    constructor(id) {\n        this.id = \"\";\n        this.parent = null;\n        this.children = null;\n        this.data = null;\n        this.virtual = false;\n        this.id = isNullOrUndefined(id) ? newUUID() : id;\n    }\n    static fromObject(obj) {\n        const parent = (this instanceof Tree_1) ? this : null;\n        const root = new Tree_1(obj.id).init({ data: obj.data, parent });\n        if (obj.children !== undefined && isArray(obj.children)) {\n            root.children = new List(map(obj.children, Tree_1.fromObject.bind(root)));\n        }\n        return root;\n    }\n    static fromNodeList(nodes, mapcfg, virtualRoot = false, ctor = Tree_1) {\n        let result = new Tree_1();\n        let mapResolver = (key) => {\n            return !mapcfg || typeof (mapcfg[key]) === \"undefined\" ? (el) => el[key] :\n                typeof (mapcfg[key]) === \"string\" ? (el) => el[mapcfg[key]] :\n                    mapcfg[key];\n        };\n        let map = {\n            id: mapResolver(\"id\"),\n            parent: mapResolver(\"parent\"),\n            data: mapResolver(\"data\")\n        };\n        let list = new List(nodes);\n        let lookup = new Dictionary();\n        let nodeList = list.map((el) => new ctor().init({ id: map.id(el), data: map.data(el) }));\n        nodeList.forEach((node, i) => {\n            if (!lookup.has(node.id)) {\n                lookup.set(node.id, []);\n            }\n            lookup.get(node.id).push(node);\n        });\n        let rootNodes = new List();\n        list.forEach((el, i) => {\n            let parentId = map.parent(el);\n            let nodeId = map.id(el);\n            if (lookup.contains(parentId)) {\n                lookup.get(parentId).forEach((p) => p.add(nodeList.get(i)));\n            }\n            else {\n                rootNodes.add(nodeList.get(i));\n            }\n        });\n        if (virtualRoot === false) {\n            result = rootNodes.first();\n        }\n        else {\n            result = new ctor().init({ virtual: true });\n            rootNodes.forEach((el) => result.add(el));\n        }\n        return result;\n    }\n    get root() {\n        let root = this;\n        while (root.parent) {\n            root = root.parent;\n        }\n        return root;\n    }\n    create(...args) {\n        return new (this.constructor)(...args);\n    }\n    init(obj) {\n        setProperties(this, obj);\n        return this;\n    }\n    insertAt(pos, data, id) {\n        let node;\n        if (this.children === null || this.children.count <= pos) {\n            node = this.add(data);\n        }\n        else {\n            if (data instanceof Tree_1) {\n                node = data;\n                data.parent = this;\n            }\n            else {\n                node = this.create(id).init({ data, parent: this });\n            }\n            this.children.insertAt(pos, node);\n        }\n        return node;\n    }\n    add(data, id) {\n        let node;\n        if (this.children === null) {\n            this.children = new List();\n        }\n        if (isSameClass(data, this)) {\n            node = data;\n            node.parent = this;\n            this.children.add(node);\n        }\n        else {\n            node = (this.create(id)).init({ data: data, parent: this });\n            this.children.add(node);\n        }\n        return node;\n    }\n    remove() {\n        if (this.parent !== null) {\n            this.parent.children.remove(this);\n        }\n    }\n    prune() {\n        if (this.children !== null) {\n            this.children\n                .forEach(function (el, i) {\n                el.parent = null;\n            })\n                .clear();\n        }\n        this.children = null;\n        return this;\n    }\n    cut() {\n        this.remove();\n        this.parent = null;\n        return this;\n    }\n    forEach(fn, _i = 0) {\n        fn(this, _i);\n        if (this.children) {\n            this.children.forEach((child) => child.forEach(fn));\n        }\n        return this;\n    }\n    reduce(fn, start) {\n        const stack = new Stack();\n        let acc = start;\n        if (!fn) {\n            fn = (acc, cur) => (acc.push({ id: cur.id, parent: cur.parent ? cur.parent.id : null, data: cur.data }), acc);\n        }\n        if (start === undefined) {\n            acc = [];\n        }\n        let cur;\n        let i;\n        stack.push(this);\n        while (cur = stack.pop()) {\n            acc = fn(acc, cur);\n            i = (cur.children && cur.children.count) || 0;\n            while (i--) {\n                stack.push(cur.children.get(i));\n            }\n        }\n        return acc;\n    }\n    clone() {\n        const result = this.create();\n        result.id = this.id;\n        result.children = this.children === null ? null : this.children.clone();\n        if (result.children !== null) {\n            result.children.forEach((node) => node.parent = result);\n        }\n        result.data = this.data === null || this.data === undefined ? this.data : clone(this.data);\n        return result;\n    }\n    duplicateNode() {\n        const result = this.create();\n        result.id = this.id;\n        result.data = this.data;\n        return result;\n    }\n    filter(condition, parent = null) {\n        let node = null;\n        if (condition(this)) {\n            node = this.duplicateNode();\n            const children = this.children;\n            node.parent = parent;\n            if (children !== null) {\n                node.children =\n                    children\n                        .select(condition)\n                        .map(function (el, i) {\n                        return el.filter(condition, node);\n                    });\n            }\n        }\n        return node;\n    }\n    select(condition, acc = new List()) {\n        const result = acc;\n        const children = this.children;\n        if (condition === undefined || condition(this)) {\n            result.add(this);\n        }\n        if (children) {\n            children.reduce(function (acc, cur) {\n                return cur.select(condition, acc);\n            }, result);\n        }\n        return result;\n    }\n    find(condition) {\n        let result = null;\n        const children = this.children;\n        if (children !== null) {\n            let i = -1;\n            const len = this.children.count;\n            const val = this.children.values;\n            while (++i < len) {\n                if (condition(val[i])) {\n                    result = val[i];\n                    break;\n                }\n                else {\n                    result = val[i].children !== null ? val[i].find(condition) : null;\n                    if (result !== null) {\n                        break;\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    depth() {\n        let result = 0;\n        let node = this;\n        while (node.parent) {\n            node = node.parent;\n            ++result;\n        }\n        return result;\n    }\n    sort(comparer) {\n        if (this.children !== null) {\n            this.children.orderBy(comparer);\n            this.children.forEach((el) => el.sort(comparer));\n        }\n        return this;\n    }\n    toJSON() {\n        let result = new List();\n        result.push({ id: this.id, data: this.data, parent: this.parent === null ? null : this.parent.id, children: this.children === null ? null : this.children.map((el) => el.id) });\n        if (this.children !== null) {\n            this.children.forEach((node) => result.append(node.toJSON()));\n        }\n        return result.toJSON();\n    }\n    serialize() {\n        let result = new List();\n        result.push({ id: this.id, data: this.data, parent: this.parent === null ? null : this.parent.id, children: this.children === null ? null : this.children.map((el) => el.id) });\n        if (this.children !== null) {\n            this.children.forEach((node) => result.append(node.serialize()));\n        }\n        return result.serialize();\n    }\n};\nTree = Tree_1 = __decorate([\n    Initable,\n    __metadata(\"design:paramtypes\", [Object])\n], Tree);\nexport { Tree };\nvar Tree_1;\n//# sourceMappingURL=Tree.js.map","import { deepCopy, slice, deserialize } from \"../Arr\";\nimport { isFunction } from \"../Test\";\nimport { List } from \"./List\";\nexport class Stack {\n    constructor(size) {\n        this.DEFAULT_SIZE = 100;\n        this._pos = 0;\n        this._limit = 0;\n        if (!size) {\n            size = this.DEFAULT_SIZE;\n        }\n        this.DEFAULT_SIZE = size;\n        this._array = new Array(size);\n        this.push = this.fastPush;\n    }\n    get values() {\n        return slice(this._array, 0, this._pos);\n    }\n    get depth() {\n        return this._pos;\n    }\n    get size() {\n        return this._pos;\n    }\n    get isEmpty() {\n        return this.size === 0;\n    }\n    get limit() {\n        return this._limit;\n    }\n    set limit(value) {\n        if (value < 0) {\n            value = 0;\n        }\n        this._limit = value;\n        if (value === 0) {\n            this.push = this.fastPush;\n        }\n        else {\n            this.push = this.limitedPush;\n            this.limitObjects();\n        }\n    }\n    create(size) {\n        return new (this.constructor)(size);\n    }\n    push(obj) {\n    }\n    fastPush(obj) {\n        this._array[this._pos++] = obj;\n    }\n    limitedPush(obj) {\n        this._array[this._pos] = obj;\n        ++this._pos;\n        this.limitObjects();\n    }\n    pop() {\n        let result = undefined;\n        if (this._pos !== 0) {\n            result = this._array[--this._pos];\n        }\n        return result;\n    }\n    peek() {\n        return this._array[this._pos - 1];\n    }\n    peekAt(index) {\n        return index < 0 || index >= this._pos ? undefined : this._array[this._pos - index - 1];\n    }\n    toList() {\n        const result = new List();\n        return new List(this.values);\n    }\n    clear() {\n        this._pos = 0;\n        this._array.length = this.DEFAULT_SIZE;\n        return this;\n    }\n    clone() {\n        const arr = deepCopy(this._array);\n        let result = this.create(this.DEFAULT_SIZE);\n        result._array = arr;\n        result._limit = this._limit;\n        result._pos = this._pos;\n        return result;\n    }\n    limitObjects() {\n        while (this._pos > this._limit) {\n            this._array.shift();\n            --this._pos;\n        }\n    }\n    toJSON() {\n        return slice(this.values, 0, this._pos);\n    }\n    serialize() {\n        return slice(this.values, 0, this._pos).map((el) => isFunction(el.serialize) ? el.serialize() : el);\n    }\n    deserialize(array, ...types) {\n        deserialize(array, this._array, ...types);\n        this._pos = array.length;\n        return this;\n    }\n}\n//# sourceMappingURL=Stack.js.map","import { Global } from \"./Global\";\nexport var Sides;\n(function (Sides) {\n    Sides[Sides[\"Top\"] = 0] = \"Top\";\n    Sides[Sides[\"Bottom\"] = 1] = \"Bottom\";\n    Sides[Sides[\"Left\"] = 2] = \"Left\";\n    Sides[Sides[\"Right\"] = 3] = \"Right\";\n})(Sides || (Sides = {}));\nclass DomState {\n}\nDomState.Sides = Sides;\nDomState._window = Global.window;\nDomState._document = Global.window ? Global.window.document : undefined;\nDomState._el = Global.window ? Global.window.document.createElement(\"div\") : undefined;\nexport function init(win) {\n    Global.window = win;\n    DomState._window = Global.window;\n    DomState._document = DomState._window.document;\n    DomState._el = DomState._document.createElement(\"div\");\n}\nexport function toArray(a) {\n    return Array.prototype.slice.call(a);\n}\nexport function create(html, attr) {\n    let result, keys, i, k, styles, styleKeys;\n    DomState._el.innerHTML = html;\n    result = DomState._el.children[0];\n    setAttr(result, attr);\n    clear(DomState._el);\n    return result;\n}\nexport function outerHTML(el) {\n    DomState._el.appendChild(el);\n    const result = DomState._el.innerHTML;\n    clear(DomState._el);\n    return result;\n}\nexport function setAttr(_el, attr) {\n    let el;\n    if (typeof (_el) === \"string\") {\n        el = get(_el);\n    }\n    else {\n        el = _el;\n    }\n    let keys, i, k, styles, styleKeys, style;\n    if (attr !== undefined && typeof (attr) === \"object\") {\n        keys = Object.keys(attr);\n        for (i = 0; i < keys.length; i++) {\n            if (keys[i] === \"style\") {\n                styles = attr[keys[i]];\n                styleKeys = Object.keys(styles);\n                for (k = 0; k < styleKeys.length; k++) {\n                    style = styles[styleKeys[k]];\n                    if (typeof (style) === \"string\") {\n                        el.style.setProperty(styleKeys[k], style);\n                    }\n                    else {\n                        el.style.setProperty(styleKeys[k], style[0], style[1]);\n                    }\n                }\n            }\n            else if (keys[i] === \"classes\" && attr[keys[i]] !== undefined && attr[keys[i]].join) {\n                el.setAttribute(\"className\", attr[keys[i]].join(\" \"));\n            }\n            else {\n                el.setAttribute(keys[i], attr[keys[i]]);\n            }\n        }\n    }\n}\nexport function remove(element) {\n    return element.parentNode === undefined ? null : element.parentNode.removeChild(element);\n}\nexport function replace(src, target) {\n    let result = target;\n    if (src.parentNode) {\n        src.parentNode.replaceChild(target, src);\n    }\n    return result;\n}\nexport function clear(element) {\n    let i = element.children.length;\n    while (i--) {\n        element.removeChild(element.children[i]);\n    }\n}\nexport function get(id) {\n    let result = DomState._document.getElementById(id);\n    if (result === null) {\n        switch (id) {\n            default:\n                result = DomState._document.body;\n                break;\n        }\n    }\n    return result;\n}\nexport function find(selector) {\n    return DomState._document.querySelector(selector);\n}\nexport function findAll(selector, root) {\n    return toArray((root || DomState._document).querySelectorAll(selector));\n}\nexport function children(root, selector) {\n    const children = toArray((root || DomState._document).children);\n    return selector === undefined ? children : children.filter(is.bind(this, selector));\n}\nexport function findParent(root, selector) {\n    let result = root.parentElement;\n    while (result) {\n        if (is(selector, result)) {\n            break;\n        }\n        result = result.parentElement;\n    }\n    return result;\n}\nexport function position(el, x, y) {\n    el.style.top = y + \"px\";\n    el.style.left = x + \"px\";\n}\nexport function is(selector, element) {\n    let result = false;\n    if (element.matches) {\n        result = element.matches(selector);\n    }\n    else if (element.msMatchesSelector) {\n        result = element.msMatchesSelector(selector);\n    }\n    else if (element.webkitMatchesSelector) {\n        result = element.webkitMatchesSelector(selector);\n    }\n    else {\n        if (element.parentElement === null) {\n            throw new Error(\"Element has no parent\");\n        }\n        if (element.id !== \"\") {\n            result = element.parentElement.querySelector(\"#\" + element.id) !== null;\n        }\n        else {\n            result = toArray(element.parentElement.querySelectorAll(selector)).indexOf(element) !== -1;\n        }\n    }\n    return result;\n}\nexport function setStylesExplicitly(element, ...styles) {\n    const comp = DomState._window.getComputedStyle(element);\n    for (const style of styles) {\n        element.style[style] = comp[style];\n    }\n}\n//# sourceMappingURL=Dom.js.map","export var MocDataType;\n(function (MocDataType) {\n    MocDataType[MocDataType[\"LinearInt\"] = 0] = \"LinearInt\";\n    MocDataType[MocDataType[\"RandomInt\"] = 1] = \"RandomInt\";\n    MocDataType[MocDataType[\"LinearFloat\"] = 2] = \"LinearFloat\";\n    MocDataType[MocDataType[\"RandomFloat\"] = 3] = \"RandomFloat\";\n})(MocDataType || (MocDataType = {}));\nexport const VALID_CHARS = \" ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\nexport function randomString(length = 25) {\n    let result = \"\";\n    for (let i = 0; i < length; i += 1) {\n        result += VALID_CHARS.charAt(Math.floor(Math.random() * VALID_CHARS.length));\n    }\n    return result;\n}\nexport function randomInt() {\n    return this.randomNumber() | 0;\n}\nexport function randomNumber() {\n    return Math.random() * 2147483647;\n}\nexport function numericArray(length, type = MocDataType.LinearInt) {\n    const result = new Array(length);\n    switch (type) {\n        case MocDataType.RandomInt:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = this.randomInt();\n            }\n            break;\n        case MocDataType.LinearFloat:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = i + 0.5;\n            }\n            break;\n        case MocDataType.RandomFloat:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = this.randomNumber();\n            }\n            break;\n        default:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = i;\n            }\n            break;\n    }\n    return result;\n}\nexport function stringArray(arrayLength, stringLength) {\n    const result = new Array(arrayLength);\n    let i = -1;\n    while (++i < arrayLength) {\n        result[i] = this.randomString(stringLength);\n    }\n    return result;\n}\n//# sourceMappingURL=MocData.js.map","import { setProperties } from \"../../Obj\";\nexport function Initable(constructor) {\n    return class extends constructor {\n        init(obj, mapping) {\n            setProperties(this, obj, mapping);\n            return this;\n        }\n    };\n}\n//# sourceMappingURL=Initable.js.map","var VERSION = \"0.1.0\";\nimport { Dictionary, Vec2, Timer, List } from \"goodcore\";\nimport { until } from \"goodcore/Arr\";\nimport { newUUID } from \"goodcore/Util\";\nimport { is, findAll } from \"goodcore/Dom\";\nvar GoodTap = (function () {\n    function GoodTap(rootElement) {\n        this.version = VERSION;\n        this.minSwipeDistance = 100;\n        this.maxTapDuration = 400;\n        this.defaultLongPressDuration = 400;\n        this.defaultDragResistance = 0;\n        this.dragResistanceSquared = 0;\n        this.events = [\"down\", \"drag\", \"up\", \"press\", \"tap\", \"swipe\"];\n        this.downEvents = [\"down\"];\n        this.upEvents = [\"up\", \"tap\", \"swipe\"];\n        this.longPressIntervals = new Dictionary();\n        this.eventAttr = \"\";\n        this.upEventsAndPress = [];\n        this.index = 0;\n        this.lastInsides = new List();\n        this.dragging = new List();\n        this.isListeningToMovement = false;\n        this.init(rootElement || document.body);\n        this.eventAttr = this.events.map(function (name) { return \"[\" + name + \"]\"; }).join(\",\");\n        this.upEventsAndPress = this.upEvents.concat([\"press\"]);\n    }\n    GoodTap.prototype.init = function (rootElement) {\n        var _this = this;\n        if (this.hasTouchEvent()) {\n            rootElement.addEventListener(\"touchstart\", function (ev) { _this.start(ev, rootElement); });\n            rootElement.addEventListener(\"touchend\", function (ev) { _this.end(ev, rootElement); });\n        }\n        rootElement.addEventListener(\"mousedown\", function (ev) { _this.start(ev, rootElement); });\n        rootElement.addEventListener(\"mouseup\", function (ev) { _this.end(ev, rootElement); });\n        rootElement.addEventListener(\"focus\", function (ev) { return _this.triggerOutside(ev.target, ev, rootElement); }, true);\n        this.root = rootElement;\n    };\n    GoodTap.prototype.findTarget = function (el) {\n        var target = null;\n        while (el && el.parentElement !== document && target === null) {\n            if (is(this.eventAttr, el)) {\n                target = el;\n            }\n            el = el.parentElement;\n        }\n        return target;\n    };\n    GoodTap.prototype.findTargets = function (el) {\n        var targets = [];\n        while (el && el.parentElement !== document) {\n            if (!el.id) {\n                el.id = newUUID();\n            }\n            if (is(this.eventAttr, el)) {\n                targets.push(el);\n            }\n            el = el.parentElement;\n        }\n        return targets;\n    };\n    GoodTap.prototype.getTouchPos = function (ev, pos) {\n        pos = pos || new Vec2(0, 0);\n        if (ev instanceof TouchEvent) {\n            pos.x = ev.changedTouches[0].pageX;\n            pos.y = ev.changedTouches[0].pageY;\n        }\n        else if (ev instanceof MouseEvent) {\n            pos.x = ev.pageX;\n            pos.y = ev.pageY;\n        }\n        return pos;\n    };\n    GoodTap.prototype.longPress = function (ev, target) {\n        var result = true;\n        var touchInfo = target.touchInfo;\n        result = this.executeAction(ev, target, \"press\", touchInfo);\n        if (result === false || target.hasAttribute(\"once\")) {\n            clearInterval(this.longPressIntervals.get(touchInfo.index));\n            this.longPressIntervals.delete(touchInfo.index);\n        }\n    };\n    GoodTap.prototype.triggerOutside = function (target, ev, rootElement) {\n        var _this = this;\n        var outside = new List(findAll(\"[outside]\", this.root));\n        if (outside.length > 0) {\n            var insides_1 = new List(this.findTargets(target));\n            var preventOutside = insides_1.contains(function (el) { return el.hasAttribute(\"preventDefault\"); });\n            if (!preventOutside) {\n                outside\n                    .filter(function (el) { return _this.lastInsides.contains(el) && !insides_1.contains(el); })\n                    .forEach(function (el) { return _this.handleEvent(\"outside\", ev, el); });\n                this.lastInsides = insides_1;\n            }\n        }\n    };\n    GoodTap.prototype.move = function (ev, rootElement, target, action) {\n        var result = true;\n        var touchInfo = target.touchInfo;\n        if (touchInfo === undefined) {\n            this.end(ev, rootElement);\n            return;\n        }\n        this.getTouchPos(ev, touchInfo.pos);\n        if (touchInfo.dragResistance === 0 ||\n            this.getTouchPos(ev).subtract(touchInfo.pos).lengthSq() < touchInfo.dragResistance) {\n            touchInfo.dragResistance = 0;\n            try {\n                if (action === \"[fn]\" && (\"drag-fn\") in target) {\n                    result = target[\"drag-fn\"](ev, target, touchInfo);\n                }\n                else {\n                    target[\"drag-fn\"] = (new Function(\"event\", \"target\", \"touch\", action)).bind(target);\n                    result = target[\"drag-fn\"](ev, target, touchInfo);\n                }\n            }\n            catch (err) {\n                throw name + \" event function error on element '\" + target.id + \"'\\n\" + err.toString();\n            }\n            if (result === false) {\n                this.end(ev, rootElement);\n            }\n        }\n    };\n    GoodTap.prototype.start = function (ev, rootElement) {\n        var _this = this;\n        this.longPressIntervals.list.forEach(function (long) { return clearInterval(long); });\n        this.longPressIntervals.clear();\n        var preventDefault = false;\n        var stopPropagation = false;\n        var target = ev.target;\n        var loopCounter = 0;\n        this.triggerOutside(target, ev, rootElement);\n        while (loopCounter < 100 && (target = this.findTarget(target)) && !stopPropagation) {\n            ++loopCounter;\n            var pressInterval = null;\n            if (target.hasAttribute(\"press\")) {\n                pressInterval = setInterval((function (target) { return _this.longPress(ev, target); }).bind(this, target), parseInt(target.getAttribute(\"pressInterval\")) || this.defaultLongPressDuration);\n            }\n            var moveHandler = undefined;\n            var dragResistance = 0;\n            if (target.hasAttribute(\"drag\")) {\n                dragResistance = parseInt(target.getAttribute(\"dragResistance\"));\n                if (isNaN(dragResistance)) {\n                    dragResistance = this.defaultDragResistance;\n                }\n                dragResistance *= dragResistance;\n                var dragAction = target.getAttribute(\"drag\");\n                moveHandler = (function (t, d, ev) {\n                    _this.move(ev, rootElement, t, d);\n                }).bind(this, target, dragAction);\n                if (this.hasTouchEvent()) {\n                    rootElement.addEventListener(\"touchmove\", moveHandler);\n                }\n                rootElement.addEventListener(\"mousemove\", moveHandler);\n            }\n            target.classList.add(\"gt-active\");\n            target.touchInfo = {\n                index: this.index++,\n                time: Timer.now(),\n                pos: this.getTouchPos(ev),\n                long: pressInterval,\n                moveHandler: moveHandler,\n                dragResistance: dragResistance,\n            };\n            if (target.hasAttribute(\"dragstart\")) {\n                this.handleEvent(\"dragstart\", ev, target);\n            }\n            if (pressInterval) {\n                this.longPressIntervals.set(target.touchInfo.index, target.touchInfo.long);\n            }\n            until(this.downEvents, function (name) {\n                if (target.hasAttribute(name)) {\n                    stopPropagation = (_this.handleEvent(name, ev, target) === false);\n                    if (!stopPropagation && target.hasAttribute(\"stopPropagation\") || target.hasAttribute(\"gt-false\")) {\n                        stopPropagation = true;\n                        ev.stopPropagation();\n                    }\n                    if (target.hasAttribute(\"preventDefault\") || target.hasAttribute(\"gt-false\")) {\n                        ev.preventDefault();\n                        preventDefault = true;\n                    }\n                }\n                return stopPropagation;\n            });\n            target = target.parentElement;\n        }\n    };\n    GoodTap.prototype.isSwipe = function (ev, target) {\n        var pos = this.getTouchPos(ev);\n        var result = false;\n        if (\"touchInfo\" in target) {\n            var dX = pos.x - target.touchInfo.pos.x;\n            var dY = pos.y - target.touchInfo.pos.y;\n            var absDX = Math.abs(dX);\n            var absDY = Math.abs(dY);\n            var horizontal = absDX > absDY;\n            var distance = horizontal ? absDX : absDY;\n            result = distance >= this.minSwipeDistance;\n            if (result) {\n                target.touchInfo.swipeInfo = {\n                    direction: horizontal ?\n                        (dX < 0 ? \"left\" : \"right\") :\n                        (dY < 0 ? \"up\" : \"down\"),\n                    distance: distance,\n                    delta: new Vec2(dX, dY)\n                };\n            }\n        }\n        return result;\n    };\n    GoodTap.prototype.end = function (ev, rootElement) {\n        var _this = this;\n        var time = Timer.now();\n        var stopPropagation = false;\n        var target = ev.target;\n        var loopCounter = 0;\n        var endedOutsideTargets = new List();\n        var originalTarget = target;\n        this.dragging.clear();\n        var _loop_1 = function () {\n            ++loopCounter;\n            var touchInfo = target.touchInfo;\n            if (touchInfo !== undefined) {\n                var duration_1 = time - touchInfo.time;\n                until(this_1.upEventsAndPress, function (name) {\n                    if (target.hasAttribute(name)) {\n                        var isSwipe = _this.isSwipe(ev, target);\n                        if ((name === \"swipe\" && isSwipe)\n                            || (name === \"tap\" && !isSwipe && duration_1 < _this.maxTapDuration)\n                            || (name === \"up\")) {\n                            stopPropagation = (_this.handleEvent(name, ev, target) === false);\n                        }\n                        if (stopPropagation || target.hasAttribute(\"stopPropagation\") || target.hasAttribute(\"gt-false\")) {\n                            stopPropagation = true;\n                            ev.stopPropagation();\n                            delete target.touchInfo;\n                        }\n                        if (target.hasAttribute(\"preventDefault\") || target.hasAttribute(\"gt-false\")) {\n                            ev.preventDefault();\n                        }\n                    }\n                    return stopPropagation;\n                });\n            }\n            target = target.parentElement;\n        };\n        var this_1 = this;\n        while (loopCounter < 100 && (target = this.findTarget(target)) && !stopPropagation) {\n            _loop_1();\n        }\n        findAll(\".gt-active\").forEach(function (el) {\n            el.classList.remove(\"gt-active\");\n            if (el.touchInfo !== undefined && el.touchInfo.moveHandler !== undefined) {\n                rootElement.removeEventListener(\"touchmove\", el.touchInfo.moveHandler);\n                rootElement.removeEventListener(\"mousemove\", el.touchInfo.moveHandler);\n                _this.handleEvent(\"dragend\", ev, el);\n            }\n            delete el.touchInfo;\n        });\n        this.longPressIntervals.list.forEach(function (long) { return clearInterval(long); });\n        this.longPressIntervals.clear();\n    };\n    GoodTap.prototype.executeAction = function (ev, target, actionAttr, touchInfo) {\n        var result = true;\n        var action = target.getAttribute(actionAttr);\n        try {\n            if (action === \"[fn]\" && (actionAttr + \"-fn\") in target) {\n                result = target[actionAttr + \"-fn\"](ev, target, touchInfo);\n            }\n            else {\n                result = (new Function(\"event\", \"target\", \"touch\", action)).bind(target)(ev, target, touchInfo);\n            }\n        }\n        catch (err) {\n            throw name + \" event function error on element '\" + target.id + \"'\\n\" + err.toString();\n        }\n        return result;\n    };\n    GoodTap.prototype.handleEvent = function (name, ev, target) {\n        var actionAttr = name;\n        var result = true;\n        if (target) {\n            result = this.executeAction(ev, target, actionAttr, target.touchInfo);\n            if (name in this.upEvents) {\n                target.classList.remove(\"gt-active\");\n                if (this.longPressIntervals.has(target.touchInfo.index)) {\n                    clearInterval(this.longPressIntervals.get(target.touchInfo.index));\n                }\n                delete target.touchInfo;\n            }\n        }\n        return result;\n    };\n    GoodTap.prototype.on = function (element, name, fn) {\n        element.setAttribute(name, \"[fn]\");\n        element[name + \"-fn\"] = fn;\n    };\n    GoodTap.prototype.off = function (element, name) {\n        element.removeAttribute(name + \"-action\");\n        delete element[name + \"-fn\"];\n    };\n    GoodTap.prototype.hideKeyboard = function () {\n        var field = document.createElement(\"input\");\n        field.setAttribute(\"type\", \"text\");\n        document.body.appendChild(field);\n        setTimeout(function () {\n            field.focus();\n            setTimeout(function () {\n                field.setAttribute(\"style\", \"display:none;\");\n                field.parentElement.removeChild(field);\n            }, 50);\n        }, 50);\n    };\n    GoodTap.prototype.hasTouchEvent = function () {\n        return \"ontouchstart\" in document.documentElement;\n    };\n    GoodTap.prototype.outside = function () {\n        this.triggerOutside(this.root, new FocusEvent(\"\"));\n        this.hideKeyboard();\n    };\n    return GoodTap;\n}());\nexport { GoodTap };\nexport function init(root) {\n    return new GoodTap(root);\n}\n//# sourceMappingURL=index.js.map"],"names":["CalcConst","ROTATION_DEGREE_PRECISION","RADIAN_FACTOR","Math","PI","DEGREE_FACTOR","DEG360","ROTATION_LOOKUP","lookup","i","push","cos","sin","Vec2Const","EPSILON","IDENTITY","x","y","X_DIM","Y_DIM","Vec2","[object Object]","this","angle","horizontalAngle","direction","isZero","src","out","set","create","ceil","sqrt","lengthSq","atan2","rot","rotation","deg","rotationDeg","rotationRad","nx","ny","center","subtract","rotate","add","len","length","vectorB","scalar","target","abs","isNormalized","result","clone","normalize","temp","coeff","v","max","min","nativeWindow","win","window","Global","_window","_nativeWindow","hasNativeWindow","hasWindow","isArray","it","Array","Object","prototype","toString","call","isFunction","isNullOrUndefined","arg","undefined","isUndefined","isNotUndefined","isSameClass","a","b","args","areNullOrUndefined","areNotNullOrUndefined","constructor","obj","deepCopy","Date","getTime","RegExp","keys","key","setProperties","values","mapping","value","slice","from","count","Infinity","removeAt","arr","index","indexOfElement","el","indexOf","fn","shallowCopy","deepCopyInto","filter","map","mapInto","forEach","startIndex","until","fnOrTest","isCombined","populator","deserialize","array","types","T","passthroughT","newT","Dictionary","_lookup","_list","List","_isDirty","has","wipe","clear","cleanList","list","reCreateList","get","serialize","Symbol","iterator","_array","_index","_indexer","_pointer","Arr.shallowCopy","done","pos","Error","indexer","_reindex","size","j","Arr.create","unshift","Arr.insertAt","pop","delete","shift","arr2","arrs","concat","apply","Arr.concat","Arr.forEach","offset","Arr.append","Arr.deepCopyInto","Arr.shallowCopyInto","Arr.deepCopy","unindexEl","n","Arr.removeAt","Arr.forSome","Arr.until","Arr.reverseForEach","combined","Arr.reverseUntil","Arr.some","Arr.all","Arr.indexOf","Arr.indexOfElement","find","contains","left","right","temporary","Arr.reverse","first","Arr.filter","space","Arr.filterInto","Arr.slice","remove","insert","srcLen","insertLen","newLen","delta","Arr.splice","sort","Arr.map","Arr.mapInto","start","acc","Arr.reduce","test","Arr.reduceUntil","Arr.reverseReduce","Arr.reverseReduceUntil","equals","long","short","select","t","u","tuple","maxDepth","_flattenInner","depth","Arr.deserialize","TimerState","_hasPerformance","Timer","time","_time","performance","now","hrTime","process","hrtime","_start","_last","newUUID","d","replace","c","r","random","floor","Tree","Tree_1","id","parent","children","data","virtual","root","init","fromObject","bind","nodes","mapcfg","virtualRoot","ctor","mapResolver","nodeList","node","rootNodes","parentId","p","insertAt","_i","child","stack","DEFAULT_SIZE","_pos","_limit","fastPush","isEmpty","limit","limitedPush","limitObjects","cur","condition","duplicateNode","reduce","val","comparer","orderBy","append","toJSON","Sides","MocDataType","decorators","desc","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__decorate","k","metadata","__metadata","DomState","toArray","findAll","selector","_document","querySelectorAll","is","element","matches","msMatchesSelector","webkitMatchesSelector","parentElement","querySelector","document","_el","createElement","VERSION","GoodTap","rootElement","version","minSwipeDistance","maxTapDuration","defaultLongPressDuration","defaultDragResistance","dragResistanceSquared","events","downEvents","upEvents","longPressIntervals","eventAttr","upEventsAndPress","lastInsides","dragging","isListeningToMovement","body","name","join","_this","hasTouchEvent","addEventListener","ev","end","triggerOutside","findTarget","findTargets","targets","getTouchPos","TouchEvent","changedTouches","pageX","pageY","MouseEvent","longPress","touchInfo","executeAction","hasAttribute","clearInterval","outside","insides_1","handleEvent","move","action","dragResistance","Function","err","stopPropagation","loopCounter","pressInterval","setInterval","parseInt","getAttribute","moveHandler","isNaN","dragAction","classList","preventDefault","isSwipe","dX","dY","absDX","absDY","horizontal","distance","swipeInfo","_loop_1","duration_1","this_1","removeEventListener","actionAttr","on","setAttribute","off","removeAttribute","hideKeyboard","field","appendChild","setTimeout","focus","removeChild","documentElement","FocusEvent"],"mappings":"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"}