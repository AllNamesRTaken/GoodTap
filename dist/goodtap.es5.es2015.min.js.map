{"version":3,"file":"goodtap.es5.es2015.min.js","sources":["../node_modules/goodcore/dist/lib/Calc.js","../node_modules/goodcore/dist/lib/struct/Vec2.js","../node_modules/goodcore/dist/lib/Global.js","../node_modules/goodcore/dist/lib/Test.js","../node_modules/goodcore/dist/lib/Obj.js","../node_modules/goodcore/dist/lib/Arr.js","../node_modules/goodcore/dist/lib/struct/Dictionary.js","../node_modules/goodcore/dist/lib/struct/List.js","../node_modules/goodcore/dist/lib/struct/Stack.js","../node_modules/goodcore/dist/lib/standard/mixins/Initable.js","../node_modules/goodcore/dist/lib/Timer.js","../node_modules/goodcore/dist/lib/Util.js","../node_modules/goodcore/dist/lib/struct/Tree.js","../node_modules/goodcore/dist/lib/Dom.js","../node_modules/goodcore/dist/lib/MocData.js","lib/index.js"],"sourcesContent":["export class CalcConst {\r\n}\r\nCalcConst.ROTATION_DEGREE_PRECISION = 1;\r\nCalcConst.RADIAN_FACTOR = (1 / 360) * (2 * Math.PI);\r\nCalcConst.DEGREE_FACTOR = (1 / (2 * Math.PI) * 360);\r\nCalcConst.DEG360 = 360 * CalcConst.ROTATION_DEGREE_PRECISION;\r\nCalcConst.ROTATION_LOOKUP = (function () {\r\n    const lookup = [];\r\n    for (let i = 0; i < 360 * CalcConst.ROTATION_DEGREE_PRECISION; i++) {\r\n        lookup.push([Math.cos(i * CalcConst.RADIAN_FACTOR), Math.sin(i * CalcConst.RADIAN_FACTOR)]);\r\n    }\r\n    return lookup;\r\n})();\r\nexport function sign(x) {\r\n    return typeof x === \"number\" ? x ? x < 0 ? -1 : 1 : x === x ? 0 : NaN : NaN;\r\n}\r\nexport function rotationDeg(rotation) {\r\n    let deg = (rotation * CalcConst.ROTATION_DEGREE_PRECISION) | 0;\r\n    while (deg < 0) {\r\n        deg += CalcConst.DEG360;\r\n    }\r\n    while (deg >= CalcConst.DEG360) {\r\n        deg -= CalcConst.DEG360;\r\n    }\r\n    return CalcConst.ROTATION_LOOKUP[deg];\r\n}\r\nexport function rotationRad(rotation) {\r\n    const deg = rotation * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\r\n    return this.rotationDeg(deg / CalcConst.ROTATION_DEGREE_PRECISION);\r\n}\r\nexport function closestRadianRotation(radian) {\r\n    let deg = radian * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\r\n    while (deg < 0) {\r\n        deg += CalcConst.DEG360;\r\n    }\r\n    while (deg >= CalcConst.DEG360) {\r\n        deg -= CalcConst.DEG360;\r\n    }\r\n    return deg * CalcConst.RADIAN_FACTOR / CalcConst.ROTATION_DEGREE_PRECISION;\r\n}\r\n//# sourceMappingURL=Calc.js.map","import { rotationRad } from \"../Calc\";\r\nexport class Vec2Const {\r\n}\r\nVec2Const.EPSILON = 1e-8;\r\nVec2Const.IDENTITY = { x: 1, y: 1 };\r\nVec2Const.X_DIM = { x: 1, y: 0 };\r\nVec2Const.Y_DIM = { x: 0, y: 1 };\r\nexport class Vec2 {\r\n    constructor(x = 0, y = 0) {\r\n        this.angle = this.horizontalAngle;\r\n        this.direction = this.horizontalAngle;\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    get isZero() {\r\n        return this.x === 0 && this.y === 0;\r\n    }\r\n    create(x = 0, y = 0) {\r\n        return new (this.constructor)(x, y);\r\n    }\r\n    set(src) {\r\n        this.x = src.x;\r\n        this.y = src.y;\r\n        return this;\r\n    }\r\n    clone(out) {\r\n        const result = out ? out.set(this) : this.create(this.x, this.y);\r\n        return result;\r\n    }\r\n    toInt() {\r\n        this.x |= 0;\r\n        this.y |= 0;\r\n        return this;\r\n    }\r\n    ceil() {\r\n        this.x = Math.ceil(this.x);\r\n        this.y = Math.ceil(this.y);\r\n        return this;\r\n    }\r\n    toDecimal() {\r\n        this.x += Vec2Const.EPSILON;\r\n        this.y += Vec2Const.EPSILON;\r\n        return this;\r\n    }\r\n    lengthSq() { return (this.x * this.x + this.y * this.y); }\r\n    length() { return Math.sqrt(this.lengthSq()); }\r\n    horizontalAngle() { return Math.atan2(this.y, this.x); }\r\n    rotate(angle) {\r\n        const rot = rotationRad(angle);\r\n        const nx = (this.x * rot[0]) - (this.y * rot[1]);\r\n        const ny = (this.x * rot[1]) + (this.y * rot[0]);\r\n        this.x = nx;\r\n        this.y = ny;\r\n        return this;\r\n    }\r\n    rotateAround(center, angle) {\r\n        return this.subtract(center).rotate(angle).add(center);\r\n    }\r\n    normalize() {\r\n        const len = this.length();\r\n        if (len === 0) {\r\n            this.x = 1;\r\n            this.y = 0;\r\n        }\r\n        else {\r\n            this.x = this.x / len;\r\n            this.y = this.y / len;\r\n        }\r\n        return this;\r\n    }\r\n    scale(vectorB) {\r\n        this.x = this.x * vectorB.x;\r\n        this.y = this.y * vectorB.y;\r\n        return this;\r\n    }\r\n    relate(vectorB) {\r\n        this.x = this.x / vectorB.x;\r\n        this.y = this.y / vectorB.y;\r\n        return this;\r\n    }\r\n    multiply(scalar) {\r\n        this.x = this.x * scalar;\r\n        this.y = this.y * scalar;\r\n        return this;\r\n    }\r\n    add(vectorB) {\r\n        this.x = this.x + vectorB.x;\r\n        this.y = this.y + vectorB.y;\r\n        return this;\r\n    }\r\n    subtract(vectorB) {\r\n        this.x = this.x - vectorB.x;\r\n        this.y = this.y - vectorB.y;\r\n        return this;\r\n    }\r\n    invert() {\r\n        this.x = -this.x;\r\n        this.y = -this.y;\r\n        return this;\r\n    }\r\n    equals(target) {\r\n        return this.x === target.x && this.y === target.y;\r\n    }\r\n    almostEquals(target) {\r\n        return Math.abs(this.x - target.x) < Vec2Const.EPSILON && Math.abs(this.y - target.y) < Vec2Const.EPSILON;\r\n    }\r\n    getNormal(isNormalized) {\r\n        const result = this.clone();\r\n        if (!isNormalized) {\r\n            result.set(this).normalize();\r\n        }\r\n        const temp = result.x;\r\n        result.x = result.y;\r\n        result.y = -temp;\r\n        return result;\r\n    }\r\n    dot(vectorB) { return (this.x * vectorB.x + this.y * vectorB.y); }\r\n    cross(vectorB) { return ((this.x * vectorB.y) - (this.y * vectorB.x)); }\r\n    projectOnto(vectorB) {\r\n        const coeff = ((this.x * vectorB.x) + (this.y * vectorB.y)) / ((vectorB.x * vectorB.x) + (vectorB.y * vectorB.y));\r\n        this.x = coeff * vectorB.x;\r\n        this.y = coeff * vectorB.y;\r\n        return this;\r\n    }\r\n    verticalAngle() { return Math.atan2(this.x, this.y); }\r\n    rotateBy(rotation) {\r\n        const angle = -this.horizontalAngle() + rotation;\r\n        return this.rotate(angle);\r\n    }\r\n    max(v) {\r\n        this.x = Math.max(this.x, v.x);\r\n        this.y = Math.max(this.y, v.y);\r\n        return this;\r\n    }\r\n    min(v) {\r\n        this.x = Math.min(this.x, v.x);\r\n        this.y = Math.min(this.y, v.y);\r\n        return this;\r\n    }\r\n    zero() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=Vec2.js.map","let nativeWindow = true;\r\nvar win;\r\nif (typeof (window) === \"undefined\") {\r\n    win = null;\r\n    nativeWindow = false;\r\n}\r\nelse {\r\n    win = window;\r\n}\r\nexport class _Global {\r\n    constructor() {\r\n        this._window = win;\r\n        this._nativeWindow = nativeWindow;\r\n    }\r\n    get window() {\r\n        return this._window;\r\n    }\r\n    set window(v) {\r\n        this._window = v;\r\n        if (this.hasNativeWindow) {\r\n            win = v;\r\n        }\r\n    }\r\n    get hasNativeWindow() {\r\n        return this._nativeWindow;\r\n    }\r\n}\r\nexport let Global = new _Global();\r\n//# sourceMappingURL=Global.js.map","import { Global } from \"./Global\";\r\nexport function hasWindow() {\r\n    return Global.window !== null;\r\n}\r\nexport function hasConsole() {\r\n    return this.hasWindow() && Global.window.console !== undefined || typeof (console) === \"function\";\r\n}\r\nexport function isArray(it) {\r\n    return Array.isArray ? Array.isArray(it) : Object.prototype.toString.call(it) === \"[object Array]\";\r\n}\r\nexport function isElement(target) {\r\n    return target !== undefined && target !== null && target.nodeType === 1 ? true : false;\r\n}\r\nexport function isFunction(it) {\r\n    return Object.prototype.toString.call(it) === \"[object Function]\";\r\n}\r\nexport function isNumber(x) {\r\n    return x === +x;\r\n}\r\nexport function isInt(x) {\r\n    return isNumber(x) && (x === (x | 0));\r\n}\r\nexport function isString(x) {\r\n    return isNotNullOrUndefined(x) && x.constructor === String;\r\n}\r\nexport function areNullOrUndefined(...args) {\r\n    const len = args.length;\r\n    let i = -1;\r\n    let a;\r\n    let result = false;\r\n    while (!result && ++i < len) {\r\n        a = args[i];\r\n        result = a === undefined || a === null;\r\n    }\r\n    return result;\r\n}\r\nexport function areNotNullOrUndefined(...args) {\r\n    return !areNullOrUndefined(...args);\r\n}\r\nexport function isNullOrUndefined(arg) {\r\n    return arg === undefined || arg === null;\r\n}\r\nexport function isNotNullOrUndefined(arg) {\r\n    return !isNullOrUndefined(arg);\r\n}\r\nexport function areUndefined(...args) {\r\n    const len = args.length;\r\n    let i = -1;\r\n    let a;\r\n    let result = false;\r\n    while (!result && ++i < len) {\r\n        a = args[i];\r\n        result = a === undefined;\r\n    }\r\n    return result;\r\n}\r\nexport function areNotUndefined(...args) {\r\n    return !areUndefined(...args);\r\n}\r\nexport function isUndefined(arg) {\r\n    return arg === undefined;\r\n}\r\nexport function isNotUndefined(arg) {\r\n    return !isUndefined(arg);\r\n}\r\n//# sourceMappingURL=Test.js.map","import { deepCopy, flatten } from \"./Arr\";\r\nimport { areNotNullOrUndefined, isArray, isFunction } from \"./Test\";\r\nexport function destroy(obj) {\r\n    if (obj.constructor.prototype.destroy !== undefined) {\r\n        obj.destroy();\r\n    }\r\n    else {\r\n        setNull(obj);\r\n    }\r\n}\r\nexport function wipe(obj) {\r\n    const keys = Object.keys(obj);\r\n    let i = -1;\r\n    const len = keys.length;\r\n    while (++i < len) {\r\n        delete obj[keys[i]];\r\n    }\r\n}\r\nexport function setNull(obj) {\r\n    if (obj.constructor.prototype.clear !== undefined) {\r\n        obj.clear();\r\n    }\r\n    else {\r\n        const keys = Object.keys(obj);\r\n        let key = null;\r\n        let i = -1;\r\n        const len = keys.length;\r\n        while (++i < len) {\r\n            key = keys[i];\r\n            obj[key] = null;\r\n        }\r\n    }\r\n}\r\nexport function isClassOf(a, b) {\r\n    return areNotNullOrUndefined(a, b) && a instanceof b.constructor;\r\n}\r\nexport function isSameClass(a, b) {\r\n    return areNotNullOrUndefined(a, b) && a.constructor === b.constructor;\r\n}\r\nexport function inherits(a, b) {\r\n    return isClassOf(a, b) && !isSameClass(a, b);\r\n}\r\nexport function equals(a, b) {\r\n    let result = a === b;\r\n    if (a !== b && (a instanceof Object) && isSameClass(a, b)) {\r\n        if (isArray(a)) {\r\n            const len = a.length;\r\n            let i = 0;\r\n            result = len === b.length;\r\n            if (result) {\r\n                for (; i < len; i += 1) {\r\n                    result = equals(a[i], b[i]);\r\n                    if (result === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (a.constructor.prototype.equals) {\r\n            result = a.equals(b);\r\n        }\r\n        else {\r\n            const keys = Object.keys(a);\r\n            let key = null;\r\n            result = true;\r\n            let i = -1;\r\n            const len = keys.length;\r\n            while (++i < len) {\r\n                key = keys[i];\r\n                result = equals(a[key], b[key]);\r\n                if (!result) {\r\n                    if (isFunction(a[key])) {\r\n                        result = true;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function isDifferent(a, b) {\r\n    return !equals(a, b);\r\n}\r\nexport function shallowCopy(obj) {\r\n    const keys = Object.keys(obj);\r\n    const result = {};\r\n    let i = -1;\r\n    const len = keys.length;\r\n    while (++i < len) {\r\n        const key = keys[i];\r\n        result[key] = obj[key];\r\n    }\r\n    return result;\r\n}\r\nexport function clone(obj) {\r\n    let result;\r\n    if (!(obj instanceof Object)) {\r\n        result = obj;\r\n    }\r\n    else if (obj.constructor.prototype.clone !== undefined) {\r\n        result = obj.clone();\r\n    }\r\n    else if (isArray(obj)) {\r\n        result = deepCopy(obj);\r\n    }\r\n    else if (obj instanceof Date) {\r\n        return new Date(obj.getTime());\r\n    }\r\n    else if (obj instanceof RegExp) {\r\n        return new RegExp(obj);\r\n    }\r\n    else {\r\n        result = new obj.constructor();\r\n        const keys = Object.keys(obj);\r\n        let key = null;\r\n        let i = -1;\r\n        const len = keys.length;\r\n        while (++i < len) {\r\n            key = keys[i];\r\n            result[key] = clone(obj[key]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function cloneInto(src, target) {\r\n    if (isArray(target)) {\r\n        const arrS = src;\r\n        const arrT = target;\r\n        const len = arrS.length;\r\n        arrT.length = len;\r\n        let i = -1;\r\n        while (++i < len) {\r\n            if (arrS[i] instanceof Object) {\r\n                cloneInto(arrS[i], arrT[i]);\r\n            }\r\n            else {\r\n                arrT[i] = arrS[i];\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const keys = Object.keys(src);\r\n        let key = null;\r\n        let i = -1;\r\n        const len = keys.length;\r\n        while (++i < len) {\r\n            key = keys[i];\r\n            const a = src[key];\r\n            if (a instanceof Object) {\r\n                let b = target[key];\r\n                if (b === undefined || b === null) {\r\n                    if (isArray(a)) {\r\n                        b = target[key] = [];\r\n                    }\r\n                    else {\r\n                        b = target[key] = {};\r\n                    }\r\n                }\r\n                if (isDifferent(a, b)) {\r\n                    cloneInto(a, b);\r\n                }\r\n            }\r\n            else {\r\n                target[key] = a;\r\n            }\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function mixin(target = {}, exclude, ...sources) {\r\n    const result = target, len = sources ? sources.length : 0;\r\n    let i = 0;\r\n    sources = flatten(sources);\r\n    for (; i < len; i++) {\r\n        let src = sources[i];\r\n        if (isFunction(src)) {\r\n            src = src.prototype;\r\n        }\r\n        if (src === undefined) {\r\n            continue;\r\n        }\r\n        const keys = Object.keys(src);\r\n        let key = null;\r\n        if (exclude) {\r\n            let i = -1;\r\n            const len = keys.length;\r\n            while (++i < len) {\r\n                key = keys[i];\r\n                if (exclude.hasOwnProperty(key)) {\r\n                    continue;\r\n                }\r\n                target[key] = src[key];\r\n            }\r\n        }\r\n        else {\r\n            let i = -1;\r\n            const len = keys.length;\r\n            while (++i < len) {\r\n                key = keys[i];\r\n                target[key] = src[key];\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function setProperties(target, values, mapping) {\r\n    const keys = Object.keys(values);\r\n    let key;\r\n    let value;\r\n    let i = -1;\r\n    const len = keys.length;\r\n    while (++i < len) {\r\n        key = keys[i];\r\n        value = values[key];\r\n        if (mapping && key in mapping) {\r\n            key = mapping[key];\r\n        }\r\n        if (key in target) {\r\n            target[key] = values[keys[i]];\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Obj.js.map","import { clone, setProperties } from \"./Obj\";\r\nimport { isArray, isNullOrUndefined, isNumber, isUndefined, isNotUndefined } from \"./Test\";\r\nclass ArrayState {\r\n}\r\nexport function flatten(src) {\r\n    return flattenInner(src);\r\n}\r\nfunction flattenInner(src, result = []) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len) {\r\n        if (isArray(src[i])) {\r\n            flattenInner(src[i], result);\r\n        }\r\n        else {\r\n            result.push(src[i]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function reverse(array) {\r\n    let left = null;\r\n    let right = null;\r\n    const length = isNullOrUndefined(array) ? 0 : array.length;\r\n    for (left = 0; left < length / 2; left += 1) {\r\n        right = length - 1 - left;\r\n        const temporary = array[left];\r\n        array[left] = array[right];\r\n        array[right] = temporary;\r\n    }\r\n    return array;\r\n}\r\nexport function concat(...arrs) {\r\n    const result = Array.prototype.concat.apply([], arrs);\r\n    return result;\r\n}\r\nexport function slice(src, from = 0, count = Infinity) {\r\n    let len = Math.min(isNullOrUndefined(src) ? 0 : src.length - from, count);\r\n    if (len < 0) {\r\n        len = 0;\r\n    }\r\n    let i = -1;\r\n    const result = new Array(len);\r\n    while (++i < len) {\r\n        result[i] = src[i + from];\r\n    }\r\n    return result;\r\n}\r\nexport function splice(src, pos = 0, remove = Infinity, insert = []) {\r\n    if (isNullOrUndefined(src)) {\r\n        throw new Error(\"Unable to splice on null or undefined\");\r\n    }\r\n    let srcLen = src.length;\r\n    pos = Math.max(0, pos);\r\n    pos = Math.min(pos, srcLen);\r\n    remove = Math.max(0, remove);\r\n    remove = Math.min(remove, srcLen - pos);\r\n    let insertLen = insert.length;\r\n    let newLen = srcLen - remove + insertLen;\r\n    let delta = remove - insertLen;\r\n    if (delta < 0) {\r\n        src.length = newLen;\r\n        let i = newLen;\r\n        while (--i >= pos + remove) {\r\n            src[i] = src[i + delta];\r\n        }\r\n    }\r\n    let i = pos - 1;\r\n    while (++i < pos + insertLen) {\r\n        src[i] = insert[i - pos];\r\n    }\r\n    if (delta > 0) {\r\n        --i;\r\n        while (++i < srcLen - delta) {\r\n            src[i] = src[i + delta];\r\n        }\r\n        src.length = newLen;\r\n    }\r\n}\r\nexport function append(arr, values) {\r\n    let index = -1;\r\n    const offset = arr.length;\r\n    const length = isNullOrUndefined(values) ? 0 : values.length;\r\n    while (++index < length) {\r\n        arr[offset + index] = values[index];\r\n    }\r\n}\r\nexport function removeAt(arr, index) {\r\n    let result;\r\n    let len = isNullOrUndefined(arr) ? 0 : arr.length;\r\n    if (index >= 0 && index < len) {\r\n        let i = index;\r\n        result = arr[index];\r\n        while (++i < len) {\r\n            arr[i - 1] = arr[i];\r\n        }\r\n        arr.length -= 1;\r\n    }\r\n    return result;\r\n}\r\nexport function indexOfElement(src, el) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len) {\r\n        if (src[i] === el) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nexport function remove(arr, el) {\r\n    const start = indexOfElement(arr, el);\r\n    removeAt(arr, start);\r\n}\r\nexport function indexOf(src, fn) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len) {\r\n        if (fn(src[i])) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nexport function removeOneByFn(arr, fn) {\r\n    const start = indexOf(arr, fn);\r\n    removeAt(arr, start);\r\n}\r\nexport function shallowCopy(src) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    const result = new Array(len);\r\n    while (++i < len) {\r\n        result[i] = src[i];\r\n    }\r\n    return result;\r\n}\r\nexport function shallowCopyInto(src, target) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    target.length = len;\r\n    while (++i < len) {\r\n        target[i] = src[i];\r\n    }\r\n}\r\nexport function shallowFill(src, target, at = 0) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    if (target.length < len + at) {\r\n        target.length = len + at;\r\n    }\r\n    while (++i < len) {\r\n        target[at + i] = src[i];\r\n    }\r\n}\r\nexport function deepCopy(src) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    const result = new Array(len);\r\n    while (++i < len) {\r\n        result[i] = (clone(src[i]));\r\n    }\r\n    return result;\r\n}\r\nexport function deepCopyInto(src, target) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    target.length = len;\r\n    while (++i < len) {\r\n        target[i] = (clone(src[i]));\r\n    }\r\n}\r\nexport function deepFill(src, target, at = 0) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    if (target.length < len + at) {\r\n        target.length = len + at;\r\n    }\r\n    while (++i < len) {\r\n        target[at + i] = (clone(src[i]));\r\n    }\r\n}\r\nexport function filter(src, fn) {\r\n    const result = [];\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len) {\r\n        const el = src[i];\r\n        if (fn(el, i) === true) {\r\n            result.push(el);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function filterInto(src, target, fn) {\r\n    let i = -1;\r\n    let j = 0;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    const space = target.length;\r\n    while (++i < len) {\r\n        const el = src[i];\r\n        if (fn(el, i) === true) {\r\n            if (j < space) {\r\n                target[j++] = el;\r\n            }\r\n            else {\r\n                ++j;\r\n                target.push(el);\r\n            }\r\n        }\r\n    }\r\n    target.length = j;\r\n}\r\nexport function map(src, fn) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    const result = new Array(len);\r\n    while (++i < len) {\r\n        result[i] = fn(src[i], i);\r\n    }\r\n    return result;\r\n}\r\nexport function mapInto(src, target, fn) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    target.length = len;\r\n    while (++i < len) {\r\n        target[i] = fn(src[i], i);\r\n    }\r\n}\r\nexport function reduce(src, fn, start) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    let acc = start;\r\n    while (++i < len) {\r\n        acc = fn(acc, src[i]);\r\n    }\r\n    return acc;\r\n}\r\nexport function reduceUntil(src, fn, test, start) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    let acc = start;\r\n    while (++i < len && !test(acc, src[i])) {\r\n        acc = fn(acc, src[i]);\r\n    }\r\n    return acc;\r\n}\r\nexport function reverseReduce(src, fn, start) {\r\n    let i = isNullOrUndefined(src) ? 0 : src.length;\r\n    let acc = start;\r\n    while (--i >= 0) {\r\n        acc = fn(acc, src[i]);\r\n    }\r\n    return acc;\r\n}\r\nexport function reverseReduceUntil(src, fn, test, start) {\r\n    let i = isNullOrUndefined(src) ? 0 : src.length;\r\n    let acc = start;\r\n    while (--i >= 0 && !test(acc, src[i])) {\r\n        acc = fn(acc, src[i]);\r\n    }\r\n    return acc;\r\n}\r\nexport function forEach(src, fn, startIndex = 0) {\r\n    let i = startIndex - 1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len) {\r\n        fn(src[i], i);\r\n    }\r\n}\r\nexport function forSome(src, filter, fn) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len) {\r\n        const el = src[i];\r\n        if (filter(el, i)) {\r\n            fn(el, i);\r\n        }\r\n    }\r\n}\r\nexport function until(src, fnOrTest, fn, startIndex) {\r\n    let isCombined = isUndefined(fn) || isNumber(fn);\r\n    startIndex = isCombined ? fn : startIndex;\r\n    let i = isUndefined(startIndex) || startIndex < 0 ? -1 : startIndex - 1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len && (isCombined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\r\n    }\r\n}\r\nexport function reverseForEach(src, fn) {\r\n    let i = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (--i >= 0) {\r\n        fn(src[i], i);\r\n    }\r\n}\r\nexport function reverseUntil(src, fnOrTest, fn) {\r\n    let i = isNullOrUndefined(src) ? 0 : src.length;\r\n    let combined = isUndefined(fn);\r\n    while (--i >= 0 && (combined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\r\n    }\r\n}\r\nexport function some(src, fn) {\r\n    let result = false;\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len && !(result = fn(src[i]))) {\r\n    }\r\n    return result;\r\n}\r\nexport function all(src, fn) {\r\n    let result = true;\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len && (result = fn(src[i]))) {\r\n    }\r\n    return result;\r\n}\r\nexport function insertAt(src, pos, v) {\r\n    if (isNullOrUndefined(src)) {\r\n        throw new Error(\"Unable to insertAt on null or undefined\");\r\n    }\r\n    if (pos === 0) {\r\n        src.unshift(v);\r\n    }\r\n    else if (pos > 0) {\r\n        let i = src.length;\r\n        while (--i >= pos) {\r\n            src[i + 1] = src[i];\r\n        }\r\n        src[i + 1] = v;\r\n    }\r\n}\r\nexport function binarySearch(src, cmp, closest = false) {\r\n    let lo = 0, hi = isNullOrUndefined(src) ? -1 : src.length - 1, mid, element;\r\n    while (lo <= hi) {\r\n        mid = ((lo + hi) >> 1);\r\n        element = src[mid];\r\n        let val = cmp(element);\r\n        if (val < 0) {\r\n            lo = mid + 1;\r\n        }\r\n        else if (val > 0) {\r\n            hi = mid - 1;\r\n        }\r\n        else {\r\n            return mid;\r\n        }\r\n    }\r\n    return closest ? lo : -1;\r\n}\r\nexport function create(length, populator) {\r\n    if ((length || -1) < 0) {\r\n        length = 0;\r\n    }\r\n    let arr = new Array(length);\r\n    let i = -1;\r\n    while (++i < length) {\r\n        arr[i] = populator(i, arr);\r\n    }\r\n    return arr;\r\n}\r\nexport function deserialize(array, target, ...types) {\r\n    let [T, ...passthroughT] = types;\r\n    if (isNotUndefined(T)) {\r\n        if (isNotUndefined(T.prototype.deserialize)) {\r\n            mapInto(array, target, (el) => {\r\n                return (new T()).deserialize(el, ...passthroughT);\r\n            });\r\n        }\r\n        else {\r\n            mapInto(array, target, (el) => {\r\n                let newT = new T();\r\n                setProperties(newT, el);\r\n                return newT;\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        deepCopyInto(array, target);\r\n    }\r\n    return this;\r\n}\r\n//# sourceMappingURL=Arr.js.map","import { forEach } from \"../Arr\";\r\nimport { clone, setProperties, wipe } from \"../Obj\";\r\nimport { isFunction, isNotUndefined } from \"../Test\";\r\nimport { List } from \"./List\";\r\nexport class Dictionary {\r\n    constructor() {\r\n        this._lookup = Object.create(null);\r\n        this._list = new List();\r\n        this._isDirty = false;\r\n    }\r\n    create() {\r\n        return new (this.constructor)();\r\n    }\r\n    has(key) {\r\n        return this._lookup[key] !== undefined;\r\n    }\r\n    contains(key) {\r\n        return this.has(key);\r\n    }\r\n    get(key) {\r\n        return this._lookup[key];\r\n    }\r\n    set(key, value) {\r\n        this._isDirty = this._isDirty || this.has(key);\r\n        if (value !== undefined) {\r\n            this._lookup[key] = value;\r\n            if (!this._isDirty) {\r\n                this._list.push(value);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    delete(key) {\r\n        if (this.has(key)) {\r\n            delete this._lookup[key];\r\n            this._isDirty = true;\r\n        }\r\n        return this;\r\n    }\r\n    clear() {\r\n        wipe(this._lookup);\r\n        this._list.clear();\r\n        return this;\r\n    }\r\n    get values() {\r\n        this.cleanList();\r\n        return this._list.values;\r\n    }\r\n    get keys() {\r\n        return Object.keys(this._lookup);\r\n    }\r\n    get list() {\r\n        this.cleanList();\r\n        return this._list;\r\n    }\r\n    get count() {\r\n        let result = 0;\r\n        if (this._isDirty) {\r\n            result = this.keys.length;\r\n        }\r\n        else {\r\n            result = this._list.count;\r\n        }\r\n        return result;\r\n    }\r\n    cleanList() {\r\n        if (this._isDirty) {\r\n            this.reCreateList();\r\n        }\r\n    }\r\n    reCreateList() {\r\n        let lookup = this._lookup;\r\n        let keys = Object.keys(this._lookup);\r\n        let i = -1;\r\n        let list = this._list;\r\n        list.clear();\r\n        while (++i < keys.length) {\r\n            list.add(lookup[keys[i]]);\r\n        }\r\n    }\r\n    clone() {\r\n        let result = this.create();\r\n        result._isDirty = this._isDirty;\r\n        result._list = this._list.clone();\r\n        result._lookup = clone(this._lookup);\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        return this._lookup;\r\n    }\r\n    serialize() {\r\n        let obj = Object.create(null);\r\n        forEach(this.keys, (key) => {\r\n            let v = this.get(key);\r\n            obj[key] = isFunction(v.serialize) ? v.serialize() : v;\r\n        });\r\n        return obj;\r\n    }\r\n    deserialize(obj, ...types) {\r\n        let [T, ...passthroughT] = types;\r\n        this.clear();\r\n        if (isNotUndefined(T)) {\r\n            if (isNotUndefined(T.prototype.deserialize)) {\r\n                for (let key of Object.keys(obj)) {\r\n                    this.set(key, (new T()).deserialize(obj[key], ...passthroughT));\r\n                }\r\n            }\r\n            else {\r\n                for (let key of Object.keys(obj)) {\r\n                    let newT = new T();\r\n                    setProperties(newT, obj[key]);\r\n                    this.set(key, newT);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let key of Object.keys(obj)) {\r\n                this.set(key, obj[key]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=Dictionary.js.map","import * as Arr from \"../Arr\";\r\nimport { clone, equals } from \"../Obj\";\r\nimport { isArray, isFunction, isNotNullOrUndefined } from \"../Test\";\r\nimport { Dictionary } from \"./Dictionary\";\r\nexport class List {\r\n    constructor(arr) {\r\n        this._array = [];\r\n        this._index = null;\r\n        this._indexer = null;\r\n        if (arr === undefined) {\r\n            this._array = new Array();\r\n        }\r\n        else {\r\n            if (arr instanceof (List)) {\r\n                this._array = Arr.shallowCopy(arr._array);\r\n            }\r\n            else {\r\n                this._array = Arr.shallowCopy(arr);\r\n            }\r\n        }\r\n    }\r\n    create(arr) {\r\n        return new (this.constructor)(arr);\r\n    }\r\n    get values() {\r\n        return this._array;\r\n    }\r\n    get(pos) {\r\n        return this._array[pos];\r\n    }\r\n    getByIndex(key) {\r\n        let result;\r\n        return isNotNullOrUndefined(this._index) ? this._index.get(key) : undefined;\r\n    }\r\n    set(pos, v) {\r\n        if (pos >= 0 && pos < this.length) {\r\n            this._array[pos | 0] = v;\r\n            if (this._indexer !== null) {\r\n                this._index.set(this._indexer(v), v);\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(`index out of bounds on <List>.set(${pos}, ${v.toString()})`);\r\n        }\r\n        return this;\r\n    }\r\n    get count() {\r\n        return this._array.length;\r\n    }\r\n    get length() {\r\n        return this._array.length;\r\n    }\r\n    get indexer() {\r\n        return this._indexer;\r\n    }\r\n    set indexer(fn) {\r\n        this._indexer = fn;\r\n        this._reindex();\r\n    }\r\n    _reindex() {\r\n        if (this._indexer === null) {\r\n            this._index = null;\r\n        }\r\n        else {\r\n            if (this._index === null) {\r\n                this._index = new Dictionary();\r\n            }\r\n            else {\r\n                this._index.clear();\r\n            }\r\n            this.forEach((el) => this._index.set(this._indexer(el), el));\r\n        }\r\n    }\r\n    fill(size, populator) {\r\n        size = Math.max(0, size || 0);\r\n        if (isFunction(populator)) {\r\n            this._array = Arr.create(size, populator);\r\n        }\r\n        else if (!(populator instanceof Object)) {\r\n            this._array = Arr.create(size, () => populator);\r\n        }\r\n        else {\r\n            this._array = Arr.create(size, () => clone(populator));\r\n        }\r\n        this._reindex();\r\n        return this;\r\n    }\r\n    clear() {\r\n        this._array.length = 0;\r\n        if (this._index !== null) {\r\n            this._index.clear();\r\n        }\r\n        return this;\r\n    }\r\n    add(v) {\r\n        this._array.push(v);\r\n        if (this._indexer !== null) {\r\n            this._index.set(this._indexer(v), v);\r\n        }\r\n        return this;\r\n    }\r\n    insertAt(pos, v) {\r\n        Arr.insertAt(this._array, pos, v);\r\n        if (this._indexer !== null) {\r\n            this._index.set(this._indexer(v), v);\r\n        }\r\n        return this;\r\n    }\r\n    push(v) {\r\n        if (this._indexer !== null) {\r\n            this._index.set(this._indexer(v), v);\r\n        }\r\n        return this._array.push(v);\r\n    }\r\n    pop() {\r\n        let result = this._array.pop();\r\n        if (result !== undefined && this._indexer !== null) {\r\n            this._index.delete(this._indexer(result));\r\n        }\r\n        return result;\r\n    }\r\n    shift() {\r\n        let result = this._array.shift();\r\n        if (result !== undefined && this._indexer !== null) {\r\n            this._index.delete(this._indexer(result));\r\n        }\r\n        return result;\r\n    }\r\n    concat(v) {\r\n        let arr;\r\n        let arr2 = v instanceof List ? v.values : v;\r\n        arr = Arr.concat(this._array, arr2);\r\n        return this.create(arr);\r\n    }\r\n    index(arr) {\r\n        if (this._indexer !== null) {\r\n            Arr.forEach(arr, (el) => {\r\n                this._index.set(this._indexer(el), el);\r\n            });\r\n        }\r\n    }\r\n    unindexEl(el) {\r\n        if (this._indexer !== null) {\r\n            this._index.delete(this._indexer(el));\r\n        }\r\n    }\r\n    append(v) {\r\n        let arr2 = v instanceof List ? v.values : v;\r\n        Arr.append(this._array, arr2);\r\n        this.index(arr2);\r\n        return this;\r\n    }\r\n    copy(src) {\r\n        let arr2 = src instanceof List ? src.values : src;\r\n        Arr.deepCopyInto(arr2, this._array);\r\n        this.index(arr2);\r\n        return this;\r\n    }\r\n    shallowCopy(src) {\r\n        let arr2 = src instanceof List ? src.values : src;\r\n        Arr.shallowCopyInto(arr2, this._array);\r\n        this.index(arr2);\r\n        return this;\r\n    }\r\n    clone() {\r\n        const arr = Arr.deepCopy(this._array);\r\n        let result = this.create(arr);\r\n        if (this._indexer !== null) {\r\n            result._indexer = this._indexer;\r\n            result._index = this._index.clone();\r\n        }\r\n        return result;\r\n    }\r\n    remove(v) {\r\n        Arr.remove(this._array, v);\r\n        this.unindexEl(v);\r\n        return this;\r\n    }\r\n    removeFirst(fn) {\r\n        let result = this.removeAt(this.indexOf(fn));\r\n        this.unindexEl(result);\r\n        return result;\r\n    }\r\n    removeAt(n) {\r\n        let result = Arr.removeAt(this._array, n);\r\n        this.unindexEl(result);\r\n        return result;\r\n    }\r\n    forEach(fn, startIndex = 0) {\r\n        Arr.forEach(this._array, fn, startIndex);\r\n        return this;\r\n    }\r\n    forSome(filter, fn) {\r\n        Arr.forSome(this._array, filter, fn);\r\n        return this;\r\n    }\r\n    until(fnOrTest, fn, startIndex) {\r\n        Arr.until(this._array, fnOrTest, fn, startIndex);\r\n        return this;\r\n    }\r\n    reverseForEach(fn) {\r\n        Arr.reverseForEach(this._array, fn);\r\n        return this;\r\n    }\r\n    reverseUntil(fnOrTest, fn) {\r\n        Arr.reverseUntil(this._array, fnOrTest, fn);\r\n        return this;\r\n    }\r\n    some(fn) {\r\n        return Arr.some(this._array, fn);\r\n    }\r\n    all(fn) {\r\n        return Arr.all(this._array, fn);\r\n    }\r\n    indexOf(v) {\r\n        let result = -1;\r\n        if (isFunction(v)) {\r\n            result = Arr.indexOf(this._array, v);\r\n        }\r\n        else {\r\n            result = Arr.indexOfElement(this._array, v);\r\n        }\r\n        return result;\r\n    }\r\n    contains(v) {\r\n        let result = false;\r\n        if (isFunction(v)) {\r\n            result = this.find(v) !== undefined;\r\n        }\r\n        else {\r\n            if (this._indexer !== null) {\r\n                result = this._index.contains(this._indexer(v));\r\n            }\r\n            else {\r\n                result = Arr.indexOfElement(this._array, v) !== -1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    reverse() {\r\n        Arr.reverse(this._array);\r\n        return this;\r\n    }\r\n    first(fn) {\r\n        let index = -1;\r\n        let result;\r\n        if (fn === undefined) {\r\n            index = 0;\r\n        }\r\n        else {\r\n            index = Arr.indexOf(this._array, fn);\r\n        }\r\n        return index === -1 ? undefined : this.get(index);\r\n    }\r\n    find(fn) {\r\n        return this.first(fn);\r\n    }\r\n    last() {\r\n        return this.length === 0 ? undefined : this.get(this.length - 1);\r\n    }\r\n    filter(fn) {\r\n        return this.create(Arr.filter(this._array, fn));\r\n    }\r\n    select(fn) {\r\n        return this.create(Arr.filter(this._array, fn));\r\n    }\r\n    selectInto(src, fn) {\r\n        let arr = src instanceof List ? src.values : src;\r\n        Arr.filterInto(arr, this._array, fn);\r\n        this.index(arr);\r\n        return this;\r\n    }\r\n    head(count = 1) {\r\n        count = Math.max(0, count);\r\n        return this.create(Arr.slice(this._array, 0, count));\r\n    }\r\n    tail(count = 1) {\r\n        count = Math.min(this._array.length, count);\r\n        return this.create(Arr.slice(this._array, Math.max(0, this._array.length - count)));\r\n    }\r\n    splice(pos = 0, remove = Infinity, insert = []) {\r\n        Arr.splice(this._array, pos, remove, isArray(insert) ? insert : insert.values);\r\n        this._reindex();\r\n        return this;\r\n    }\r\n    orderBy(fn) {\r\n        this._array.sort(fn);\r\n        return this;\r\n    }\r\n    map(fn) {\r\n        return this.create(Arr.map(this._array, fn));\r\n    }\r\n    mapInto(src, fn) {\r\n        let arr = src instanceof List ? src.values : src;\r\n        Arr.mapInto(arr, this._array, fn);\r\n        this._reindex();\r\n        return this;\r\n    }\r\n    reduce(fn, start) {\r\n        return Arr.reduce(this._array, fn, start);\r\n    }\r\n    reduceUntil(fn, test, start) {\r\n        return Arr.reduceUntil(this._array, fn, test, start);\r\n    }\r\n    reverseReduce(fn, start) {\r\n        return Arr.reverseReduce(this._array, fn, start);\r\n    }\r\n    reverseReduceUntil(fn, test, start) {\r\n        return Arr.reverseReduceUntil(this._array, fn, test, start);\r\n    }\r\n    equals(b) {\r\n        const result = equals(this._array, b.values);\r\n        return result;\r\n    }\r\n    same(b) {\r\n        let a = this;\r\n        let count = 0;\r\n        if (a.length === b.length) {\r\n            if (a.indexer !== null) {\r\n                b.until((el) => !a.contains(el), (el, i) => ++count);\r\n            }\r\n            else {\r\n                a.until((el) => !b.contains(el), (el, i) => ++count);\r\n            }\r\n        }\r\n        return count === a.length;\r\n    }\r\n    intersect(b) {\r\n        let result = this.create();\r\n        let long;\r\n        let short;\r\n        result.indexer = this.indexer;\r\n        if (this.length < b.length) {\r\n            short = this, long = b;\r\n        }\r\n        else {\r\n            long = this, short = b;\r\n        }\r\n        if (long.indexer !== null) {\r\n            short.forEach((el) => {\r\n                if (long.contains(el)) {\r\n                    result.push(el);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            long.forEach((el) => {\r\n                if (short.contains(el)) {\r\n                    result.push(el);\r\n                }\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n    union(b) {\r\n        let result = this.create();\r\n        let long;\r\n        let short;\r\n        result.indexer = this.indexer;\r\n        if (this.length < b.length) {\r\n            short = this, long = b;\r\n        }\r\n        else {\r\n            long = this, short = b;\r\n        }\r\n        if (long.indexer !== null) {\r\n            result = long.clone();\r\n            short.forEach((el) => {\r\n                if (!long.contains(el)) {\r\n                    result.push(el);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            result = short.clone();\r\n            long.forEach((el) => {\r\n                if (!short.contains(el)) {\r\n                    result.push(el);\r\n                }\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n    subtract(b) {\r\n        let result = this.create();\r\n        result.indexer = this.indexer;\r\n        result = this.select((el) => !b.contains(el));\r\n        return result;\r\n    }\r\n    zip(list, fn = (t, u) => [t, u]) {\r\n        let result = this.create();\r\n        let length = list.length;\r\n        this.until(function (el, i) {\r\n            return i >= length;\r\n        }, function (el, i) {\r\n            result.push(fn(el, list.get(i)));\r\n        });\r\n        return result;\r\n    }\r\n    unzip(fn = (el) => [el[0], el[1]]) {\r\n        let result = [this.create(), this.create()];\r\n        this.forEach(function (el) {\r\n            let tuple = fn(el);\r\n            result[0].push(tuple[0]);\r\n            result[1].push(tuple[1]);\r\n        });\r\n        return result;\r\n    }\r\n    flatten(maxDepth = Infinity) {\r\n        return this.create(maxDepth < 1 ? this.values : this._flattenInner(this.values, maxDepth));\r\n    }\r\n    _flattenInner(src, maxDepth, depth = -1, result = []) {\r\n        let i = -1;\r\n        const len = src.length;\r\n        if (++depth > maxDepth) {\r\n            result.push(src);\r\n        }\r\n        else {\r\n            while (++i < len) {\r\n                if (isArray(src[i])) {\r\n                    this._flattenInner(src[i], maxDepth, depth, result);\r\n                }\r\n                else if (src[i] instanceof List) {\r\n                    this._flattenInner(src[i].values, maxDepth, depth, result);\r\n                }\r\n                else {\r\n                    result.push(src[i]);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        return this.values;\r\n    }\r\n    serialize() {\r\n        return this.values.map((el) => isFunction(el.serialize) ? el.serialize() : el);\r\n    }\r\n    deserialize(array, ...types) {\r\n        Arr.deserialize(array, this._array, ...types);\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=List.js.map","import { deepCopy, slice, deserialize } from \"../Arr\";\r\nimport { isFunction } from \"../Test\";\r\nimport { List } from \"./List\";\r\nexport class Stack {\r\n    constructor(size) {\r\n        this.DEFAULT_SIZE = 100;\r\n        this._pos = 0;\r\n        this._limit = 0;\r\n        if (!size) {\r\n            size = this.DEFAULT_SIZE;\r\n        }\r\n        this.DEFAULT_SIZE = size;\r\n        this._array = new Array(size);\r\n        this.push = this.fastPush;\r\n    }\r\n    get values() {\r\n        return slice(this._array, 0, this._pos);\r\n    }\r\n    get depth() {\r\n        return this._pos;\r\n    }\r\n    get size() {\r\n        return this._pos;\r\n    }\r\n    get isEmpty() {\r\n        return this.size === 0;\r\n    }\r\n    get limit() {\r\n        return this._limit;\r\n    }\r\n    set limit(value) {\r\n        if (value < 0) {\r\n            value = 0;\r\n        }\r\n        this._limit = value;\r\n        if (value === 0) {\r\n            this.push = this.fastPush;\r\n        }\r\n        else {\r\n            this.push = this.limitedPush;\r\n            this.limitObjects();\r\n        }\r\n    }\r\n    create(size) {\r\n        return new (this.constructor)(size);\r\n    }\r\n    push(obj) {\r\n    }\r\n    fastPush(obj) {\r\n        this._array[this._pos++] = obj;\r\n    }\r\n    limitedPush(obj) {\r\n        this._array[this._pos] = obj;\r\n        ++this._pos;\r\n        this.limitObjects();\r\n    }\r\n    pop() {\r\n        let result = undefined;\r\n        if (this._pos !== 0) {\r\n            result = this._array[--this._pos];\r\n        }\r\n        return result;\r\n    }\r\n    peek() {\r\n        return this._array[this._pos - 1];\r\n    }\r\n    peekAt(index) {\r\n        return index < 0 || index >= this._pos ? undefined : this._array[this._pos - index - 1];\r\n    }\r\n    toList() {\r\n        const result = new List();\r\n        return new List(this.values);\r\n    }\r\n    clear() {\r\n        this._pos = 0;\r\n        this._array.length = this.DEFAULT_SIZE;\r\n        return this;\r\n    }\r\n    clone() {\r\n        const arr = deepCopy(this._array);\r\n        let result = this.create(this.DEFAULT_SIZE);\r\n        result._array = arr;\r\n        result._limit = this._limit;\r\n        result._pos = this._pos;\r\n        return result;\r\n    }\r\n    limitObjects() {\r\n        while (this._pos > this._limit) {\r\n            this._array.shift();\r\n            --this._pos;\r\n        }\r\n    }\r\n    toJSON() {\r\n        return slice(this.values, 0, this._pos);\r\n    }\r\n    serialize() {\r\n        return slice(this.values, 0, this._pos).map((el) => isFunction(el.serialize) ? el.serialize() : el);\r\n    }\r\n    deserialize(array, ...types) {\r\n        deserialize(array, this._array, ...types);\r\n        this._pos = array.length;\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=Stack.js.map","import { setProperties } from \"../../Obj\";\r\nexport function Initable(constructor) {\r\n    return class extends constructor {\r\n        init(obj, mapping) {\r\n            setProperties(this, obj, mapping);\r\n            return this;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=Initable.js.map","class TimerState {\r\n}\r\nTimerState._hasPerformance = typeof (performance) !== \"undefined\";\r\nexport class Timer {\r\n    static get time() {\r\n        return TimerState._time;\r\n    }\r\n    static now() {\r\n        if (TimerState._hasPerformance) {\r\n            return performance.now();\r\n        }\r\n        else {\r\n            const hrTime = process.hrtime();\r\n            return hrTime[0] * 1000 + (hrTime[1] / 1e6);\r\n        }\r\n    }\r\n    static start() {\r\n        const now = Timer.now();\r\n        TimerState._start = TimerState._last = now;\r\n        return TimerState._time = 0;\r\n    }\r\n    static stop() {\r\n        const start = TimerState._start;\r\n        const now = Timer.now();\r\n        TimerState._last = now;\r\n        return TimerState._time = now - start;\r\n    }\r\n}\r\n//# sourceMappingURL=Timer.js.map","import { Global } from \"./Global\";\r\nimport { hasConsole, hasWindow, isNotUndefined } from \"./Test\";\r\nimport { Timer } from \"./Timer\";\r\nclass UtilState {\r\n}\r\nUtilState._int = 0;\r\nexport function init(win) {\r\n    if (win !== undefined) {\r\n        Global.window = win;\r\n    }\r\n}\r\nexport function getFunctionName(fn) {\r\n    let result;\r\n    if (fn.hasOwnProperty(\"name\") !== undefined) {\r\n        result = fn.name;\r\n    }\r\n    else {\r\n        const fnString = fn.toString();\r\n        result = fnString.substring(9, fnString.indexOf(\"(\"));\r\n    }\r\n    return result;\r\n}\r\nexport function getFunctionCode(fn) {\r\n    let result;\r\n    const fnString = fn.toString();\r\n    result = fnString.substring(fnString.indexOf(\"{\") + 1, fnString.lastIndexOf(\"}\"));\r\n    return result;\r\n}\r\nexport function newUUID() {\r\n    let d = new Date().getTime();\r\n    d += Timer.now();\r\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        const r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n}\r\nexport function newInt() {\r\n    return UtilState._int++;\r\n}\r\nexport function callDebugger() {\r\n    debugger;\r\n}\r\nexport function pipeOut(log, warn, error) {\r\n    if (hasConsole()) {\r\n        proxyFn(console, \"log\", function (superfn, ...args) { superfn(...args); log(...args); });\r\n        proxyFn(console, \"warn\", function (superfn, ...args) { superfn(...args); warn(...args); });\r\n        proxyFn(console, \"error\", function (superfn, ...args) { superfn(...args); error(...args); });\r\n    }\r\n    else {\r\n        const console = {\r\n            log,\r\n            warn,\r\n            error\r\n        };\r\n        if (!(hasWindow())) {\r\n            Global.window = {};\r\n        }\r\n        Global.window.console = console;\r\n    }\r\n}\r\nexport function assert(assertion, message, isDebug = true) {\r\n    let result = true;\r\n    if (!assertion) {\r\n        if (hasConsole) {\r\n            result = false;\r\n            console.error(\"Assertion failed: \" + message);\r\n        }\r\n        if (isDebug) {\r\n            callDebugger();\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function proxyFn(objOrClass, fnName, proxyFn) {\r\n    objOrClass = isNotUndefined(objOrClass.prototype) ? objOrClass.prototype : objOrClass;\r\n    const fn = objOrClass[fnName];\r\n    const _superFn = function (...args) {\r\n        if (args.length !== 0) {\r\n            return fn.apply(this || objOrClass, args);\r\n        }\r\n        else {\r\n            return fn.call(this || objOrClass);\r\n        }\r\n    };\r\n    objOrClass[fnName] = proxyFn.bind(objOrClass, _superFn);\r\n}\r\nexport function loop(count, fn) {\r\n    let i = -1;\r\n    while (++i < count) {\r\n        fn(i);\r\n    }\r\n}\r\nexport function toArray(arr) {\r\n    return Array.prototype.slice.call(arr);\r\n}\r\n//# sourceMappingURL=Util.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { map } from \"../Arr\";\r\nimport { clone, isSameClass, setProperties } from \"../Obj\";\r\nimport { Initable } from \"../standard/mixins/Initable\";\r\nimport { isArray } from \"../Test\";\r\nimport { newUUID } from \"../Util\";\r\nimport { Dictionary } from \"./Dictionary\";\r\nimport { List } from \"./List\";\r\nimport { Stack } from \"./Stack\";\r\nlet Tree = Tree_1 = class Tree {\r\n    constructor() {\r\n        this.id = \"\";\r\n        this.parent = null;\r\n        this.children = null;\r\n        this.data = null;\r\n        this.virtual = false;\r\n        this.id = newUUID();\r\n    }\r\n    static fromObject(obj) {\r\n        const parent = (this instanceof Tree_1) ? this : null;\r\n        const root = new Tree_1().init({ id: obj.id || newUUID(), data: obj.data, parent });\r\n        if (obj.children !== undefined && isArray(obj.children)) {\r\n            root.children = new List(map(obj.children, Tree_1.fromObject.bind(root)));\r\n        }\r\n        return root;\r\n    }\r\n    static fromNodeList(nodes, mapcfg, virtualRoot = false) {\r\n        let result = new Tree_1();\r\n        let mapResolver = (key) => {\r\n            return !mapcfg || typeof (mapcfg[key]) === \"undefined\" ? (el) => el[key] :\r\n                typeof (mapcfg[key]) === \"string\" ? (el) => el[mapcfg[key]] :\r\n                    mapcfg[key];\r\n        };\r\n        let map = {\r\n            id: mapResolver(\"id\"),\r\n            parent: mapResolver(\"parent\"),\r\n            data: mapResolver(\"data\")\r\n        };\r\n        let list = new List(nodes);\r\n        let lookup = new Dictionary();\r\n        list.forEach((el, i) => {\r\n            let node = new Tree_1().init({ id: map.id(el), data: map.data(el) });\r\n            lookup.set(node.id, node);\r\n        });\r\n        let rootNodes = new List();\r\n        list.forEach((el, i) => {\r\n            let parent = map.parent(el);\r\n            if (lookup.contains(parent)) {\r\n                lookup.get(parent).add(lookup.get(map.id(el)));\r\n            }\r\n            else {\r\n                rootNodes.add(lookup.get(map.id(el)));\r\n            }\r\n        });\r\n        if (virtualRoot === false) {\r\n            result = rootNodes.first();\r\n        }\r\n        else {\r\n            result = new Tree_1().init({ id: newUUID(), virtual: true });\r\n            rootNodes.forEach((el) => result.add(el));\r\n        }\r\n        return result;\r\n    }\r\n    create() {\r\n        return new (this.constructor)();\r\n    }\r\n    init(obj) {\r\n        setProperties(this, obj);\r\n        return this;\r\n    }\r\n    insertAt(pos, data) {\r\n        if (this.children === null || this.children.count <= pos) {\r\n            this.add(data);\r\n        }\r\n        else {\r\n            this.children.insertAt(pos, this.create().init({ data, parent: this }));\r\n        }\r\n    }\r\n    add(data) {\r\n        if (this.children === null) {\r\n            this.children = new List();\r\n        }\r\n        if (isSameClass(data, this)) {\r\n            data.parent = this;\r\n            this.children.add(data);\r\n        }\r\n        else {\r\n            this.children.add((this.create()).init({ data: data, parent: this }));\r\n        }\r\n    }\r\n    remove() {\r\n        if (this.parent !== null) {\r\n            this.parent.children.remove(this);\r\n        }\r\n    }\r\n    prune() {\r\n        if (this.children !== null) {\r\n            this.children\r\n                .forEach(function (el, i) {\r\n                el.parent = null;\r\n            })\r\n                .clear();\r\n        }\r\n        this.children = null;\r\n        return this;\r\n    }\r\n    reduce(fn, start) {\r\n        const stack = new Stack();\r\n        let acc = start;\r\n        if (!fn) {\r\n            fn = (acc, cur) => (acc.push({ id: cur.id, parent: cur.parent ? cur.parent.id : null, data: cur.data }), acc);\r\n        }\r\n        if (start === undefined) {\r\n            acc = [];\r\n        }\r\n        let cur;\r\n        let i;\r\n        stack.push(this);\r\n        while (cur = stack.pop()) {\r\n            acc = fn(acc, cur);\r\n            i = (cur.children && cur.children.count) || 0;\r\n            while (i--) {\r\n                stack.push(cur.children.get(i));\r\n            }\r\n        }\r\n        return acc;\r\n    }\r\n    clone() {\r\n        const result = new this.constructor();\r\n        result.id = this.id;\r\n        result.parent = this.parent;\r\n        result.children = this.children === null ? null : this.children.clone();\r\n        result.data = this.data === null || this.data === undefined ? this.data : clone(this.data);\r\n        return result;\r\n    }\r\n    duplicateNode() {\r\n        const result = new this.constructor();\r\n        result.id = this.id;\r\n        result.parent = this.parent;\r\n        result.children = this.children;\r\n        result.data = this.data;\r\n        return result;\r\n    }\r\n    filter(condition) {\r\n        const root = this.duplicateNode();\r\n        const children = this.children;\r\n        if (children !== null) {\r\n            root.children =\r\n                root.children\r\n                    .select(condition)\r\n                    .map(function (el, i) {\r\n                    return el.filter(condition);\r\n                });\r\n        }\r\n        return root;\r\n    }\r\n    select(condition, acc = new List()) {\r\n        const result = acc;\r\n        const children = this.children;\r\n        if (condition === undefined || condition(this)) {\r\n            result.add(this);\r\n        }\r\n        if (children) {\r\n            children.reduce(function (acc, cur) {\r\n                return cur.select(condition, acc);\r\n            }, result);\r\n        }\r\n        return result;\r\n    }\r\n    find(condition) {\r\n        let result = null;\r\n        const children = this.children;\r\n        if (children !== null) {\r\n            let i = -1;\r\n            const len = this.children.count;\r\n            const val = this.children.values;\r\n            while (++i < len) {\r\n                if (condition(val[i].data)) {\r\n                    result = val[i];\r\n                    break;\r\n                }\r\n                else {\r\n                    result = val[i].children !== null ? val[i].find(condition) : null;\r\n                    if (result !== null) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    contains(condition) {\r\n        return this.find(condition) !== null;\r\n    }\r\n    depth() {\r\n        let result = 0;\r\n        let node = this;\r\n        while (node.parent) {\r\n            node = node.parent;\r\n            ++result;\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        let result = new List();\r\n        result.push({ id: this.id, data: this.data, parent: this.parent === null ? null : this.parent.id, children: this.children === null ? null : this.children.map((el) => el.id) });\r\n        if (this.children !== null) {\r\n            this.children.forEach((node) => result.append(node.toJSON()));\r\n        }\r\n        return result.toJSON();\r\n    }\r\n    serialize() {\r\n        let result = new List();\r\n        result.push({ id: this.id, data: this.data, parent: this.parent === null ? null : this.parent.id, children: this.children === null ? null : this.children.map((el) => el.id) });\r\n        if (this.children !== null) {\r\n            this.children.forEach((node) => result.append(node.serialize()));\r\n        }\r\n        return result.serialize();\r\n    }\r\n};\r\nTree = Tree_1 = __decorate([\r\n    Initable,\r\n    __metadata(\"design:paramtypes\", [])\r\n], Tree);\r\nexport { Tree };\r\nvar Tree_1;\r\n//# sourceMappingURL=Tree.js.map","import { Global } from \"./Global\";\r\nexport var Sides;\r\n(function (Sides) {\r\n    Sides[Sides[\"Top\"] = 0] = \"Top\";\r\n    Sides[Sides[\"Bottom\"] = 1] = \"Bottom\";\r\n    Sides[Sides[\"Left\"] = 2] = \"Left\";\r\n    Sides[Sides[\"Right\"] = 3] = \"Right\";\r\n})(Sides || (Sides = {}));\r\nclass DomState {\r\n}\r\nDomState.Sides = Sides;\r\nDomState._window = Global.window;\r\nDomState._document = Global.window ? Global.window.document : undefined;\r\nDomState._el = Global.window ? Global.window.document.createElement(\"div\") : undefined;\r\nexport function init(win) {\r\n    Global.window = win;\r\n    DomState._window = Global.window;\r\n    DomState._document = DomState._window.document;\r\n    DomState._el = DomState._document.createElement(\"div\");\r\n}\r\nexport function toArray(a) {\r\n    return Array.prototype.slice.call(a);\r\n}\r\nexport function create(html, attr) {\r\n    let result, keys, i, k, styles, styleKeys;\r\n    DomState._el.innerHTML = html;\r\n    result = DomState._el.children[0];\r\n    setAttr(result, attr);\r\n    clear(DomState._el);\r\n    return result;\r\n}\r\nexport function outerHTML(el) {\r\n    DomState._el.appendChild(el);\r\n    const result = DomState._el.innerHTML;\r\n    clear(DomState._el);\r\n    return result;\r\n}\r\nexport function setAttr(_el, attr) {\r\n    let el;\r\n    if (typeof (_el) === \"string\") {\r\n        el = get(_el);\r\n    }\r\n    else {\r\n        el = _el;\r\n    }\r\n    let keys, i, k, styles, styleKeys, style;\r\n    if (attr !== undefined && typeof (attr) === \"object\") {\r\n        keys = Object.keys(attr);\r\n        for (i = 0; i < keys.length; i++) {\r\n            if (keys[i] === \"style\") {\r\n                styles = attr[keys[i]];\r\n                styleKeys = Object.keys(styles);\r\n                for (k = 0; k < styleKeys.length; k++) {\r\n                    style = styles[styleKeys[k]];\r\n                    if (typeof (style) === \"string\") {\r\n                        el.style.setProperty(styleKeys[k], style);\r\n                    }\r\n                    else {\r\n                        el.style.setProperty(styleKeys[k], style[0], style[1]);\r\n                    }\r\n                }\r\n            }\r\n            else if (keys[i] === \"classes\" && attr[keys[i]] !== undefined && attr[keys[i]].join) {\r\n                el.setAttribute(\"className\", attr[keys[i]].join(\" \"));\r\n            }\r\n            else {\r\n                el.setAttribute(keys[i], attr[keys[i]]);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function remove(element) {\r\n    return element.parentNode === undefined ? null : element.parentNode.removeChild(element);\r\n}\r\nexport function replace(src, target) {\r\n    let result = target;\r\n    if (src.parentNode) {\r\n        src.parentNode.replaceChild(target, src);\r\n    }\r\n    return result;\r\n}\r\nexport function clear(element) {\r\n    let i = element.children.length;\r\n    while (i--) {\r\n        element.removeChild(element.children[i]);\r\n    }\r\n}\r\nexport function get(id) {\r\n    let result = DomState._document.getElementById(id);\r\n    if (result === null) {\r\n        switch (id) {\r\n            default:\r\n                result = DomState._document.body;\r\n                break;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function find(selector) {\r\n    return DomState._document.querySelector(selector);\r\n}\r\nexport function findAll(selector, root) {\r\n    return toArray((root || DomState._document).querySelectorAll(selector));\r\n}\r\nexport function children(root, selector) {\r\n    const children = toArray((root || DomState._document).children);\r\n    return selector === undefined ? children : children.filter(is.bind(this, selector));\r\n}\r\nexport function findParent(root, selector) {\r\n    let result = root.parentElement;\r\n    while (result) {\r\n        if (is(selector, result)) {\r\n            break;\r\n        }\r\n        result = result.parentElement;\r\n    }\r\n    return result;\r\n}\r\nexport function position(el, x, y) {\r\n    el.style.top = y + \"px\";\r\n    el.style.left = x + \"px\";\r\n}\r\nexport function is(selector, element) {\r\n    let result = false;\r\n    if (element.matches) {\r\n        result = element.matches(selector);\r\n    }\r\n    else if (element.msMatchesSelector) {\r\n        result = element.msMatchesSelector(selector);\r\n    }\r\n    else if (element.webkitMatchesSelector) {\r\n        result = element.webkitMatchesSelector(selector);\r\n    }\r\n    else {\r\n        if (element.parentElement === null) {\r\n            throw new Error(\"Element has no parent\");\r\n        }\r\n        if (element.id !== \"\") {\r\n            result = element.parentElement.querySelector(\"#\" + element.id) !== null;\r\n        }\r\n        else {\r\n            result = toArray(element.parentElement.querySelectorAll(selector)).indexOf(element) !== -1;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function setStylesExplicitly(element, ...styles) {\r\n    const comp = DomState._window.getComputedStyle(element);\r\n    for (const style of styles) {\r\n        element.style[style] = comp[style];\r\n    }\r\n}\r\n//# sourceMappingURL=Dom.js.map","export var MocDataType;\r\n(function (MocDataType) {\r\n    MocDataType[MocDataType[\"LinearInt\"] = 0] = \"LinearInt\";\r\n    MocDataType[MocDataType[\"RandomInt\"] = 1] = \"RandomInt\";\r\n    MocDataType[MocDataType[\"LinearFloat\"] = 2] = \"LinearFloat\";\r\n    MocDataType[MocDataType[\"RandomFloat\"] = 3] = \"RandomFloat\";\r\n})(MocDataType || (MocDataType = {}));\r\nexport const VALID_CHARS = \" ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\nexport function randomString(length = 25) {\r\n    let result = \"\";\r\n    for (let i = 0; i < length; i += 1) {\r\n        result += VALID_CHARS.charAt(Math.floor(Math.random() * VALID_CHARS.length));\r\n    }\r\n    return result;\r\n}\r\nexport function randomInt() {\r\n    return this.randomNumber() | 0;\r\n}\r\nexport function randomNumber() {\r\n    return Math.random() * 2147483647;\r\n}\r\nexport function numericArray(length, type = MocDataType.LinearInt) {\r\n    const result = new Array(length);\r\n    switch (type) {\r\n        case MocDataType.RandomInt:\r\n            for (let i = 0; i < length; i += 1) {\r\n                result[i] = this.randomInt();\r\n            }\r\n            break;\r\n        case MocDataType.LinearFloat:\r\n            for (let i = 0; i < length; i += 1) {\r\n                result[i] = i + 0.5;\r\n            }\r\n            break;\r\n        case MocDataType.RandomFloat:\r\n            for (let i = 0; i < length; i += 1) {\r\n                result[i] = this.randomNumber();\r\n            }\r\n            break;\r\n        default:\r\n            for (let i = 0; i < length; i += 1) {\r\n                result[i] = i;\r\n            }\r\n            break;\r\n    }\r\n    return result;\r\n}\r\nexport function stringArray(arrayLength, stringLength) {\r\n    const result = new Array(arrayLength);\r\n    let i = -1;\r\n    while (++i < arrayLength) {\r\n        result[i] = this.randomString(stringLength);\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=MocData.js.map","import { Arr, Dictionary, Dom, Vec2, Timer } from \"goodcore\";\nvar GoodTap = (function () {\n    function GoodTap(rootElement) {\n        this.minSwipeDistance = 100;\n        this.events = [\"down\", \"up\", \"press\", \"tap\", \"swipe\"];\n        this.downEvents = [\"down\"];\n        this.upEvents = [\"up\", \"tap\", \"swipe\"];\n        this.longPressIntervals = new Dictionary();\n        this.eventAttr = \"\";\n        this.upEventsAndPress = [];\n        this.index = 0;\n        this.init(rootElement || document.body);\n        this.eventAttr = this.events.map(function (name) { return \"[\" + name + \"]\"; }).join(\",\");\n        this.upEventsAndPress = this.upEvents.concat([\"press\"]);\n    }\n    GoodTap.prototype.init = function (rootElement) {\n        var _this = this;\n        if (GoodTap.hasTouchEvent()) {\n            rootElement.addEventListener(\"touchInfo\", function (ev) { _this.begin(ev); });\n            rootElement.addEventListener(\"touchend\", function (ev) { _this.end(ev); });\n        }\n        rootElement.addEventListener(\"mousedown\", function (ev) { _this.begin(ev); });\n        rootElement.addEventListener(\"mouseup\", function (ev) { _this.end(ev); });\n    };\n    GoodTap.prototype.findTarget = function (el) {\n        var target = null;\n        while (el && el.parentElement !== document && target === null) {\n            if (Dom.is(this.eventAttr, el)) {\n                target = el;\n            }\n            el = el.parentElement;\n        }\n        return target;\n    };\n    GoodTap.prototype.getTouchPos = function (ev) {\n        var pos = new Vec2(0, 0);\n        if (ev instanceof TouchEvent) {\n            pos = new Vec2(ev.changedTouches[0].pageX, ev.changedTouches[0].pageY);\n        }\n        else if (ev instanceof MouseEvent) {\n            pos = new Vec2(ev.pageX, ev.pageY);\n        }\n        return pos;\n    };\n    GoodTap.prototype.longPress = function (ev, target) {\n        var result = true;\n        var touchInfo = target.touchInfo;\n        result = this.executeAction(ev, target, \"press\", touchInfo);\n        if (result === false || target.hasAttribute(\"once\")) {\n            clearInterval(this.longPressIntervals.get(touchInfo.index));\n            this.longPressIntervals.delete(touchInfo.index);\n        }\n    };\n    GoodTap.prototype.begin = function (ev) {\n        var _this = this;\n        this.longPressIntervals.list.forEach(function (long) { return clearInterval(long); });\n        this.longPressIntervals.clear();\n        var stopPropagation = false;\n        var target = ev.target;\n        var loopCounter = 0;\n        while (loopCounter < 100 && (target = this.findTarget(target)) && !stopPropagation) {\n            ++loopCounter;\n            var pressInterval = null;\n            if (target.hasAttribute(\"press\")) {\n                pressInterval = setInterval((function (target) { return _this.longPress(ev, target); }).bind(this, target), parseInt(target.getAttribute(\"pressInterval\")) || 500);\n            }\n            target.classList.add(\"gt-active\");\n            target.touchInfo = {\n                index: this.index++,\n                time: Timer.now(),\n                pos: this.getTouchPos(ev),\n                long: pressInterval\n            };\n            if (pressInterval) {\n                this.longPressIntervals.set(target.touchInfo.index, target.touchInfo.long);\n            }\n            Arr.until(this.downEvents, function (name) {\n                if (target.hasAttribute(name)) {\n                    stopPropagation = (_this.handleEvent(name, ev, target) === false);\n                    if (!stopPropagation && target.hasAttribute(\"stopPropagation\") && target.hasAttribute(\"gt-false\")) {\n                        stopPropagation = true;\n                        ev.stopPropagation();\n                    }\n                    if (target.hasAttribute(\"preventDefault\") && target.hasAttribute(\"gt-false\")) {\n                        ev.preventDefault();\n                    }\n                }\n                return stopPropagation;\n            });\n            target = target.parentElement;\n        }\n    };\n    GoodTap.prototype.isSwipe = function (ev, target) {\n        var pos = this.getTouchPos(ev);\n        var result = false;\n        if (\"touchInfo\" in target) {\n            var dX = pos.x - target.touchInfo.pos.x;\n            var dY = pos.y - target.touchInfo.pos.y;\n            var absDX = Math.abs(dX);\n            var absDY = Math.abs(dY);\n            var horizontal = absDX > absDY;\n            var distance = horizontal ? absDX : absDY;\n            result = distance >= this.minSwipeDistance;\n            if (result) {\n                target.touchInfo.swipeInfo = {\n                    direction: horizontal ?\n                        (dX < 0 ? \"left\" : \"right\") :\n                        (dY < 0 ? \"up\" : \"down\"),\n                    distance: distance,\n                    delta: new Vec2(dX, dY)\n                };\n            }\n        }\n        return result;\n    };\n    GoodTap.prototype.end = function (ev) {\n        var _this = this;\n        var time = Timer.now();\n        var stopPropagation = false;\n        var target = ev.target;\n        var loopCounter = 0;\n        while (loopCounter < 100 && (target = this.findTarget(target)) && !stopPropagation) {\n            ++loopCounter;\n            var touchInfo = target.touchInfo;\n            var endedOutsideOrMultiTouch = touchInfo === undefined;\n            if (endedOutsideOrMultiTouch && this.longPressIntervals.has(touchInfo.index)) {\n                target.classList.remove(\"gt-active\");\n                clearInterval(this.longPressIntervals.get(touchInfo.index));\n                delete target.touchInfo;\n            }\n            else {\n                Arr.until(this.upEventsAndPress, function (name) {\n                    if (target.hasAttribute(name)) {\n                        var isSwipe = _this.isSwipe(ev, target);\n                        if (name === \"swipe\" && isSwipe\n                            || name === \"tap\" && !isSwipe\n                            || name === \"up\") {\n                            stopPropagation = (_this.handleEvent(name, ev, target) === false);\n                        }\n                        if (stopPropagation || target.hasAttribute(\"stopPropagation\") && target.hasAttribute(\"gt-false\")) {\n                            stopPropagation = true;\n                            ev.stopPropagation();\n                            delete target.touchInfo;\n                        }\n                        if (target.hasAttribute(\"preventDefault\") && target.hasAttribute(\"gt-false\")) {\n                            ev.preventDefault();\n                        }\n                    }\n                    return stopPropagation;\n                });\n            }\n            target = target.parentElement;\n        }\n        Dom.findAll(\".gt-active\").forEach(function (el) {\n            el.classList.remove(\"gt-active\");\n            delete el.touchInfo;\n        });\n        this.longPressIntervals.list.forEach(function (long) { return clearInterval(long); });\n        this.longPressIntervals.clear();\n    };\n    GoodTap.prototype.executeAction = function (ev, target, actionAttr, touchInfo) {\n        var result = true;\n        var action = target.getAttribute(actionAttr);\n        try {\n            if (action === \"[fn]\" && (actionAttr + \"-fn\") in target) {\n                result = target[actionAttr + \"-fn\"](ev, target, touchInfo);\n            }\n            else {\n                result = (new Function(\"event\", \"target\", \"touch\", action)).bind(target)(ev, target, touchInfo);\n            }\n        }\n        catch (err) {\n            throw name + \" event function error on element '\" + target.id + \"'\\n\" + err.toString();\n        }\n        return result;\n    };\n    GoodTap.prototype.handleEvent = function (name, ev, target) {\n        var actionAttr = name;\n        var result = true;\n        if (target) {\n            result = this.executeAction(ev, target, actionAttr, target.touchInfo);\n            if (name in this.upEvents) {\n                target.classList.remove(\"gt-active\");\n                if (this.longPressIntervals.has(target.touchInfo.index)) {\n                    clearInterval(this.longPressIntervals.get(target.touchInfo.index));\n                }\n                delete target.touchInfo;\n            }\n        }\n        return result;\n    };\n    GoodTap.prototype.on = function (element, name, fn) {\n        element.setAttribute(name, \"[fn]\");\n        element[name + \"-fn\"] = fn;\n    };\n    GoodTap.prototype.off = function (element, name) {\n        element.removeAttribute(name + \"-action\");\n        delete element[name + \"-fn\"];\n    };\n    GoodTap.hideKeyboard = function () {\n        var field = document.createElement(\"input\");\n        field.setAttribute(\"type\", \"text\");\n        document.body.appendChild(field);\n        setTimeout(function () {\n            field.focus();\n            setTimeout(function () {\n                field.setAttribute(\"style\", \"display:none;\");\n                field.parentElement.removeChild(field);\n            }, 50);\n        }, 50);\n    };\n    GoodTap.hasTouchEvent = function () {\n        return \"ontouchInfo\" in document.documentElement;\n    };\n    return GoodTap;\n}());\nexport { GoodTap };\nexport function init(root) {\n    return new GoodTap(root);\n}\n//# sourceMappingURL=index.js.map"],"names":["CalcConst","rotationRad","rotation","deg","DEGREE_FACTOR","ROTATION_DEGREE_PRECISION","this","rotationDeg","RADIAN_FACTOR","Math","PI","DEG360","ROTATION_LOOKUP","lookup","i","push","cos","sin","Vec2Const","EPSILON","IDENTITY","x","y","X_DIM","Y_DIM","Vec2","[object Object]","angle","horizontalAngle","direction","isZero","src","out","set","create","ceil","sqrt","lengthSq","atan2","rot","nx","ny","center","subtract","rotate","add","len","length","vectorB","scalar","target","abs","isNormalized","result","clone","normalize","temp","coeff","v","max","min","nativeWindow","win","window","_Global","_window","_nativeWindow","hasNativeWindow","Global","isArray","it","Array","Object","prototype","toString","call","isFunction","isNumber","areNullOrUndefined","args","a","undefined","areNotNullOrUndefined","isNullOrUndefined","arg","isNotNullOrUndefined","isUndefined","isNotUndefined","wipe","obj","keys","isSameClass","b","constructor","equals","key","deepCopy","Date","getTime","RegExp","setProperties","values","mapping","value","reverse","array","left","right","temporary","concat","arrs","apply","slice","from","count","Infinity","splice","pos","remove","insert","Error","srcLen","insertLen","newLen","delta","append","arr","index","offset","removeAt","indexOfElement","el","indexOf","fn","shallowCopy","shallowCopyInto","deepCopyInto","filter","filterInto","j","space","map","mapInto","reduce","start","acc","reduceUntil","test","reverseReduce","reverseReduceUntil","forEach","startIndex","forSome","until","fnOrTest","isCombined","reverseForEach","reverseUntil","combined","some","all","insertAt","unshift","populator","deserialize","types","T","passthroughT","newT","Dictionary","_lookup","_list","List","_isDirty","has","clear","cleanList","list","reCreateList","get","serialize","_array","_index","_indexer","Arr.shallowCopy","indexer","_reindex","size","Arr.create","Arr.insertAt","pop","delete","shift","arr2","Arr.concat","Arr.forEach","Arr.append","Arr.deepCopyInto","Arr.shallowCopyInto","Arr.deepCopy","Arr.remove","unindexEl","n","Arr.removeAt","Arr.forSome","Arr.until","Arr.reverseForEach","Arr.reverseUntil","Arr.some","Arr.all","Arr.indexOf","Arr.indexOfElement","find","contains","Arr.reverse","first","Arr.filter","Arr.filterInto","Arr.slice","Arr.splice","sort","Arr.map","Arr.mapInto","Arr.reduce","Arr.reduceUntil","Arr.reverseReduce","Arr.reverseReduceUntil","long","short","select","t","u","tuple","maxDepth","_flattenInner","depth","Arr.deserialize","Stack","DEFAULT_SIZE","_pos","_limit","fastPush","isEmpty","limit","limitedPush","limitObjects","Initable","TimerState","_hasPerformance","Timer","time","_time","performance","now","hrTime","process","hrtime","_start","_last","newUUID","d","replace","c","r","random","floor","__decorate","decorators","desc","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","k","metadata","Tree","Tree_1","id","parent","children","data","virtual","root","init","fromObject","bind","nodes","mapcfg","virtualRoot","mapResolver","node","rootNodes","stack","cur","condition","duplicateNode","val","toJSON","Sides","MocDataType","DomState","toArray","findAll","selector","_document","querySelectorAll","is","element","matches","msMatchesSelector","webkitMatchesSelector","parentElement","querySelector","document","_el","createElement","GoodTap","rootElement","minSwipeDistance","events","downEvents","upEvents","longPressIntervals","eventAttr","upEventsAndPress","body","name","join","_this","hasTouchEvent","addEventListener","ev","begin","end","findTarget","Dom.is","getTouchPos","TouchEvent","changedTouches","pageX","pageY","MouseEvent","longPress","touchInfo","executeAction","hasAttribute","clearInterval","stopPropagation","loopCounter","pressInterval","setInterval","parseInt","getAttribute","classList","handleEvent","preventDefault","isSwipe","dX","dY","absDX","absDY","horizontal","distance","swipeInfo","Dom.findAll","actionAttr","action","Function","err","on","setAttribute","off","removeAttribute","hideKeyboard","field","appendChild","setTimeout","focus","removeChild","documentElement"],"mappings":"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"}