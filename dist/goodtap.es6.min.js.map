{"version":3,"file":"goodtap.es6.min.js","sources":["../node_modules/goodcore/Global.js","../node_modules/goodcore/Test.js","../node_modules/goodcore/Obj.js","../node_modules/goodcore/Arr.js","../node_modules/goodcore/Timer.js","../node_modules/goodcore/Util.js","../node_modules/goodcore/Dom.js","../node_modules/goodcore/Calc.js","../node_modules/goodcore/struct/Vec2.js","../node_modules/goodcore/struct/Dictionary.js","../node_modules/goodcore/struct/List.js","../node_modules/goodcore/struct/SortedList.js","../node_modules/goodcore/struct/Stack.js","../node_modules/goodcore/standard/mixins/Initable.js","../node_modules/goodcore/struct/Tree.js","../node_modules/goodcore/MocData.js","lib/index.js"],"sourcesContent":["let nativeWindow = true;\nvar win;\nif (typeof (window) === \"undefined\") {\n    win = null;\n    nativeWindow = false;\n}\nelse {\n    win = window;\n}\nexport class _Global {\n    constructor() {\n        this._window = win;\n        this._nativeWindow = nativeWindow;\n    }\n    get window() {\n        return this._window;\n    }\n    set window(v) {\n        this._window = v;\n        if (this.hasNativeWindow) {\n            win = v;\n        }\n    }\n    get hasNativeWindow() {\n        return this._nativeWindow;\n    }\n}\nexport let Global = new _Global();\n//# sourceMappingURL=Global.js.map","import { Global } from \"./Global\";\nexport function hasWindow() {\n    return Global.window !== null;\n}\nexport function hasConsole() {\n    return this.hasWindow() && Global.window.console !== undefined || typeof (console) === \"function\";\n}\nexport function isArray(it) {\n    return Array.isArray ? Array.isArray(it) : Object.prototype.toString.call(it) === \"[object Array]\";\n}\nexport function isElement(target) {\n    return target !== undefined && target !== null && target.nodeType === 1 ? true : false;\n}\nexport function isFunction(it) {\n    return Object.prototype.toString.call(it) === \"[object Function]\";\n}\nexport function isNumber(x) {\n    return x === +x;\n}\nexport function isInt(x) {\n    return isNumber(x) && (x === (x | 0));\n}\nexport function isString(x) {\n    return isNotNullOrUndefined(x) && x.constructor === String;\n}\nexport function areNullOrUndefined(...args) {\n    const len = args.length;\n    let i = -1;\n    let a;\n    let result = false;\n    while (!result && ++i < len) {\n        a = args[i];\n        result = a === undefined || a === null;\n    }\n    return result;\n}\nexport function areNotNullOrUndefined(...args) {\n    return !areNullOrUndefined(...args);\n}\nexport function isNullOrUndefined(arg) {\n    return arg === undefined || arg === null;\n}\nexport function isNotNullOrUndefined(arg) {\n    return !isNullOrUndefined(arg);\n}\nexport function areUndefined(...args) {\n    const len = args.length;\n    let i = -1;\n    let a;\n    let result = false;\n    while (!result && ++i < len) {\n        a = args[i];\n        result = a === undefined;\n    }\n    return result;\n}\nexport function areNotUndefined(...args) {\n    return !areUndefined(...args);\n}\nexport function isUndefined(arg) {\n    return arg === undefined;\n}\nexport function isNotUndefined(arg) {\n    return !isUndefined(arg);\n}\n//# sourceMappingURL=Test.js.map","import { deepCopy, flatten } from \"./Arr\";\nimport { areNotNullOrUndefined, isArray, isFunction } from \"./Test\";\nexport function destroy(obj) {\n    if (obj.constructor.prototype.destroy !== undefined) {\n        obj.destroy();\n    }\n    else {\n        setNull(obj);\n    }\n}\nexport function wipe(obj) {\n    const keys = Object.keys(obj);\n    let i = -1;\n    const len = keys.length;\n    while (++i < len) {\n        delete obj[keys[i]];\n    }\n}\nexport function setNull(obj) {\n    if (obj.constructor.prototype.clear !== undefined) {\n        obj.clear();\n    }\n    else {\n        const keys = Object.keys(obj);\n        let key = null;\n        let i = -1;\n        const len = keys.length;\n        while (++i < len) {\n            key = keys[i];\n            obj[key] = null;\n        }\n    }\n}\nexport function isClassOf(a, b) {\n    return areNotNullOrUndefined(a, b) && a instanceof b.constructor;\n}\nexport function isSameClass(a, b) {\n    return areNotNullOrUndefined(a, b) && a.constructor === b.constructor;\n}\nexport function inherits(a, b) {\n    return isClassOf(a, b) && !isSameClass(a, b);\n}\nexport function equals(a, b) {\n    let result = a === b;\n    if (a !== b && (a instanceof Object) && isSameClass(a, b)) {\n        if (isArray(a)) {\n            const len = a.length;\n            let i = 0;\n            result = len === b.length;\n            if (result) {\n                for (; i < len; i += 1) {\n                    result = equals(a[i], b[i]);\n                    if (result === false) {\n                        break;\n                    }\n                }\n            }\n        }\n        else if (a.constructor.prototype.equals) {\n            result = a.equals(b);\n        }\n        else {\n            const keys = Object.keys(a);\n            let key = null;\n            result = true;\n            let i = -1;\n            const len = keys.length;\n            while (++i < len) {\n                key = keys[i];\n                result = equals(a[key], b[key]);\n                if (!result) {\n                    if (isFunction(a[key])) {\n                        result = true;\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return result;\n}\nexport function isDifferent(a, b) {\n    return !equals(a, b);\n}\nexport function shallowCopy(obj) {\n    const keys = Object.keys(obj);\n    const result = {};\n    let i = -1;\n    const len = keys.length;\n    while (++i < len) {\n        const key = keys[i];\n        result[key] = obj[key];\n    }\n    return result;\n}\nexport function clone(obj) {\n    let result;\n    if (!(obj instanceof Object)) {\n        result = obj;\n    }\n    else if (obj.constructor.prototype.clone !== undefined) {\n        result = obj.clone();\n    }\n    else if (isArray(obj)) {\n        result = deepCopy(obj);\n    }\n    else if (obj instanceof Date) {\n        return new Date(obj.getTime());\n    }\n    else if (obj instanceof RegExp) {\n        return new RegExp(obj);\n    }\n    else {\n        result = new obj.constructor();\n        const keys = Object.keys(obj);\n        let key = null;\n        let i = -1;\n        const len = keys.length;\n        while (++i < len) {\n            key = keys[i];\n            result[key] = clone(obj[key]);\n        }\n    }\n    return result;\n}\nexport function cloneInto(src, target) {\n    if (isArray(target)) {\n        const arrS = src;\n        const arrT = target;\n        const len = arrS.length;\n        arrT.length = len;\n        let i = -1;\n        while (++i < len) {\n            if (arrS[i] instanceof Object) {\n                cloneInto(arrS[i], arrT[i]);\n            }\n            else {\n                arrT[i] = arrS[i];\n            }\n        }\n    }\n    else {\n        const keys = Object.keys(src);\n        let key = null;\n        let i = -1;\n        const len = keys.length;\n        while (++i < len) {\n            key = keys[i];\n            const a = src[key];\n            if (a instanceof Object) {\n                let b = target[key];\n                if (b === undefined || b === null) {\n                    if (isArray(a)) {\n                        b = target[key] = [];\n                    }\n                    else {\n                        b = target[key] = {};\n                    }\n                }\n                if (isDifferent(a, b)) {\n                    cloneInto(a, b);\n                }\n            }\n            else {\n                target[key] = a;\n            }\n        }\n    }\n    return target;\n}\nexport function mixin(target = {}, exclude, ...sources) {\n    const result = target, len = sources ? sources.length : 0;\n    let i = 0;\n    sources = flatten(sources);\n    for (; i < len; i++) {\n        let src = sources[i];\n        if (isFunction(src)) {\n            src = src.prototype;\n        }\n        if (src === undefined) {\n            continue;\n        }\n        const keys = Object.keys(src);\n        let key = null;\n        if (exclude) {\n            let i = -1;\n            const len = keys.length;\n            while (++i < len) {\n                key = keys[i];\n                if (exclude.hasOwnProperty(key)) {\n                    continue;\n                }\n                target[key] = src[key];\n            }\n        }\n        else {\n            let i = -1;\n            const len = keys.length;\n            while (++i < len) {\n                key = keys[i];\n                target[key] = src[key];\n            }\n        }\n    }\n    return result;\n}\nexport function setProperties(target, values, mapping) {\n    const keys = Object.keys(values);\n    let key;\n    let value;\n    let i = -1;\n    const len = keys.length;\n    while (++i < len) {\n        key = keys[i];\n        value = values[key];\n        if (mapping && key in mapping) {\n            key = mapping[key];\n        }\n        if (key in target) {\n            target[key] = values[keys[i]];\n        }\n    }\n}\n//# sourceMappingURL=Obj.js.map","import { clone, setProperties } from \"./Obj\";\nimport { isArray, isNullOrUndefined, isNumber, isUndefined, isNotUndefined } from \"./Test\";\nclass ArrayState {\n}\nexport function flatten(src) {\n    return flattenInner(src);\n}\nfunction flattenInner(src, result = []) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        if (isArray(src[i])) {\n            flattenInner(src[i], result);\n        }\n        else {\n            result.push(src[i]);\n        }\n    }\n    return result;\n}\nexport function reverse(array) {\n    let left = null;\n    let right = null;\n    const length = isNullOrUndefined(array) ? 0 : array.length;\n    for (left = 0; left < length / 2; left += 1) {\n        right = length - 1 - left;\n        const temporary = array[left];\n        array[left] = array[right];\n        array[right] = temporary;\n    }\n    return array;\n}\nexport function concat(...arrs) {\n    const result = Array.prototype.concat.apply([], arrs);\n    return result;\n}\nexport function slice(src, from = 0, count = Infinity) {\n    let len = Math.min(isNullOrUndefined(src) ? 0 : src.length - from, count);\n    if (len < 0) {\n        len = 0;\n    }\n    let i = -1;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = src[i + from];\n    }\n    return result;\n}\nexport function splice(src, pos = 0, remove = Infinity, insert = []) {\n    if (isNullOrUndefined(src)) {\n        throw new Error(\"Unable to splice on null or undefined\");\n    }\n    let srcLen = src.length;\n    pos = Math.max(0, pos);\n    pos = Math.min(pos, srcLen);\n    remove = Math.max(0, remove);\n    remove = Math.min(remove, srcLen - pos);\n    let insertLen = insert.length;\n    let newLen = srcLen - remove + insertLen;\n    let delta = remove - insertLen;\n    if (delta < 0) {\n        src.length = newLen;\n        let i = newLen;\n        while (--i >= pos + remove) {\n            src[i] = src[i + delta];\n        }\n    }\n    let i = pos - 1;\n    while (++i < pos + insertLen) {\n        src[i] = insert[i - pos];\n    }\n    if (delta > 0) {\n        --i;\n        while (++i < srcLen - delta) {\n            src[i] = src[i + delta];\n        }\n        src.length = newLen;\n    }\n}\nexport function append(arr, values) {\n    let index = -1;\n    const offset = arr.length;\n    const length = isNullOrUndefined(values) ? 0 : values.length;\n    while (++index < length) {\n        arr[offset + index] = values[index];\n    }\n}\nexport function removeAt(arr, index) {\n    let result;\n    let len = isNullOrUndefined(arr) ? 0 : arr.length;\n    if (index >= 0 && index < len) {\n        let i = index;\n        result = arr[index];\n        while (++i < len) {\n            arr[i - 1] = arr[i];\n        }\n        arr.length -= 1;\n    }\n    return result;\n}\nexport function indexOfElement(src, el) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        if (src[i] === el) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(arr, el) {\n    const start = indexOfElement(arr, el);\n    removeAt(arr, start);\n}\nexport function indexOf(src, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        if (fn(src[i])) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function removeOneByFn(arr, fn) {\n    const start = indexOf(arr, fn);\n    removeAt(arr, start);\n}\nexport function shallowCopy(src) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = src[i];\n    }\n    return result;\n}\nexport function shallowCopyInto(src, target) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    target.length = len;\n    while (++i < len) {\n        target[i] = src[i];\n    }\n}\nexport function shallowFill(src, target, at = 0) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    if (target.length < len + at) {\n        target.length = len + at;\n    }\n    while (++i < len) {\n        target[at + i] = src[i];\n    }\n}\nexport function deepCopy(src) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = (clone(src[i]));\n    }\n    return result;\n}\nexport function deepCopyInto(src, target) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    target.length = len;\n    while (++i < len) {\n        target[i] = (clone(src[i]));\n    }\n}\nexport function deepFill(src, target, at = 0) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    if (target.length < len + at) {\n        target.length = len + at;\n    }\n    while (++i < len) {\n        target[at + i] = (clone(src[i]));\n    }\n}\nexport function filter(src, fn) {\n    const result = [];\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        const el = src[i];\n        if (fn(el, i) === true) {\n            result.push(el);\n        }\n    }\n    return result;\n}\nexport function filterInto(src, target, fn) {\n    let i = -1;\n    let j = 0;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const space = target.length;\n    while (++i < len) {\n        const el = src[i];\n        if (fn(el, i) === true) {\n            if (j < space) {\n                target[j++] = el;\n            }\n            else {\n                ++j;\n                target.push(el);\n            }\n        }\n    }\n    target.length = j;\n}\nexport function map(src, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = fn(src[i], i);\n    }\n    return result;\n}\nexport function mapInto(src, target, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    target.length = len;\n    while (++i < len) {\n        target[i] = fn(src[i], i);\n    }\n}\nexport function reduce(src, fn, start) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (++i < len) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function reduceUntil(src, fn, test, start) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (++i < len && !test(acc, src[i])) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function reverseReduce(src, fn, start) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (--i >= 0) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function reverseReduceUntil(src, fn, test, start) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (--i >= 0 && !test(acc, src[i])) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function forEach(src, fn, startIndex = 0) {\n    let i = startIndex - 1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        fn(src[i], i);\n    }\n}\nexport function forSome(src, filter, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        const el = src[i];\n        if (filter(el, i)) {\n            fn(el, i);\n        }\n    }\n}\nexport function until(src, fnOrTest, fn, startIndex) {\n    let isCombined = isUndefined(fn) || isNumber(fn);\n    startIndex = isCombined ? fn : startIndex;\n    let i = isUndefined(startIndex) || startIndex < 0 ? -1 : startIndex - 1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len && (isCombined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\n    }\n}\nexport function reverseForEach(src, fn) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    while (--i >= 0) {\n        fn(src[i], i);\n    }\n}\nexport function reverseUntil(src, fnOrTest, fn) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    let combined = isUndefined(fn);\n    while (--i >= 0 && (combined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\n    }\n}\nexport function some(src, fn) {\n    let result = false;\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len && !(result = fn(src[i]))) {\n    }\n    return result;\n}\nexport function all(src, fn) {\n    let result = true;\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len && (result = fn(src[i]))) {\n    }\n    return result;\n}\nexport function insertAt(src, pos, v) {\n    if (isNullOrUndefined(src)) {\n        throw new Error(\"Unable to insertAt on null or undefined\");\n    }\n    if (pos === 0) {\n        src.unshift(v);\n    }\n    else if (pos > 0) {\n        let i = src.length;\n        while (--i >= pos) {\n            src[i + 1] = src[i];\n        }\n        src[i + 1] = v;\n    }\n}\nexport function binarySearch(src, cmp, closest = false) {\n    let lo = 0, hi = isNullOrUndefined(src) ? -1 : src.length - 1, mid, element;\n    while (lo <= hi) {\n        mid = ((lo + hi) >> 1);\n        element = src[mid];\n        let val = cmp(element);\n        if (val < 0) {\n            lo = mid + 1;\n        }\n        else if (val > 0) {\n            hi = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return closest ? lo : -1;\n}\nexport function create(length, populator) {\n    if ((length || -1) < 0) {\n        length = 0;\n    }\n    let arr = new Array(length);\n    let i = -1;\n    while (++i < length) {\n        arr[i] = populator(i, arr);\n    }\n    return arr;\n}\nexport function deserialize(array, target, ...types) {\n    let [T, ...passthroughT] = types;\n    if (isNotUndefined(T)) {\n        if (isNotUndefined(T.prototype.deserialize)) {\n            mapInto(array, target, (el) => {\n                return (new T()).deserialize(el, ...passthroughT);\n            });\n        }\n        else {\n            mapInto(array, target, (el) => {\n                let newT = new T();\n                setProperties(newT, el);\n                return newT;\n            });\n        }\n    }\n    else {\n        deepCopyInto(array, target);\n    }\n    return this;\n}\n//# sourceMappingURL=Arr.js.map","class TimerState {\n}\nTimerState._hasPerformance = typeof (performance) !== \"undefined\";\nexport class Timer {\n    static get time() {\n        return TimerState._time;\n    }\n    static now() {\n        if (TimerState._hasPerformance) {\n            return performance.now();\n        }\n        else {\n            const hrTime = process.hrtime();\n            return hrTime[0] * 1000 + (hrTime[1] / 1e6);\n        }\n    }\n    static start() {\n        const now = Timer.now();\n        TimerState._start = TimerState._last = now;\n        return TimerState._time = 0;\n    }\n    static stop() {\n        const start = TimerState._start;\n        const now = Timer.now();\n        TimerState._last = now;\n        return TimerState._time = now - start;\n    }\n}\n//# sourceMappingURL=Timer.js.map","import { Global } from \"./Global\";\nimport { hasConsole, hasWindow, isNotUndefined } from \"./Test\";\nimport { Timer } from \"./Timer\";\nclass LoggableCounter {\n    constructor(name = \"\") {\n        this.name = \"\";\n        this._value = 0;\n        this.name = name;\n    }\n    log() {\n        console.log(\"Counter \" + this.name + \": \" + this.toString());\n    }\n    inc() {\n        this._value++;\n        return this;\n    }\n    reset() {\n        this._value = 0;\n        return this;\n    }\n    valueOf() {\n        return this._value;\n    }\n    toString() {\n        return this._value.toString();\n    }\n}\nclass UtilState {\n}\nUtilState._int = { \"0\": 0 };\nUtilState._counter = { \"\": new LoggableCounter(\"\") };\nexport function init(win) {\n    if (win !== undefined) {\n        Global.window = win;\n    }\n}\nexport function getFunctionName(fn) {\n    let result;\n    if (fn.hasOwnProperty(\"name\") !== undefined) {\n        result = fn.name;\n    }\n    else {\n        const fnString = fn.toString();\n        result = fnString.substring(9, fnString.indexOf(\"(\"));\n    }\n    return result;\n}\nexport function getFunctionCode(fn) {\n    let result;\n    const fnString = fn.toString();\n    result = fnString.substring(fnString.indexOf(\"{\") + 1, fnString.lastIndexOf(\"}\"));\n    return result;\n}\nexport function newUUID() {\n    let d = new Date().getTime();\n    d += Timer.now();\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n        const r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n}\nexport function newInt(key = 0) {\n    if (UtilState._int[key] === undefined) {\n        UtilState._int[key] = 0;\n    }\n    return UtilState._int[key]++;\n}\nexport function counter(key = \"\") {\n    if (UtilState._counter[key] === undefined) {\n        UtilState._counter[key] = new LoggableCounter(key.toString());\n    }\n    return UtilState._counter[key];\n}\nexport function count(key = \"\") {\n    return counter(key).inc();\n}\nexport function callDebugger() {\n    debugger;\n}\nexport function pipeOut(log, warn, error) {\n    if (hasConsole()) {\n        proxyFn(console, \"log\", function (superfn, ...args) { superfn(...args); log(...args); });\n        proxyFn(console, \"warn\", function (superfn, ...args) { superfn(...args); warn(...args); });\n        proxyFn(console, \"error\", function (superfn, ...args) { superfn(...args); error(...args); });\n    }\n    else {\n        const console = {\n            log,\n            warn,\n            error\n        };\n        if (!(hasWindow())) {\n            Global.window = {};\n        }\n        Global.window.console = console;\n    }\n}\nexport function assert(assertion, message, isDebug = true) {\n    let result = true;\n    if (!assertion) {\n        if (hasConsole) {\n            result = false;\n            console.error(\"Assertion failed: \" + message);\n        }\n        if (isDebug) {\n            callDebugger();\n        }\n    }\n    return result;\n}\nexport function proxyFn(objOrClass, fnName, proxyFn) {\n    objOrClass = isNotUndefined(objOrClass.prototype) ? objOrClass.prototype : objOrClass;\n    const fn = objOrClass[fnName];\n    const _superFn = function (...args) {\n        if (args.length !== 0) {\n            return fn.apply(this || objOrClass, args);\n        }\n        else {\n            return fn.call(this || objOrClass);\n        }\n    };\n    objOrClass[fnName] = proxyFn.bind(objOrClass, _superFn);\n}\nexport function loop(count, fn) {\n    let i = -1;\n    while (++i < count) {\n        fn(i);\n    }\n}\nexport function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n}\n//# sourceMappingURL=Util.js.map","import { Global } from \"./Global\";\nexport var Sides;\n(function (Sides) {\n    Sides[Sides[\"Top\"] = 0] = \"Top\";\n    Sides[Sides[\"Bottom\"] = 1] = \"Bottom\";\n    Sides[Sides[\"Left\"] = 2] = \"Left\";\n    Sides[Sides[\"Right\"] = 3] = \"Right\";\n})(Sides || (Sides = {}));\nclass DomState {\n}\nDomState.Sides = Sides;\nDomState._window = Global.window;\nDomState._document = Global.window ? Global.window.document : undefined;\nDomState._el = Global.window ? Global.window.document.createElement(\"div\") : undefined;\nexport function init(win) {\n    Global.window = win;\n    DomState._window = Global.window;\n    DomState._document = DomState._window.document;\n    DomState._el = DomState._document.createElement(\"div\");\n}\nexport function toArray(a) {\n    return Array.prototype.slice.call(a);\n}\nexport function create(html, attr) {\n    let result, keys, i, k, styles, styleKeys;\n    DomState._el.innerHTML = html;\n    result = DomState._el.children[0];\n    setAttr(result, attr);\n    clear(DomState._el);\n    return result;\n}\nexport function outerHTML(el) {\n    DomState._el.appendChild(el);\n    const result = DomState._el.innerHTML;\n    clear(DomState._el);\n    return result;\n}\nexport function setAttr(_el, attr) {\n    let el;\n    if (typeof (_el) === \"string\") {\n        el = get(_el);\n    }\n    else {\n        el = _el;\n    }\n    let keys, i, k, styles, styleKeys, style;\n    if (attr !== undefined && typeof (attr) === \"object\") {\n        keys = Object.keys(attr);\n        for (i = 0; i < keys.length; i++) {\n            if (keys[i] === \"style\") {\n                styles = attr[keys[i]];\n                styleKeys = Object.keys(styles);\n                for (k = 0; k < styleKeys.length; k++) {\n                    style = styles[styleKeys[k]];\n                    if (typeof (style) === \"string\") {\n                        el.style.setProperty(styleKeys[k], style);\n                    }\n                    else {\n                        el.style.setProperty(styleKeys[k], style[0], style[1]);\n                    }\n                }\n            }\n            else if (keys[i] === \"classes\" && attr[keys[i]] !== undefined && attr[keys[i]].join) {\n                el.setAttribute(\"className\", attr[keys[i]].join(\" \"));\n            }\n            else {\n                el.setAttribute(keys[i], attr[keys[i]]);\n            }\n        }\n    }\n}\nexport function remove(element) {\n    return element.parentNode === undefined ? null : element.parentNode.removeChild(element);\n}\nexport function replace(src, target) {\n    let result = target;\n    if (src.parentNode) {\n        src.parentNode.replaceChild(target, src);\n    }\n    return result;\n}\nexport function clear(element) {\n    let i = element.children.length;\n    while (i--) {\n        element.removeChild(element.children[i]);\n    }\n}\nexport function get(id) {\n    let result = DomState._document.getElementById(id);\n    if (result === null) {\n        switch (id) {\n            default:\n                result = DomState._document.body;\n                break;\n        }\n    }\n    return result;\n}\nexport function find(selector) {\n    return DomState._document.querySelector(selector);\n}\nexport function findAll(selector, root) {\n    return toArray((root || DomState._document).querySelectorAll(selector));\n}\nexport function children(root, selector) {\n    const children = toArray((root || DomState._document).children);\n    return selector === undefined ? children : children.filter(is.bind(this, selector));\n}\nexport function findParent(root, selector) {\n    let result = root.parentElement;\n    while (result) {\n        if (is(selector, result)) {\n            break;\n        }\n        result = result.parentElement;\n    }\n    return result;\n}\nexport function position(el, x, y) {\n    el.style.top = y + \"px\";\n    el.style.left = x + \"px\";\n}\nexport function is(selector, element) {\n    let result = false;\n    if (element.matches) {\n        result = element.matches(selector);\n    }\n    else if (element.msMatchesSelector) {\n        result = element.msMatchesSelector(selector);\n    }\n    else if (element.webkitMatchesSelector) {\n        result = element.webkitMatchesSelector(selector);\n    }\n    else {\n        if (element.parentElement === null) {\n            throw new Error(\"Element has no parent\");\n        }\n        if (element.id !== \"\") {\n            result = element.parentElement.querySelector(\"#\" + element.id) !== null;\n        }\n        else {\n            result = toArray(element.parentElement.querySelectorAll(selector)).indexOf(element) !== -1;\n        }\n    }\n    return result;\n}\nexport function setStylesExplicitly(element, ...styles) {\n    const comp = DomState._window.getComputedStyle(element);\n    for (const style of styles) {\n        element.style[style] = comp[style];\n    }\n}\n//# sourceMappingURL=Dom.js.map","export class CalcConst {\n}\nCalcConst.ROTATION_DEGREE_PRECISION = 1;\nCalcConst.RADIAN_FACTOR = (1 / 360) * (2 * Math.PI);\nCalcConst.DEGREE_FACTOR = (1 / (2 * Math.PI) * 360);\nCalcConst.DEG360 = 360 * CalcConst.ROTATION_DEGREE_PRECISION;\nCalcConst.ROTATION_LOOKUP = (function () {\n    const lookup = [];\n    for (let i = 0; i < 360 * CalcConst.ROTATION_DEGREE_PRECISION; i++) {\n        lookup.push([Math.cos(i * CalcConst.RADIAN_FACTOR), Math.sin(i * CalcConst.RADIAN_FACTOR)]);\n    }\n    return lookup;\n})();\nexport function sign(x) {\n    return typeof x === \"number\" ? x ? x < 0 ? -1 : 1 : x === x ? 0 : NaN : NaN;\n}\nexport function rotationDeg(rotation) {\n    let deg = (rotation * CalcConst.ROTATION_DEGREE_PRECISION) | 0;\n    while (deg < 0) {\n        deg += CalcConst.DEG360;\n    }\n    while (deg >= CalcConst.DEG360) {\n        deg -= CalcConst.DEG360;\n    }\n    return CalcConst.ROTATION_LOOKUP[deg];\n}\nexport function rotationRad(rotation) {\n    const deg = rotation * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\n    return this.rotationDeg(deg / CalcConst.ROTATION_DEGREE_PRECISION);\n}\nexport function closestRadianRotation(radian) {\n    let deg = radian * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\n    while (deg < 0) {\n        deg += CalcConst.DEG360;\n    }\n    while (deg >= CalcConst.DEG360) {\n        deg -= CalcConst.DEG360;\n    }\n    return deg * CalcConst.RADIAN_FACTOR / CalcConst.ROTATION_DEGREE_PRECISION;\n}\n//# sourceMappingURL=Calc.js.map","import { rotationRad } from \"../Calc\";\nexport class Vec2Const {\n}\nVec2Const.EPSILON = 1e-8;\nVec2Const.IDENTITY = { x: 1, y: 1 };\nVec2Const.X_DIM = { x: 1, y: 0 };\nVec2Const.Y_DIM = { x: 0, y: 1 };\nexport class Vec2 {\n    constructor(x = 0, y = 0) {\n        this.angle = this.horizontalAngle;\n        this.direction = this.horizontalAngle;\n        this.x = x;\n        this.y = y;\n    }\n    get isZero() {\n        return this.x === 0 && this.y === 0;\n    }\n    create(x = 0, y = 0) {\n        return new (this.constructor)(x, y);\n    }\n    set(src) {\n        this.x = src.x;\n        this.y = src.y;\n        return this;\n    }\n    clone(out) {\n        const result = out ? out.set(this) : this.create(this.x, this.y);\n        return result;\n    }\n    toInt() {\n        this.x |= 0;\n        this.y |= 0;\n        return this;\n    }\n    ceil() {\n        this.x = Math.ceil(this.x);\n        this.y = Math.ceil(this.y);\n        return this;\n    }\n    toDecimal() {\n        this.x += Vec2Const.EPSILON;\n        this.y += Vec2Const.EPSILON;\n        return this;\n    }\n    lengthSq() { return (this.x * this.x + this.y * this.y); }\n    length() { return Math.sqrt(this.lengthSq()); }\n    horizontalAngle() { return Math.atan2(this.y, this.x); }\n    rotate(angle) {\n        const rot = rotationRad(angle);\n        const nx = (this.x * rot[0]) - (this.y * rot[1]);\n        const ny = (this.x * rot[1]) + (this.y * rot[0]);\n        this.x = nx;\n        this.y = ny;\n        return this;\n    }\n    rotateAround(center, angle) {\n        return this.subtract(center).rotate(angle).add(center);\n    }\n    normalize() {\n        const len = this.length();\n        if (len === 0) {\n            this.x = 1;\n            this.y = 0;\n        }\n        else {\n            this.x = this.x / len;\n            this.y = this.y / len;\n        }\n        return this;\n    }\n    scale(vectorB) {\n        this.x = this.x * vectorB.x;\n        this.y = this.y * vectorB.y;\n        return this;\n    }\n    relate(vectorB) {\n        this.x = this.x / vectorB.x;\n        this.y = this.y / vectorB.y;\n        return this;\n    }\n    multiply(scalar) {\n        this.x = this.x * scalar;\n        this.y = this.y * scalar;\n        return this;\n    }\n    add(vectorB) {\n        this.x = this.x + vectorB.x;\n        this.y = this.y + vectorB.y;\n        return this;\n    }\n    subtract(vectorB) {\n        this.x = this.x - vectorB.x;\n        this.y = this.y - vectorB.y;\n        return this;\n    }\n    invert() {\n        this.x = -this.x;\n        this.y = -this.y;\n        return this;\n    }\n    equals(target) {\n        return this.x === target.x && this.y === target.y;\n    }\n    almostEquals(target) {\n        return Math.abs(this.x - target.x) < Vec2Const.EPSILON && Math.abs(this.y - target.y) < Vec2Const.EPSILON;\n    }\n    getNormal(isNormalized) {\n        const result = this.clone();\n        if (!isNormalized) {\n            result.set(this).normalize();\n        }\n        const temp = result.x;\n        result.x = result.y;\n        result.y = -temp;\n        return result;\n    }\n    dot(vectorB) { return (this.x * vectorB.x + this.y * vectorB.y); }\n    cross(vectorB) { return ((this.x * vectorB.y) - (this.y * vectorB.x)); }\n    projectOnto(vectorB) {\n        const coeff = ((this.x * vectorB.x) + (this.y * vectorB.y)) / ((vectorB.x * vectorB.x) + (vectorB.y * vectorB.y));\n        this.x = coeff * vectorB.x;\n        this.y = coeff * vectorB.y;\n        return this;\n    }\n    verticalAngle() { return Math.atan2(this.x, this.y); }\n    rotateBy(rotation) {\n        const angle = -this.horizontalAngle() + rotation;\n        return this.rotate(angle);\n    }\n    max(v) {\n        this.x = Math.max(this.x, v.x);\n        this.y = Math.max(this.y, v.y);\n        return this;\n    }\n    min(v) {\n        this.x = Math.min(this.x, v.x);\n        this.y = Math.min(this.y, v.y);\n        return this;\n    }\n    zero() {\n        this.x = 0;\n        this.y = 0;\n        return this;\n    }\n}\n//# sourceMappingURL=Vec2.js.map","import { forEach } from \"../Arr\";\nimport { clone, setProperties, wipe } from \"../Obj\";\nimport { isFunction, isNotUndefined } from \"../Test\";\nimport { List } from \"./List\";\nexport class Dictionary {\n    constructor() {\n        this._lookup = Object.create(null);\n        this._list = new List();\n        this._isDirty = false;\n    }\n    create() {\n        return new (this.constructor)();\n    }\n    has(key) {\n        return this._lookup[key] !== undefined;\n    }\n    contains(key) {\n        return this.has(key);\n    }\n    get(key) {\n        return this._lookup[key];\n    }\n    set(key, value) {\n        this._isDirty = this._isDirty || this.has(key);\n        if (value !== undefined) {\n            this._lookup[key] = value;\n            if (!this._isDirty) {\n                this._list.push(value);\n            }\n        }\n        return this;\n    }\n    delete(key) {\n        if (this.has(key)) {\n            delete this._lookup[key];\n            this._isDirty = true;\n        }\n        return this;\n    }\n    clear() {\n        wipe(this._lookup);\n        this._list.clear();\n        return this;\n    }\n    get values() {\n        this.cleanList();\n        return this._list.values;\n    }\n    get keys() {\n        return Object.keys(this._lookup);\n    }\n    get list() {\n        this.cleanList();\n        return this._list;\n    }\n    get count() {\n        let result = 0;\n        if (this._isDirty) {\n            result = this.keys.length;\n        }\n        else {\n            result = this._list.count;\n        }\n        return result;\n    }\n    cleanList() {\n        if (this._isDirty) {\n            this.reCreateList();\n        }\n    }\n    reCreateList() {\n        let lookup = this._lookup;\n        let keys = Object.keys(this._lookup);\n        let i = -1;\n        let list = this._list;\n        list.clear();\n        while (++i < keys.length) {\n            list.add(lookup[keys[i]]);\n        }\n    }\n    clone() {\n        let result = this.create();\n        result._isDirty = this._isDirty;\n        result._list = this._list.clone();\n        result._lookup = clone(this._lookup);\n        return result;\n    }\n    toJSON() {\n        return this._lookup;\n    }\n    serialize() {\n        let obj = Object.create(null);\n        forEach(this.keys, (key) => {\n            let v = this.get(key);\n            obj[key] = isFunction(v.serialize) ? v.serialize() : v;\n        });\n        return obj;\n    }\n    deserialize(obj, ...types) {\n        let [T, ...passthroughT] = types;\n        this.clear();\n        if (isNotUndefined(T)) {\n            if (isNotUndefined(T.prototype.deserialize)) {\n                for (let key of Object.keys(obj)) {\n                    this.set(key, (new T()).deserialize(obj[key], ...passthroughT));\n                }\n            }\n            else {\n                for (let key of Object.keys(obj)) {\n                    let newT = new T();\n                    setProperties(newT, obj[key]);\n                    this.set(key, newT);\n                }\n            }\n        }\n        else {\n            for (let key of Object.keys(obj)) {\n                this.set(key, obj[key]);\n            }\n        }\n        return this;\n    }\n}\n//# sourceMappingURL=Dictionary.js.map","import * as Arr from \"../Arr\";\nimport { clone, equals } from \"../Obj\";\nimport { isArray, isFunction, isNotNullOrUndefined, hasWindow } from \"../Test\";\nimport { Dictionary } from \"./Dictionary\";\nif (hasWindow() && !window.Symbol) {\n    window.Symbol = { iterator: \"iterator\" };\n}\nexport class List {\n    constructor(arr) {\n        this._array = [];\n        this._index = null;\n        this._indexer = null;\n        this._pointer = 0;\n        if (arr === undefined) {\n            this._array = new Array();\n        }\n        else {\n            if (arr instanceof (List)) {\n                this._array = Arr.shallowCopy(arr._array);\n            }\n            else {\n                this._array = Arr.shallowCopy(arr);\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    next(value) {\n        return {\n            done: this._pointer >= this.length,\n            value: this._pointer < this.length ? this._array[this._pointer++] : (this._pointer = 0, undefined)\n        };\n    }\n    create(arr) {\n        return new (this.constructor)(arr);\n    }\n    get values() {\n        return this._array;\n    }\n    get(pos) {\n        return this._array[pos];\n    }\n    getByIndex(key) {\n        let result;\n        return isNotNullOrUndefined(this._index) ? this._index.get(key) : undefined;\n    }\n    set(pos, v) {\n        if (pos >= 0 && pos < this.length) {\n            this._array[pos | 0] = v;\n            if (this._indexer !== null) {\n                this._index.set(this._indexer(v), v);\n            }\n        }\n        else {\n            throw new Error(`index out of bounds on <List>.set(${pos}, ${v.toString()})`);\n        }\n        return this;\n    }\n    get count() {\n        return this._array.length;\n    }\n    get length() {\n        return this._array.length;\n    }\n    get indexer() {\n        return this._indexer;\n    }\n    set indexer(fn) {\n        this._indexer = fn;\n        this._reindex();\n    }\n    _reindex() {\n        if (this._indexer === null) {\n            this._index = null;\n        }\n        else {\n            if (this._index === null) {\n                this._index = new Dictionary();\n            }\n            else {\n                this._index.clear();\n            }\n            this.forEach((el) => this._index.set(this._indexer(el), el));\n        }\n    }\n    fill(size, populator) {\n        size = Math.max(0, size || 0);\n        if (isFunction(populator)) {\n            this._array = Arr.create(size, populator);\n        }\n        else if (!(populator instanceof Object)) {\n            this._array = Arr.create(size, () => populator);\n        }\n        else {\n            this._array = Arr.create(size, () => clone(populator));\n        }\n        this._reindex();\n        return this;\n    }\n    clear() {\n        this._array.length = 0;\n        if (this._index !== null) {\n            this._index.clear();\n        }\n        return this;\n    }\n    add(v) {\n        this._array.push(v);\n        if (this._indexer !== null) {\n            this._index.set(this._indexer(v), v);\n        }\n        return this;\n    }\n    insertAt(pos, v) {\n        Arr.insertAt(this._array, pos, v);\n        if (this._indexer !== null) {\n            this._index.set(this._indexer(v), v);\n        }\n        return this;\n    }\n    push(v) {\n        if (this._indexer !== null) {\n            this._index.set(this._indexer(v), v);\n        }\n        return this._array.push(v);\n    }\n    pop() {\n        let result = this._array.pop();\n        if (result !== undefined && this._indexer !== null) {\n            this._index.delete(this._indexer(result));\n        }\n        return result;\n    }\n    shift() {\n        let result = this._array.shift();\n        if (result !== undefined && this._indexer !== null) {\n            this._index.delete(this._indexer(result));\n        }\n        return result;\n    }\n    concat(v) {\n        let arr;\n        let arr2 = v instanceof List ? v.values : v;\n        arr = Arr.concat(this._array, arr2);\n        return this.create(arr);\n    }\n    index(arr) {\n        if (this._indexer !== null) {\n            Arr.forEach(arr, (el) => {\n                this._index.set(this._indexer(el), el);\n            });\n        }\n    }\n    unindexEl(el) {\n        if (this._indexer !== null) {\n            this._index.delete(this._indexer(el));\n        }\n    }\n    append(v) {\n        let arr2 = v instanceof List ? v.values : v;\n        Arr.append(this._array, arr2);\n        this.index(arr2);\n        return this;\n    }\n    copy(src) {\n        let arr2 = src instanceof List ? src.values : src;\n        Arr.deepCopyInto(arr2, this._array);\n        this.index(arr2);\n        return this;\n    }\n    shallowCopy(src) {\n        let arr2 = src instanceof List ? src.values : src;\n        Arr.shallowCopyInto(arr2, this._array);\n        this.index(arr2);\n        return this;\n    }\n    clone() {\n        const arr = Arr.deepCopy(this._array);\n        let result = this.create(arr);\n        if (this._indexer !== null) {\n            result._indexer = this._indexer;\n            result._index = this._index.clone();\n        }\n        return result;\n    }\n    remove(v) {\n        Arr.remove(this._array, v);\n        this.unindexEl(v);\n        return this;\n    }\n    removeFirst(fn) {\n        let result = this.removeAt(this.indexOf(fn));\n        this.unindexEl(result);\n        return result;\n    }\n    removeAt(n) {\n        let result = Arr.removeAt(this._array, n);\n        this.unindexEl(result);\n        return result;\n    }\n    forEach(fn, startIndex = 0) {\n        Arr.forEach(this._array, fn, startIndex);\n        return this;\n    }\n    forSome(filter, fn) {\n        Arr.forSome(this._array, filter, fn);\n        return this;\n    }\n    until(fnOrTest, fn, startIndex) {\n        Arr.until(this._array, fnOrTest, fn, startIndex);\n        return this;\n    }\n    reverseForEach(fn) {\n        Arr.reverseForEach(this._array, fn);\n        return this;\n    }\n    reverseUntil(fnOrTest, fn) {\n        Arr.reverseUntil(this._array, fnOrTest, fn);\n        return this;\n    }\n    some(fn) {\n        return Arr.some(this._array, fn);\n    }\n    all(fn) {\n        return Arr.all(this._array, fn);\n    }\n    indexOf(v) {\n        let result = -1;\n        if (isFunction(v)) {\n            result = Arr.indexOf(this._array, v);\n        }\n        else {\n            result = Arr.indexOfElement(this._array, v);\n        }\n        return result;\n    }\n    contains(v) {\n        let result = false;\n        if (isFunction(v)) {\n            result = this.find(v) !== undefined;\n        }\n        else {\n            if (this._indexer !== null) {\n                result = this._index.contains(this._indexer(v));\n            }\n            else {\n                result = Arr.indexOfElement(this._array, v) !== -1;\n            }\n        }\n        return result;\n    }\n    reverse() {\n        Arr.reverse(this._array);\n        return this;\n    }\n    first(fn) {\n        let index = -1;\n        let result;\n        if (fn === undefined) {\n            index = 0;\n        }\n        else {\n            index = Arr.indexOf(this._array, fn);\n        }\n        return index === -1 ? undefined : this.get(index);\n    }\n    find(fn) {\n        return this.first(fn);\n    }\n    last() {\n        return this.length === 0 ? undefined : this.get(this.length - 1);\n    }\n    filter(fn) {\n        return this.create(Arr.filter(this._array, fn));\n    }\n    select(fn) {\n        return this.create(Arr.filter(this._array, fn));\n    }\n    selectInto(src, fn) {\n        let arr = src instanceof List ? src.values : src;\n        Arr.filterInto(arr, this._array, fn);\n        this.index(arr);\n        return this;\n    }\n    head(count = 1) {\n        count = Math.max(0, count);\n        return this.create(Arr.slice(this._array, 0, count));\n    }\n    tail(count = 1) {\n        count = Math.min(this._array.length, count);\n        return this.create(Arr.slice(this._array, Math.max(0, this._array.length - count)));\n    }\n    splice(pos = 0, remove = Infinity, insert = []) {\n        Arr.splice(this._array, pos, remove, isArray(insert) ? insert : insert.values);\n        this._reindex();\n        return this;\n    }\n    orderBy(fn) {\n        this._array.sort(fn);\n        return this;\n    }\n    map(fn) {\n        return this.create(Arr.map(this._array, fn));\n    }\n    mapInto(src, fn) {\n        let arr = src instanceof List ? src.values : src;\n        Arr.mapInto(arr, this._array, fn);\n        this._reindex();\n        return this;\n    }\n    reduce(fn, start) {\n        return Arr.reduce(this._array, fn, start);\n    }\n    reduceUntil(fn, test, start) {\n        return Arr.reduceUntil(this._array, fn, test, start);\n    }\n    reverseReduce(fn, start) {\n        return Arr.reverseReduce(this._array, fn, start);\n    }\n    reverseReduceUntil(fn, test, start) {\n        return Arr.reverseReduceUntil(this._array, fn, test, start);\n    }\n    equals(b) {\n        const result = equals(this._array, b.values);\n        return result;\n    }\n    same(b) {\n        let a = this;\n        let count = 0;\n        if (a.length === b.length) {\n            if (a.indexer !== null) {\n                b.until((el) => !a.contains(el), (el, i) => ++count);\n            }\n            else {\n                a.until((el) => !b.contains(el), (el, i) => ++count);\n            }\n        }\n        return count === a.length;\n    }\n    intersect(b) {\n        let result = this.create();\n        let long;\n        let short;\n        result.indexer = this.indexer;\n        if (this.length < b.length) {\n            short = this, long = b;\n        }\n        else {\n            long = this, short = b;\n        }\n        if (long.indexer !== null) {\n            short.forEach((el) => {\n                if (long.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        else {\n            long.forEach((el) => {\n                if (short.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        return result;\n    }\n    union(b) {\n        let result = this.create();\n        let long;\n        let short;\n        result.indexer = this.indexer;\n        if (this.length < b.length) {\n            short = this, long = b;\n        }\n        else {\n            long = this, short = b;\n        }\n        if (long.indexer !== null) {\n            result = long.clone();\n            short.forEach((el) => {\n                if (!long.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        else {\n            result = short.clone();\n            long.forEach((el) => {\n                if (!short.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        return result;\n    }\n    subtract(b) {\n        let result = this.create();\n        result.indexer = this.indexer;\n        result = this.select((el) => !b.contains(el));\n        return result;\n    }\n    zip(list, fn = (t, u) => [t, u]) {\n        let result = this.create();\n        let length = list.length;\n        this.until(function (el, i) {\n            return i >= length;\n        }, function (el, i) {\n            result.push(fn(el, list.get(i)));\n        });\n        return result;\n    }\n    unzip(fn = (el) => [el[0], el[1]]) {\n        let result = [this.create(), this.create()];\n        this.forEach(function (el) {\n            let tuple = fn(el);\n            result[0].push(tuple[0]);\n            result[1].push(tuple[1]);\n        });\n        return result;\n    }\n    flatten(maxDepth = Infinity) {\n        return this.create(maxDepth < 1 ? this.values : this._flattenInner(this.values, maxDepth));\n    }\n    _flattenInner(src, maxDepth, depth = -1, result = []) {\n        let i = -1;\n        const len = src.length;\n        if (++depth > maxDepth) {\n            result.push(src);\n        }\n        else {\n            while (++i < len) {\n                if (isArray(src[i])) {\n                    this._flattenInner(src[i], maxDepth, depth, result);\n                }\n                else if (src[i] instanceof List) {\n                    this._flattenInner(src[i].values, maxDepth, depth, result);\n                }\n                else {\n                    result.push(src[i]);\n                }\n            }\n        }\n        return result;\n    }\n    toJSON() {\n        return this.values;\n    }\n    serialize() {\n        return this.values.map((el) => isFunction(el.serialize) ? el.serialize() : el);\n    }\n    deserialize(array, ...types) {\n        Arr.deserialize(array, this._array, ...types);\n        return this;\n    }\n}\n//# sourceMappingURL=List.js.map","import { binarySearch } from \"../Arr\";\nimport { equals } from \"../Obj\";\nimport { isFunction, hasWindow } from \"../Test\";\nimport { List } from \"./List\";\nif (hasWindow() && !window.Symbol) {\n    window.Symbol = { iterator: \"iterator\" };\n}\nexport class Comparer {\n}\nComparer.StringAsc = function (a, b) { return a < b ? -1 : a === b ? 0 : 1; };\nComparer.StringDesc = function (a, b) { return a < b ? 1 : a === b ? 0 : -1; };\nComparer.NumberAsc = function (a, b) { return a < b ? -1 : a === b ? 0 : 1; };\nComparer.NumberDesc = function (a, b) { return a < b ? 1 : a === b ? 0 : -1; };\nexport class SortedList {\n    constructor(comparer = ((a, b) => a < b ? -1 : a === b ? 0 : 1), arr) {\n        this._list = new List();\n        this._pointer = 0;\n        this._cmp = comparer;\n        if (arr === undefined) {\n            this._list = new List();\n        }\n        else {\n            if (arr instanceof (List) || arr instanceof (SortedList)) {\n                this.copy(arr.values);\n            }\n            else {\n                this.copy(arr);\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    next(value) {\n        return {\n            done: this._pointer >= this.length,\n            value: this._pointer < this.length ? this.values[this._pointer++] : (this._pointer = 0, undefined)\n        };\n    }\n    create(comparer, arr) {\n        return new (this.constructor)(comparer, arr);\n    }\n    get values() {\n        return this._list.values;\n    }\n    get(pos) {\n        return this._list.get(pos);\n    }\n    get count() {\n        return this._list.length;\n    }\n    get length() {\n        return this._list.length;\n    }\n    get comparer() {\n        return this._cmp;\n    }\n    set comparer(v) {\n        this._cmp = v;\n        this.sort();\n    }\n    sort() {\n        this._list.orderBy(this._cmp);\n    }\n    fill(size, populator) {\n        this._list.fill(size, populator);\n        this.sort();\n        return this;\n    }\n    clear() {\n        this._list.clear();\n        return this;\n    }\n    add(v) {\n        let index = this.getInsertIndex(v);\n        this._list.insertAt(index, v);\n        return this;\n    }\n    pop() {\n        return this._list.pop();\n    }\n    shift() {\n        return this._list.shift();\n    }\n    bulkAdd(v) {\n        if (v instanceof List || v instanceof SortedList) {\n            this._list.append(v.values);\n        }\n        else {\n            this._list.append(v);\n        }\n        this.sort();\n        return this;\n    }\n    copy(src) {\n        if (src instanceof List || src instanceof SortedList) {\n            this._list.copy(src.values);\n        }\n        else {\n            this._list.copy(src);\n        }\n        this.sort();\n        return this;\n    }\n    clone() {\n        return this.create(this._cmp, this._list.clone());\n    }\n    remove(v) {\n        let index = this.indexOf(v);\n        if (index !== -1) {\n            this._list.removeAt(index);\n        }\n        return this;\n    }\n    removeAt(n) {\n        return this._list.removeAt(n);\n    }\n    removeFirst(fn) {\n        return this._list.removeFirst(fn);\n    }\n    forEach(fn, startIndex = 0) {\n        this._list.forEach(fn, startIndex);\n        return this;\n    }\n    forSome(filter, fn) {\n        this._list.forSome(filter, fn);\n        return this;\n    }\n    until(fnOrTest, fn, startIndex) {\n        this._list.until(fnOrTest, fn, startIndex);\n        return this;\n    }\n    reverseForEach(fn) {\n        this._list.reverseForEach(fn);\n        return this;\n    }\n    reverseUntil(fnOrTest, fn) {\n        this._list.reverseUntil(fnOrTest, fn);\n        return this;\n    }\n    some(fn) {\n        return this._list.some(fn);\n    }\n    all(fn) {\n        return this._list.all(fn);\n    }\n    getInsertIndex(v) {\n        return binarySearch(this._list.values, (el) => this._cmp(el, v), true);\n    }\n    indexOf(v) {\n        let result = -1;\n        if (v instanceof Function) {\n            result = this._list.indexOf(v);\n        }\n        else {\n            result = binarySearch(this._list.values, (el) => this._cmp(el, v), false);\n        }\n        return result;\n    }\n    contains(v) {\n        return this.indexOf(v) !== -1;\n    }\n    first(fn) {\n        return this._list.first(fn);\n    }\n    find(fn) {\n        return this._list.find(fn);\n    }\n    last() {\n        return this._list.last();\n    }\n    filter(fn) {\n        return this.create(this._cmp, this._list.filter(fn));\n    }\n    select(fn) {\n        return this.create(this._cmp, this._list.filter(fn));\n    }\n    selectInto(src, fn) {\n        if (src instanceof List || src instanceof SortedList) {\n            this._list.selectInto(src.values, fn);\n        }\n        else {\n            this._list.selectInto(src, fn);\n        }\n        this.sort();\n        return this;\n    }\n    head(count = 1) {\n        return this.create(this.comparer, this._list.head(count));\n    }\n    tail(count = 1) {\n        return this.create(this.comparer, this._list.tail(count));\n    }\n    map(fn) {\n        return this._list.map(fn);\n    }\n    mapInto(src, fn) {\n        if (src instanceof List || src instanceof SortedList) {\n            this._list.mapInto(src.values, fn);\n        }\n        else {\n            this._list.mapInto(src, fn);\n        }\n        this.sort();\n        return this;\n    }\n    reduce(fn, start) {\n        return this._list.reduce(fn, start);\n    }\n    reduceUntil(fn, test, start) {\n        return this._list.reduceUntil(fn, test, start);\n    }\n    reverseReduce(fn, start) {\n        return this._list.reverseReduce(fn, start);\n    }\n    reverseReduceUntil(fn, test, start) {\n        return this._list.reverseReduceUntil(fn, test, start);\n    }\n    equals(b) {\n        const result = equals(this._list.values, b.values);\n        return result;\n    }\n    same(b) {\n        return this.equals(b);\n    }\n    intersect(b) {\n        let result = this.create(this.comparer);\n        let long;\n        let short;\n        if (this.length > 0 && b.length > 0) {\n            if (this.length < b.length) {\n                short = this, long = b;\n            }\n            else {\n                long = this, short = b;\n            }\n            if (b instanceof SortedList && this.comparer === b.comparer) {\n                let longPos = long.getInsertIndex(short.get(0)) - 1;\n                let lastPos = long.getInsertIndex(short.last()) - 1;\n                let i = -1;\n                let shortLen = short.length;\n                while (longPos < lastPos && ++i < shortLen) {\n                    let el = short.get(i);\n                    let aVsB;\n                    while (++longPos < lastPos && (aVsB = this.comparer(long.get(longPos), el)) < 0) {\n                        void (0);\n                    }\n                    if (longPos < lastPos && aVsB === 0) {\n                        result.add(el);\n                    }\n                }\n            }\n            else if (long instanceof SortedList || (long instanceof List && long.indexer !== null)) {\n                short.forEach((el) => {\n                    if (long.contains(el)) {\n                        result.add(el);\n                    }\n                });\n            }\n            else {\n                result = result.bulkAdd(short.toList().intersect(long));\n            }\n        }\n        return result;\n    }\n    union(b) {\n        let result;\n        let long;\n        let short;\n        if (this.length > 0 || b.length > 0) {\n            if (this.length < b.length) {\n                short = this, long = b;\n            }\n            else {\n                long = this, short = b;\n            }\n            if (b instanceof SortedList && this.comparer === b.comparer) {\n                result = this.create(this.comparer, long.values);\n                let longPos = long.getInsertIndex(short.get(0)) - 1;\n                let lastPos = long.getInsertIndex(short.last()) - 1;\n                let i = -1;\n                let shortLen = short.length;\n                while (++i < shortLen && longPos < lastPos) {\n                    let el = short.get(i);\n                    let aVsB = -1;\n                    while (++longPos < lastPos && (aVsB = this.comparer(long.get(longPos), el)) < 0) {\n                        void (0);\n                    }\n                    if ((aVsB > 0 && longPos < lastPos) || longPos === lastPos) {\n                        result.add(el);\n                    }\n                }\n                if (i < shortLen) {\n                    --i;\n                    while (++i < shortLen) {\n                        result.add(short.get(i));\n                    }\n                }\n            }\n            else if (long instanceof SortedList || (long instanceof List && long.indexer !== null)) {\n                result = this.create(this.comparer, long.values);\n                short.forEach((el) => {\n                    if (!long.contains(el)) {\n                        result.add(el);\n                    }\n                });\n            }\n            else {\n                result = this.create(this.comparer, short.toList().union(long));\n            }\n        }\n        else {\n            result = this.create(this.comparer);\n        }\n        return result;\n    }\n    toList() {\n        return new List(this.values);\n    }\n    toJSON() {\n        return this.values;\n    }\n    serialize() {\n        return this.values.map((el) => isFunction(el.serialize) ? el.serialize() : el);\n    }\n    deserialize(array, ...types) {\n        this._list.deserialize(array, ...types);\n        this.sort();\n        return this;\n    }\n}\n//# sourceMappingURL=SortedList.js.map","import { deepCopy, slice, deserialize } from \"../Arr\";\nimport { isFunction } from \"../Test\";\nimport { List } from \"./List\";\nexport class Stack {\n    constructor(size) {\n        this.DEFAULT_SIZE = 100;\n        this._pos = 0;\n        this._limit = 0;\n        if (!size) {\n            size = this.DEFAULT_SIZE;\n        }\n        this.DEFAULT_SIZE = size;\n        this._array = new Array(size);\n        this.push = this.fastPush;\n    }\n    get values() {\n        return slice(this._array, 0, this._pos);\n    }\n    get depth() {\n        return this._pos;\n    }\n    get size() {\n        return this._pos;\n    }\n    get isEmpty() {\n        return this.size === 0;\n    }\n    get limit() {\n        return this._limit;\n    }\n    set limit(value) {\n        if (value < 0) {\n            value = 0;\n        }\n        this._limit = value;\n        if (value === 0) {\n            this.push = this.fastPush;\n        }\n        else {\n            this.push = this.limitedPush;\n            this.limitObjects();\n        }\n    }\n    create(size) {\n        return new (this.constructor)(size);\n    }\n    push(obj) {\n    }\n    fastPush(obj) {\n        this._array[this._pos++] = obj;\n    }\n    limitedPush(obj) {\n        this._array[this._pos] = obj;\n        ++this._pos;\n        this.limitObjects();\n    }\n    pop() {\n        let result = undefined;\n        if (this._pos !== 0) {\n            result = this._array[--this._pos];\n        }\n        return result;\n    }\n    peek() {\n        return this._array[this._pos - 1];\n    }\n    peekAt(index) {\n        return index < 0 || index >= this._pos ? undefined : this._array[this._pos - index - 1];\n    }\n    toList() {\n        const result = new List();\n        return new List(this.values);\n    }\n    clear() {\n        this._pos = 0;\n        this._array.length = this.DEFAULT_SIZE;\n        return this;\n    }\n    clone() {\n        const arr = deepCopy(this._array);\n        let result = this.create(this.DEFAULT_SIZE);\n        result._array = arr;\n        result._limit = this._limit;\n        result._pos = this._pos;\n        return result;\n    }\n    limitObjects() {\n        while (this._pos > this._limit) {\n            this._array.shift();\n            --this._pos;\n        }\n    }\n    toJSON() {\n        return slice(this.values, 0, this._pos);\n    }\n    serialize() {\n        return slice(this.values, 0, this._pos).map((el) => isFunction(el.serialize) ? el.serialize() : el);\n    }\n    deserialize(array, ...types) {\n        deserialize(array, this._array, ...types);\n        this._pos = array.length;\n        return this;\n    }\n}\n//# sourceMappingURL=Stack.js.map","import { setProperties } from \"../../Obj\";\nexport function Initable(constructor) {\n    return class extends constructor {\n        init(obj, mapping) {\n            setProperties(this, obj, mapping);\n            return this;\n        }\n    };\n}\n//# sourceMappingURL=Initable.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { map } from \"../Arr\";\nimport { clone, isSameClass, setProperties } from \"../Obj\";\nimport { Initable } from \"../standard/mixins/Initable\";\nimport { isArray } from \"../Test\";\nimport { newUUID } from \"../Util\";\nimport { Dictionary } from \"./Dictionary\";\nimport { List } from \"./List\";\nimport { Stack } from \"./Stack\";\nlet Tree = Tree_1 = class Tree {\n    constructor(id) {\n        this.id = \"\";\n        this.parent = null;\n        this.children = null;\n        this.data = null;\n        this.virtual = false;\n        this.id = id || newUUID();\n    }\n    static fromObject(obj) {\n        const parent = (this instanceof Tree_1) ? this : null;\n        const root = new Tree_1(obj.id).init({ data: obj.data, parent });\n        if (obj.children !== undefined && isArray(obj.children)) {\n            root.children = new List(map(obj.children, Tree_1.fromObject.bind(root)));\n        }\n        return root;\n    }\n    static fromNodeList(nodes, mapcfg, virtualRoot = false) {\n        let result = new Tree_1();\n        let mapResolver = (key) => {\n            return !mapcfg || typeof (mapcfg[key]) === \"undefined\" ? (el) => el[key] :\n                typeof (mapcfg[key]) === \"string\" ? (el) => el[mapcfg[key]] :\n                    mapcfg[key];\n        };\n        let map = {\n            id: mapResolver(\"id\"),\n            parent: mapResolver(\"parent\"),\n            data: mapResolver(\"data\")\n        };\n        let list = new List(nodes);\n        let lookup = new Dictionary();\n        function getLookupKey(node) {\n            return node.parent ? `${node.parent.id}_${node.id}` : \"_root_\" + node.id;\n        }\n        let nodeList = list.map((el) => new Tree_1().init({ id: map.id(el), data: map.data(el) }));\n        nodeList.forEach((node, i) => {\n            if (!lookup.has(node.id)) {\n                lookup.set(node.id, []);\n            }\n            lookup.get(node.id).push(node);\n        });\n        let rootNodes = new List();\n        list.forEach((el, i) => {\n            let parentId = map.parent(el);\n            let nodeId = map.id(el);\n            if (lookup.contains(parentId)) {\n                lookup.get(parentId).forEach((p) => p.add(nodeList.get(i)));\n            }\n            else {\n                rootNodes.add(nodeList.get(i));\n            }\n        });\n        if (virtualRoot === false) {\n            result = rootNodes.first();\n        }\n        else {\n            result = new Tree_1().init({ virtual: true });\n            rootNodes.forEach((el) => result.add(el));\n        }\n        return result;\n    }\n    create(...args) {\n        return new (this.constructor)(...args);\n    }\n    init(obj) {\n        setProperties(this, obj);\n        return this;\n    }\n    insertAt(pos, data, id) {\n        let node;\n        if (this.children === null || this.children.count <= pos) {\n            node = this.add(data);\n        }\n        else {\n            node = this.create(id).init({ data, parent: this });\n            this.children.insertAt(pos, node);\n        }\n        return node;\n    }\n    add(data, id) {\n        let node;\n        if (this.children === null) {\n            this.children = new List();\n        }\n        if (isSameClass(data, this)) {\n            node = data;\n            node.parent = this;\n            this.children.add(node);\n        }\n        else {\n            node = (this.create(id)).init({ data: data, parent: this });\n            this.children.add(node);\n        }\n        return node;\n    }\n    remove() {\n        if (this.parent !== null) {\n            this.parent.children.remove(this);\n        }\n    }\n    prune() {\n        if (this.children !== null) {\n            this.children\n                .forEach(function (el, i) {\n                el.parent = null;\n            })\n                .clear();\n        }\n        this.children = null;\n        return this;\n    }\n    reduce(fn, start) {\n        const stack = new Stack();\n        let acc = start;\n        if (!fn) {\n            fn = (acc, cur) => (acc.push({ id: cur.id, parent: cur.parent ? cur.parent.id : null, data: cur.data }), acc);\n        }\n        if (start === undefined) {\n            acc = [];\n        }\n        let cur;\n        let i;\n        stack.push(this);\n        while (cur = stack.pop()) {\n            acc = fn(acc, cur);\n            i = (cur.children && cur.children.count) || 0;\n            while (i--) {\n                stack.push(cur.children.get(i));\n            }\n        }\n        return acc;\n    }\n    clone() {\n        const result = this.create();\n        result.id = this.id;\n        result.parent = this.parent;\n        result.children = this.children === null ? null : this.children.clone();\n        result.data = this.data === null || this.data === undefined ? this.data : clone(this.data);\n        return result;\n    }\n    duplicateNode() {\n        const result = this.create();\n        result.id = this.id;\n        result.parent = this.parent;\n        result.children = this.children;\n        result.data = this.data;\n        return result;\n    }\n    filter(condition) {\n        const root = this.duplicateNode();\n        const children = this.children;\n        if (children !== null) {\n            root.children =\n                root.children\n                    .select(condition)\n                    .map(function (el, i) {\n                    return el.filter(condition);\n                });\n        }\n        return root;\n    }\n    select(condition, acc = new List()) {\n        const result = acc;\n        const children = this.children;\n        if (condition === undefined || condition(this)) {\n            result.add(this);\n        }\n        if (children) {\n            children.reduce(function (acc, cur) {\n                return cur.select(condition, acc);\n            }, result);\n        }\n        return result;\n    }\n    find(condition) {\n        let result = null;\n        const children = this.children;\n        if (children !== null) {\n            let i = -1;\n            const len = this.children.count;\n            const val = this.children.values;\n            while (++i < len) {\n                if (condition(val[i].data)) {\n                    result = val[i];\n                    break;\n                }\n                else {\n                    result = val[i].children !== null ? val[i].find(condition) : null;\n                    if (result !== null) {\n                        break;\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    depth() {\n        let result = 0;\n        let node = this;\n        while (node.parent) {\n            node = node.parent;\n            ++result;\n        }\n        return result;\n    }\n    sort(comparer) {\n        if (this.children !== null) {\n            this.children.orderBy(comparer);\n            this.children.forEach((el) => el.sort(comparer));\n        }\n        return this;\n    }\n    toJSON() {\n        let result = new List();\n        result.push({ id: this.id, data: this.data, parent: this.parent === null ? null : this.parent.id, children: this.children === null ? null : this.children.map((el) => el.id) });\n        if (this.children !== null) {\n            this.children.forEach((node) => result.append(node.toJSON()));\n        }\n        return result.toJSON();\n    }\n    serialize() {\n        let result = new List();\n        result.push({ id: this.id, data: this.data, parent: this.parent === null ? null : this.parent.id, children: this.children === null ? null : this.children.map((el) => el.id) });\n        if (this.children !== null) {\n            this.children.forEach((node) => result.append(node.serialize()));\n        }\n        return result.serialize();\n    }\n};\nTree = Tree_1 = __decorate([\n    Initable,\n    __metadata(\"design:paramtypes\", [Object])\n], Tree);\nexport { Tree };\nvar Tree_1;\n//# sourceMappingURL=Tree.js.map","export var MocDataType;\n(function (MocDataType) {\n    MocDataType[MocDataType[\"LinearInt\"] = 0] = \"LinearInt\";\n    MocDataType[MocDataType[\"RandomInt\"] = 1] = \"RandomInt\";\n    MocDataType[MocDataType[\"LinearFloat\"] = 2] = \"LinearFloat\";\n    MocDataType[MocDataType[\"RandomFloat\"] = 3] = \"RandomFloat\";\n})(MocDataType || (MocDataType = {}));\nexport const VALID_CHARS = \" ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\nexport function randomString(length = 25) {\n    let result = \"\";\n    for (let i = 0; i < length; i += 1) {\n        result += VALID_CHARS.charAt(Math.floor(Math.random() * VALID_CHARS.length));\n    }\n    return result;\n}\nexport function randomInt() {\n    return this.randomNumber() | 0;\n}\nexport function randomNumber() {\n    return Math.random() * 2147483647;\n}\nexport function numericArray(length, type = MocDataType.LinearInt) {\n    const result = new Array(length);\n    switch (type) {\n        case MocDataType.RandomInt:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = this.randomInt();\n            }\n            break;\n        case MocDataType.LinearFloat:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = i + 0.5;\n            }\n            break;\n        case MocDataType.RandomFloat:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = this.randomNumber();\n            }\n            break;\n        default:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = i;\n            }\n            break;\n    }\n    return result;\n}\nexport function stringArray(arrayLength, stringLength) {\n    const result = new Array(arrayLength);\n    let i = -1;\n    while (++i < arrayLength) {\n        result[i] = this.randomString(stringLength);\n    }\n    return result;\n}\n//# sourceMappingURL=MocData.js.map","let VERSION = \"0.1.0\";\nimport { until } from \"goodcore/Arr\";\nimport { newUUID } from \"goodcore/Util\";\nimport { is, findAll } from \"goodcore/Dom\";\nimport { Dictionary, Vec2, Timer, List } from \"goodcore\";\nexport class GoodTap {\n    constructor(rootElement) {\n        this.version = VERSION;\n        this.minSwipeDistance = 100;\n        this.events = [\"down\", \"up\", \"press\", \"tap\", \"swipe\"];\n        this.downEvents = [\"down\"];\n        this.upEvents = [\"up\", \"tap\", \"swipe\"];\n        this.longPressIntervals = new Dictionary();\n        this.eventAttr = \"\";\n        this.upEventsAndPress = [];\n        this.index = 0;\n        this.lastInsides = new List();\n        this.init(rootElement || document.body);\n        this.eventAttr = this.events.map((name) => \"[\" + name + \"]\").join(\",\");\n        this.upEventsAndPress = [...this.upEvents, \"press\"];\n    }\n    init(rootElement) {\n        if (this.hasTouchEvent()) {\n            rootElement.addEventListener(\"touchstart\", (ev) => { this.begin(ev); });\n            rootElement.addEventListener(\"touchend\", (ev) => { this.end(ev); });\n        }\n        rootElement.addEventListener(\"mousedown\", (ev) => { this.begin(ev); });\n        rootElement.addEventListener(\"mouseup\", (ev) => { this.end(ev); });\n        rootElement.addEventListener(\"focus\", (ev) => this.triggerOutside(ev.target, ev), true);\n        this.root = rootElement;\n    }\n    findTarget(el) {\n        let target = null;\n        while (el && el.parentElement !== document && target === null) {\n            if (is(this.eventAttr, el)) {\n                target = el;\n            }\n            el = el.parentElement;\n        }\n        return target;\n    }\n    findTargets(el) {\n        let targets = [];\n        while (el && el.parentElement !== document) {\n            if (!el.id) {\n                el.id = newUUID();\n            }\n            if (is(this.eventAttr, el)) {\n                targets.push(el);\n            }\n            el = el.parentElement;\n        }\n        return targets;\n    }\n    getTouchPos(ev) {\n        let pos = new Vec2(0, 0);\n        if (ev instanceof TouchEvent) {\n            pos = new Vec2(ev.changedTouches[0].pageX, ev.changedTouches[0].pageY);\n        }\n        else if (ev instanceof MouseEvent) {\n            pos = new Vec2(ev.pageX, ev.pageY);\n        }\n        return pos;\n    }\n    longPress(ev, target) {\n        let result = true;\n        let touchInfo = target.touchInfo;\n        result = this.executeAction(ev, target, \"press\", touchInfo);\n        if (result === false || target.hasAttribute(\"once\")) {\n            clearInterval(this.longPressIntervals.get(touchInfo.index));\n            this.longPressIntervals.delete(touchInfo.index);\n        }\n    }\n    triggerOutside(target, ev) {\n        let outside = new List(findAll(\"[outside]\", this.root));\n        if (outside.length > 0) {\n            let insides = new List(this.findTargets(target));\n            let preventOutside = insides.contains((el) => el.hasAttribute(\"preventDefault\"));\n            if (!preventOutside) {\n                outside\n                    .filter((el) => this.lastInsides.contains(el) && !insides.contains(el))\n                    .forEach((el) => this.handleEvent(\"outside\", ev, el));\n                this.lastInsides = insides;\n            }\n        }\n    }\n    begin(ev) {\n        this.longPressIntervals.list.forEach((long) => clearInterval(long));\n        this.longPressIntervals.clear();\n        let preventDefault = false;\n        let stopPropagation = false;\n        let target = ev.target;\n        let loopCounter = 0;\n        this.triggerOutside(target, ev);\n        while (loopCounter < 100 && (target = this.findTarget(target)) && !stopPropagation) {\n            ++loopCounter;\n            let pressInterval = null;\n            if (target.hasAttribute(\"press\")) {\n                pressInterval = setInterval(((target) => this.longPress(ev, target)).bind(this, target), parseInt(target.getAttribute(\"pressInterval\")) || 500);\n            }\n            target.classList.add(\"gt-active\");\n            target.touchInfo = {\n                index: this.index++,\n                time: Timer.now(),\n                pos: this.getTouchPos(ev),\n                long: pressInterval\n            };\n            if (pressInterval) {\n                this.longPressIntervals.set(target.touchInfo.index, target.touchInfo.long);\n            }\n            until(this.downEvents, (name) => {\n                if (target.hasAttribute(name)) {\n                    stopPropagation = (this.handleEvent(name, ev, target) === false);\n                    if (!stopPropagation && target.hasAttribute(\"stopPropagation\") || target.hasAttribute(\"gt-false\")) {\n                        stopPropagation = true;\n                        ev.stopPropagation();\n                    }\n                    if (target.hasAttribute(\"preventDefault\") || target.hasAttribute(\"gt-false\")) {\n                        ev.preventDefault();\n                        preventDefault = true;\n                    }\n                }\n                return stopPropagation;\n            });\n            target = target.parentElement;\n        }\n    }\n    isSwipe(ev, target) {\n        let pos = this.getTouchPos(ev);\n        let result = false;\n        if (\"touchInfo\" in target) {\n            let dX = pos.x - target.touchInfo.pos.x;\n            let dY = pos.y - target.touchInfo.pos.y;\n            let absDX = Math.abs(dX);\n            let absDY = Math.abs(dY);\n            let horizontal = absDX > absDY;\n            let distance = horizontal ? absDX : absDY;\n            result = distance >= this.minSwipeDistance;\n            if (result) {\n                target.touchInfo.swipeInfo = {\n                    direction: horizontal ?\n                        (dX < 0 ? \"left\" : \"right\") :\n                        (dY < 0 ? \"up\" : \"down\"),\n                    distance: distance,\n                    delta: new Vec2(dX, dY)\n                };\n            }\n        }\n        return result;\n    }\n    end(ev) {\n        let time = Timer.now();\n        let stopPropagation = false;\n        let target = ev.target;\n        let loopCounter = 0;\n        while (loopCounter < 100 && (target = this.findTarget(target)) && !stopPropagation) {\n            ++loopCounter;\n            let touchInfo = target.touchInfo;\n            let endedOutsideOrMultiTouch = touchInfo === undefined;\n            if (endedOutsideOrMultiTouch && this.longPressIntervals.has(touchInfo.index)) {\n                target.classList.remove(\"gt-active\");\n                clearInterval(this.longPressIntervals.get(touchInfo.index));\n                delete target.touchInfo;\n            }\n            else {\n                until(this.upEventsAndPress, (name) => {\n                    if (target.hasAttribute(name)) {\n                        let isSwipe = this.isSwipe(ev, target);\n                        if (name === \"swipe\" && isSwipe\n                            || name === \"tap\" && !isSwipe\n                            || name === \"up\") {\n                            stopPropagation = (this.handleEvent(name, ev, target) === false);\n                        }\n                        if (stopPropagation || target.hasAttribute(\"stopPropagation\") || target.hasAttribute(\"gt-false\")) {\n                            stopPropagation = true;\n                            ev.stopPropagation();\n                            delete target.touchInfo;\n                        }\n                        if (target.hasAttribute(\"preventDefault\") || target.hasAttribute(\"gt-false\")) {\n                            ev.preventDefault();\n                        }\n                    }\n                    return stopPropagation;\n                });\n            }\n            target = target.parentElement;\n        }\n        findAll(\".gt-active\").forEach((el) => {\n            el.classList.remove(\"gt-active\");\n            delete el.touchInfo;\n        });\n        this.longPressIntervals.list.forEach((long) => clearInterval(long));\n        this.longPressIntervals.clear();\n    }\n    executeAction(ev, target, actionAttr, touchInfo) {\n        let result = true;\n        let action = target.getAttribute(actionAttr);\n        try {\n            if (action === \"[fn]\" && (actionAttr + \"-fn\") in target) {\n                result = target[actionAttr + \"-fn\"](ev, target, touchInfo);\n            }\n            else {\n                result = (new Function(\"event\", \"target\", \"touch\", action)).bind(target)(ev, target, touchInfo);\n            }\n        }\n        catch (err) {\n            throw name + \" event function error on element '\" + target.id + \"'\\n\" + err.toString();\n        }\n        return result;\n    }\n    handleEvent(name, ev, target) {\n        let actionAttr = name;\n        let result = true;\n        if (target) {\n            result = this.executeAction(ev, target, actionAttr, target.touchInfo);\n            if (name in this.upEvents) {\n                target.classList.remove(\"gt-active\");\n                if (this.longPressIntervals.has(target.touchInfo.index)) {\n                    clearInterval(this.longPressIntervals.get(target.touchInfo.index));\n                }\n                delete target.touchInfo;\n            }\n        }\n        return result;\n    }\n    on(element, name, fn) {\n        element.setAttribute(name, \"[fn]\");\n        element[name + \"-fn\"] = fn;\n    }\n    off(element, name) {\n        element.removeAttribute(name + \"-action\");\n        delete element[name + \"-fn\"];\n    }\n    hideKeyboard() {\n        let field = document.createElement(\"input\");\n        field.setAttribute(\"type\", \"text\");\n        document.body.appendChild(field);\n        setTimeout(function () {\n            field.focus();\n            setTimeout(function () {\n                field.setAttribute(\"style\", \"display:none;\");\n                field.parentElement.removeChild(field);\n            }, 50);\n        }, 50);\n    }\n    hasTouchEvent() {\n        return \"ontouchstart\" in document.documentElement;\n    }\n    outside() {\n        this.triggerOutside(this.root, new FocusEvent(\"\"));\n        this.hideKeyboard();\n    }\n}\nexport function init(root) {\n    return new GoodTap(root);\n}\n//# sourceMappingURL=index.js.map"],"names":["nativeWindow","win","window","_Global","[object Object]","this","_window","_nativeWindow","v","hasNativeWindow","Global","hasWindow","isArray","it","Array","Object","prototype","toString","call","isFunction","isNumber","x","areNullOrUndefined","args","len","length","a","i","result","undefined","areNotNullOrUndefined","isNullOrUndefined","arg","isNotNullOrUndefined","isUndefined","isNotUndefined","wipe","obj","keys","isSameClass","b","constructor","equals","key","clone","deepCopy","Date","getTime","RegExp","setProperties","target","values","mapping","value","reverse","array","left","right","temporary","concat","arrs","apply","slice","src","from","count","Infinity","Math","min","splice","pos","remove","insert","Error","srcLen","max","insertLen","newLen","delta","append","arr","index","offset","removeAt","indexOfElement","el","indexOf","fn","shallowCopy","shallowCopyInto","deepCopyInto","filter","push","filterInto","j","space","map","mapInto","reduce","start","acc","reduceUntil","test","reverseReduce","reverseReduceUntil","forEach","startIndex","forSome","until","fnOrTest","isCombined","reverseForEach","reverseUntil","combined","some","all","insertAt","unshift","create","populator","deserialize","types","T","passthroughT","newT","TimerState","_hasPerformance","Timer","time","_time","performance","now","hrTime","process","hrtime","_start","_last","newUUID","d","replace","c","r","random","floor","Sides","DomState","toArray","findAll","selector","root","_document","querySelectorAll","is","element","matches","msMatchesSelector","webkitMatchesSelector","parentElement","id","querySelector","document","_el","createElement","CalcConst","rotationRad","rotation","deg","DEGREE_FACTOR","ROTATION_DEGREE_PRECISION","rotationDeg","RADIAN_FACTOR","PI","DEG360","ROTATION_LOOKUP","lookup","cos","sin","Vec2Const","EPSILON","IDENTITY","y","X_DIM","Y_DIM","Vec2","angle","horizontalAngle","direction","isZero","out","set","ceil","sqrt","lengthSq","atan2","rot","nx","ny","center","subtract","rotate","add","vectorB","scalar","abs","isNormalized","normalize","temp","coeff","Dictionary","_lookup","_list","List","_isDirty","has","clear","cleanList","list","reCreateList","get","serialize","Symbol","iterator","_array","_index","_indexer","_pointer","Arr.shallowCopy","done","indexer","_reindex","size","Arr.create","Arr.insertAt","pop","delete","shift","arr2","Arr.concat","Arr.forEach","Arr.append","Arr.deepCopyInto","Arr.shallowCopyInto","Arr.deepCopy","Arr.remove","unindexEl","n","Arr.removeAt","Arr.forSome","Arr.until","Arr.reverseForEach","Arr.reverseUntil","Arr.some","Arr.all","Arr.indexOf","Arr.indexOfElement","find","contains","Arr.reverse","first","Arr.filter","Arr.filterInto","Arr.slice","Arr.splice","sort","Arr.map","Arr.mapInto","Arr.reduce","Arr.reduceUntil","Arr.reverseReduce","Arr.reverseReduceUntil","long","short","select","t","u","tuple","maxDepth","_flattenInner","depth","Arr.deserialize","Stack","DEFAULT_SIZE","_pos","_limit","fastPush","isEmpty","limit","limitedPush","limitObjects","Initable","__decorate","decorators","desc","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","k","metadata","Tree","Tree_1","parent","children","data","virtual","init","fromObject","bind","nodes","mapcfg","virtualRoot","mapResolver","nodeList","node","rootNodes","parentId","p","stack","cur","condition","duplicateNode","val","comparer","orderBy","toJSON","MocDataType","VERSION","GoodTap","rootElement","version","minSwipeDistance","events","downEvents","upEvents","longPressIntervals","eventAttr","upEventsAndPress","lastInsides","body","name","join","hasTouchEvent","addEventListener","ev","begin","end","triggerOutside","targets","TouchEvent","changedTouches","pageX","pageY","MouseEvent","touchInfo","executeAction","hasAttribute","clearInterval","outside","insides","findTargets","handleEvent","stopPropagation","loopCounter","findTarget","pressInterval","setInterval","longPress","parseInt","getAttribute","classList","getTouchPos","preventDefault","dX","dY","absDX","absDY","horizontal","distance","swipeInfo","isSwipe","actionAttr","action","Function","err","setAttribute","removeAttribute","field","appendChild","setTimeout","focus","removeChild","documentElement","FocusEvent","hideKeyboard"],"mappings":"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"}