{"version":3,"file":"goodtap.es6.min.js","sources":["../node_modules/goodcore/Calc.js","../node_modules/goodcore/struct/Vec2.js","../node_modules/goodcore/Global.js","../node_modules/goodcore/Test.js","../node_modules/goodcore/Obj.js","../node_modules/goodcore/Arr.js","../node_modules/goodcore/struct/List.js","../node_modules/goodcore/struct/SortedList.js","../node_modules/goodcore/struct/Dictionary.js","../node_modules/goodcore/Timer.js","../node_modules/goodcore/Util.js","../node_modules/goodcore/Dom.js","../node_modules/goodcore/MocData.js","lib/index.js"],"sourcesContent":["export class CalcConst {\n}\nCalcConst.ROTATION_DEGREE_PRECISION = 1;\nCalcConst.RADIAN_FACTOR = (1 / 360) * (2 * Math.PI);\nCalcConst.DEGREE_FACTOR = (1 / (2 * Math.PI) * 360);\nCalcConst.DEG360 = 360 * CalcConst.ROTATION_DEGREE_PRECISION;\nCalcConst.ROTATION_LOOKUP = (function () {\n    const lookup = [];\n    for (let i = 0; i < 360 * CalcConst.ROTATION_DEGREE_PRECISION; i++) {\n        lookup.push([Math.cos(i * CalcConst.RADIAN_FACTOR), Math.sin(i * CalcConst.RADIAN_FACTOR)]);\n    }\n    return lookup;\n})();\nexport function sign(x) {\n    return typeof x === \"number\" ? x ? x < 0 ? -1 : 1 : x === x ? 0 : NaN : NaN;\n}\nexport function rotationDeg(rotation) {\n    let deg = (rotation * CalcConst.ROTATION_DEGREE_PRECISION) | 0;\n    while (deg < 0) {\n        deg += CalcConst.DEG360;\n    }\n    while (deg >= CalcConst.DEG360) {\n        deg -= CalcConst.DEG360;\n    }\n    return CalcConst.ROTATION_LOOKUP[deg];\n}\nexport function rotationRad(rotation) {\n    const deg = rotation * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\n    return this.rotationDeg(deg / CalcConst.ROTATION_DEGREE_PRECISION);\n}\nexport function closestRadianRotation(radian) {\n    let deg = radian * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\n    while (deg < 0) {\n        deg += CalcConst.DEG360;\n    }\n    while (deg >= CalcConst.DEG360) {\n        deg -= CalcConst.DEG360;\n    }\n    return deg * CalcConst.RADIAN_FACTOR / CalcConst.ROTATION_DEGREE_PRECISION;\n}\n//# sourceMappingURL=Calc.js.map","import { rotationRad } from \"../Calc\";\nexport class Vec2Const {\n}\nVec2Const.EPSILON = 1e-8;\nVec2Const.IDENTITY = { x: 1, y: 1 };\nVec2Const.X_DIM = { x: 1, y: 0 };\nVec2Const.Y_DIM = { x: 0, y: 1 };\nexport class Vec2 {\n    constructor(x = 0, y = 0) {\n        this.angle = this.horizontalAngle;\n        this.direction = this.horizontalAngle;\n        this.x = x;\n        this.y = y;\n    }\n    get isZero() {\n        return this.x === 0 && this.y === 0;\n    }\n    create(x = 0, y = 0) {\n        return new (this.constructor)(x, y);\n    }\n    set(src) {\n        this.x = src.x;\n        this.y = src.y;\n        return this;\n    }\n    clone(out) {\n        const result = out ? out.set(this) : this.create(this.x, this.y);\n        return result;\n    }\n    toInt() {\n        this.x |= 0;\n        this.y |= 0;\n        return this;\n    }\n    ceil() {\n        this.x = Math.ceil(this.x);\n        this.y = Math.ceil(this.y);\n        return this;\n    }\n    toDecimal() {\n        this.x += Vec2Const.EPSILON;\n        this.y += Vec2Const.EPSILON;\n        return this;\n    }\n    lengthSq() { return (this.x * this.x + this.y * this.y); }\n    length() { return Math.sqrt(this.lengthSq()); }\n    horizontalAngle() { return Math.atan2(this.y, this.x); }\n    rotate(angle) {\n        const rot = rotationRad(angle);\n        const nx = (this.x * rot[0]) - (this.y * rot[1]);\n        const ny = (this.x * rot[1]) + (this.y * rot[0]);\n        this.x = nx;\n        this.y = ny;\n        return this;\n    }\n    rotateAround(center, angle) {\n        return this.subtract(center).rotate(angle).add(center);\n    }\n    normalize() {\n        const len = this.length();\n        if (len === 0) {\n            this.x = 1;\n            this.y = 0;\n        }\n        else {\n            this.x = this.x / len;\n            this.y = this.y / len;\n        }\n        return this;\n    }\n    scale(vectorB) {\n        this.x = this.x * vectorB.x;\n        this.y = this.y * vectorB.y;\n        return this;\n    }\n    relate(vectorB) {\n        this.x = this.x / vectorB.x;\n        this.y = this.y / vectorB.y;\n        return this;\n    }\n    multiply(scalar) {\n        this.x = this.x * scalar;\n        this.y = this.y * scalar;\n        return this;\n    }\n    add(vectorB) {\n        this.x = this.x + vectorB.x;\n        this.y = this.y + vectorB.y;\n        return this;\n    }\n    subtract(vectorB) {\n        this.x = this.x - vectorB.x;\n        this.y = this.y - vectorB.y;\n        return this;\n    }\n    invert() {\n        this.x = -this.x;\n        this.y = -this.y;\n        return this;\n    }\n    equals(target) {\n        return this.x === target.x && this.y === target.y;\n    }\n    almostEquals(target) {\n        return Math.abs(this.x - target.x) < Vec2Const.EPSILON && Math.abs(this.y - target.y) < Vec2Const.EPSILON;\n    }\n    getNormal(isNormalized) {\n        const result = this.clone();\n        if (!isNormalized) {\n            result.set(this).normalize();\n        }\n        const temp = result.x;\n        result.x = result.y;\n        result.y = -temp;\n        return result;\n    }\n    dot(vectorB) { return (this.x * vectorB.x + this.y * vectorB.y); }\n    cross(vectorB) { return ((this.x * vectorB.y) - (this.y * vectorB.x)); }\n    projectOnto(vectorB) {\n        const coeff = ((this.x * vectorB.x) + (this.y * vectorB.y)) / ((vectorB.x * vectorB.x) + (vectorB.y * vectorB.y));\n        this.x = coeff * vectorB.x;\n        this.y = coeff * vectorB.y;\n        return this;\n    }\n    verticalAngle() { return Math.atan2(this.x, this.y); }\n    rotateBy(rotation) {\n        const angle = -this.horizontalAngle() + rotation;\n        return this.rotate(angle);\n    }\n    max(v) {\n        this.x = Math.max(this.x, v.x);\n        this.y = Math.max(this.y, v.y);\n        return this;\n    }\n    min(v) {\n        this.x = Math.min(this.x, v.x);\n        this.y = Math.min(this.y, v.y);\n        return this;\n    }\n    zero() {\n        this.x = 0;\n        this.y = 0;\n        return this;\n    }\n}\n//# sourceMappingURL=Vec2.js.map","let nativeWindow = true;\nvar win;\nif (typeof (window) === \"undefined\") {\n    win = null;\n    nativeWindow = false;\n}\nelse {\n    win = window;\n}\nexport class _Global {\n    constructor() {\n        this._window = win;\n        this._nativeWindow = nativeWindow;\n    }\n    get window() {\n        return this._window;\n    }\n    set window(v) {\n        this._window = v;\n        if (this.hasNativeWindow) {\n            win = v;\n        }\n    }\n    get hasNativeWindow() {\n        return this._nativeWindow;\n    }\n}\nexport let Global = new _Global();\n//# sourceMappingURL=Global.js.map","import { Global } from \"./Global\";\nexport function hasWindow() {\n    return Global.window !== null;\n}\nexport function hasConsole() {\n    return this.hasWindow() && Global.window.console !== undefined || typeof (console) === \"function\";\n}\nexport function isArray(it) {\n    return Array.isArray ? Array.isArray(it) : Object.prototype.toString.call(it) === \"[object Array]\";\n}\nexport function isElement(target) {\n    return target !== undefined && target !== null && target.nodeType === 1 ? true : false;\n}\nexport function isFunction(it) {\n    return Object.prototype.toString.call(it) === \"[object Function]\";\n}\nexport function isNumber(x) {\n    return x === +x;\n}\nexport function isInt(x) {\n    return isNumber(x) && (x === (x | 0));\n}\nexport function isString(x) {\n    return isNotNullOrUndefined(x) && x.constructor === String;\n}\nexport function areNullOrUndefined(...args) {\n    const len = args.length;\n    let i = -1;\n    let a;\n    let result = false;\n    while (!result && ++i < len) {\n        a = args[i];\n        result = a === undefined || a === null;\n    }\n    return result;\n}\nexport function areNotNullOrUndefined(...args) {\n    return !areNullOrUndefined(...args);\n}\nexport function isNullOrUndefined(arg) {\n    return arg === undefined || arg === null;\n}\nexport function isNotNullOrUndefined(arg) {\n    return !isNullOrUndefined(arg);\n}\nexport function areUndefined(...args) {\n    const len = args.length;\n    let i = -1;\n    let a;\n    let result = false;\n    while (!result && ++i < len) {\n        a = args[i];\n        result = a === undefined;\n    }\n    return result;\n}\nexport function areNotUndefined(...args) {\n    return !areUndefined(...args);\n}\nexport function isUndefined(arg) {\n    return arg === undefined;\n}\nexport function isNotUndefined(arg) {\n    return !isUndefined(arg);\n}\n//# sourceMappingURL=Test.js.map","import { areNotNullOrUndefined, isArray, isFunction } from \"./Test\";\nexport function destroy(obj) {\n    if (obj.constructor.prototype.destroy !== undefined) {\n        obj.destroy();\n    }\n    else {\n        setNull(obj);\n    }\n}\nexport function wipe(obj) {\n    const keys = Object.keys(obj);\n    let i = -1;\n    const len = keys.length;\n    while (++i < len) {\n        delete obj[keys[i]];\n    }\n}\nexport function setNull(obj) {\n    if (obj.constructor.prototype.clear !== undefined) {\n        obj.clear();\n    }\n    else {\n        const keys = Object.keys(obj);\n        let key = null;\n        let i = -1;\n        const len = keys.length;\n        while (++i < len) {\n            key = keys[i];\n            obj[key] = null;\n        }\n    }\n}\nexport function isClassOf(a, b) {\n    return areNotNullOrUndefined(a, b) && a instanceof b.constructor;\n}\nexport function isSameClass(a, b) {\n    return areNotNullOrUndefined(a, b) && a.constructor === b.constructor;\n}\nexport function inherits(a, b) {\n    return isClassOf(a, b) && !isSameClass(a, b);\n}\nexport function equals(a, b) {\n    let result = a === b;\n    if (a !== b && (a instanceof Object) && isSameClass(a, b)) {\n        if (isArray(a)) {\n            const len = a.length;\n            let i = 0;\n            result = len === b.length;\n            if (result) {\n                for (; i < len; i += 1) {\n                    result = equals(a[i], b[i]);\n                    if (result === false) {\n                        break;\n                    }\n                }\n            }\n        }\n        else if (a.constructor.prototype.equals) {\n            result = a.equals(b);\n        }\n        else {\n            const keys = Object.keys(a);\n            let key = null;\n            result = true;\n            let i = -1;\n            const len = keys.length;\n            while (++i < len) {\n                key = keys[i];\n                result = equals(a[key], b[key]);\n                if (!result) {\n                    if (isFunction(a[key])) {\n                        result = true;\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return result;\n}\nexport function isDifferent(a, b) {\n    return !equals(a, b);\n}\nexport function shallowCopy(obj) {\n    const keys = Object.keys(obj);\n    const result = {};\n    let i = -1;\n    const len = keys.length;\n    while (++i < len) {\n        const key = keys[i];\n        result[key] = obj[key];\n    }\n    return result;\n}\nexport function clone(obj) {\n    let result;\n    if (!(obj instanceof Object)) {\n        result = obj;\n    }\n    else if (obj.constructor.prototype.clone !== undefined) {\n        result = obj.clone();\n    }\n    else if (isArray(obj)) {\n        let i = -1;\n        const len = obj.length;\n        result = new Array(len);\n        while (++i < len) {\n            result[i] = (clone(obj[i]));\n        }\n    }\n    else if (obj instanceof Date) {\n        return new Date(obj.getTime());\n    }\n    else if (obj instanceof RegExp) {\n        return new RegExp(obj);\n    }\n    else {\n        result = new obj.constructor();\n        const keys = Object.keys(obj);\n        let key = null;\n        let i = -1;\n        const len = keys.length;\n        while (++i < len) {\n            key = keys[i];\n            result[key] = clone(obj[key]);\n        }\n    }\n    return result;\n}\nexport function cloneInto(src, target) {\n    if (isArray(target)) {\n        const arrS = src;\n        const arrT = target;\n        const len = arrS.length;\n        arrT.length = len;\n        let i = -1;\n        while (++i < len) {\n            if (arrS[i] instanceof Object) {\n                cloneInto(arrS[i], arrT[i]);\n            }\n            else {\n                arrT[i] = arrS[i];\n            }\n        }\n    }\n    else {\n        const keys = Object.keys(src);\n        let key = null;\n        let i = -1;\n        const len = keys.length;\n        while (++i < len) {\n            key = keys[i];\n            const a = src[key];\n            if (a instanceof Object) {\n                let b = target[key];\n                if (b === undefined || b === null) {\n                    if (isArray(a)) {\n                        b = target[key] = [];\n                    }\n                    else {\n                        b = target[key] = {};\n                    }\n                }\n                if (isDifferent(a, b)) {\n                    cloneInto(a, b);\n                }\n            }\n            else {\n                target[key] = a;\n            }\n        }\n    }\n    return target;\n}\nexport function mixin(target = {}, exclude, ...sources) {\n    const result = target, len = sources ? sources.length : 0;\n    let i = 0;\n    for (; i < len; i++) {\n        let src = sources[i];\n        if (isFunction(src)) {\n            src = src.prototype;\n        }\n        if (src === undefined) {\n            continue;\n        }\n        const keys = Object.keys(src);\n        let key = null;\n        if (exclude) {\n            let i = -1;\n            const len = keys.length;\n            while (++i < len) {\n                key = keys[i];\n                if (exclude.hasOwnProperty(key)) {\n                    continue;\n                }\n                target[key] = src[key];\n            }\n        }\n        else {\n            let i = -1;\n            const len = keys.length;\n            while (++i < len) {\n                key = keys[i];\n                target[key] = src[key];\n            }\n        }\n    }\n    return result;\n}\nexport function setProperties(target, values, mapping) {\n    const keys = Object.keys(values);\n    let key;\n    let value;\n    let i = -1;\n    const len = keys.length;\n    while (++i < len) {\n        key = keys[i];\n        value = values[key];\n        if (mapping && key in mapping) {\n            key = mapping[key];\n        }\n        if (key in target) {\n            target[key] = values[keys[i]];\n        }\n    }\n}\n//# sourceMappingURL=Obj.js.map","import { clone, setProperties } from \"./Obj\";\nimport { isArray, isNullOrUndefined, isNumber, isUndefined, isNotUndefined } from \"./Test\";\nclass ArrayState {\n}\nexport function flatten(src) {\n    return flattenInner(src);\n}\nfunction flattenInner(src, result = []) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        if (isArray(src[i])) {\n            flattenInner(src[i], result);\n        }\n        else {\n            result.push(src[i]);\n        }\n    }\n    return result;\n}\nexport function reverse(array) {\n    let left = null;\n    let right = null;\n    const length = isNullOrUndefined(array) ? 0 : array.length;\n    for (left = 0; left < length / 2; left += 1) {\n        right = length - 1 - left;\n        const temporary = array[left];\n        array[left] = array[right];\n        array[right] = temporary;\n    }\n    return array;\n}\nexport function concat(...arrs) {\n    const result = Array.prototype.concat.apply([], arrs);\n    return result;\n}\nexport function slice(src, from = 0, count = Infinity) {\n    let len = Math.min(isNullOrUndefined(src) ? 0 : src.length - from, count);\n    if (len < 0) {\n        len = 0;\n    }\n    let i = -1;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = src[i + from];\n    }\n    return result;\n}\nexport function splice(src, pos = 0, remove = Infinity, insert = []) {\n    if (isNullOrUndefined(src)) {\n        throw new Error(\"Unable to splice on null or undefined\");\n    }\n    let srcLen = src.length;\n    pos = Math.max(0, pos);\n    pos = Math.min(pos, srcLen);\n    remove = Math.max(0, remove);\n    remove = Math.min(remove, srcLen - pos);\n    let insertLen = insert.length;\n    let newLen = srcLen - remove + insertLen;\n    let delta = remove - insertLen;\n    if (delta < 0) {\n        src.length = newLen;\n        let i = newLen;\n        while (--i >= pos + remove) {\n            src[i] = src[i + delta];\n        }\n    }\n    let i = pos - 1;\n    while (++i < pos + insertLen) {\n        src[i] = insert[i - pos];\n    }\n    if (delta > 0) {\n        --i;\n        while (++i < srcLen - delta) {\n            src[i] = src[i + delta];\n        }\n        src.length = newLen;\n    }\n}\nexport function append(arr, values) {\n    let index = -1;\n    const offset = arr.length;\n    const length = isNullOrUndefined(values) ? 0 : values.length;\n    while (++index < length) {\n        arr[offset + index] = values[index];\n    }\n}\nexport function removeAt(arr, index) {\n    let result;\n    let len = isNullOrUndefined(arr) ? 0 : arr.length;\n    if (index >= 0 && index < len) {\n        let i = index;\n        result = arr[index];\n        while (++i < len) {\n            arr[i - 1] = arr[i];\n        }\n        arr.length -= 1;\n    }\n    return result;\n}\nexport function indexOfElement(src, el) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        if (src[i] === el) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(arr, el) {\n    const start = indexOfElement(arr, el);\n    removeAt(arr, start);\n}\nexport function indexOf(src, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        if (fn(src[i])) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function removeOneByFn(arr, fn) {\n    const start = indexOf(arr, fn);\n    removeAt(arr, start);\n}\nexport function shallowCopy(src) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = src[i];\n    }\n    return result;\n}\nexport function shallowCopyInto(src, target) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    target.length = len;\n    while (++i < len) {\n        target[i] = src[i];\n    }\n}\nexport function shallowFill(src, target, at = 0) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    if (target.length < len + at) {\n        target.length = len + at;\n    }\n    while (++i < len) {\n        target[at + i] = src[i];\n    }\n}\nexport function deepCopy(src) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = (clone(src[i]));\n    }\n    return result;\n}\nexport function deepCopyInto(src, target) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    target.length = len;\n    while (++i < len) {\n        target[i] = (clone(src[i]));\n    }\n}\nexport function deepFill(src, target, at = 0) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    if (target.length < len + at) {\n        target.length = len + at;\n    }\n    while (++i < len) {\n        target[at + i] = (clone(src[i]));\n    }\n}\nexport function filter(src, fn) {\n    const result = [];\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        const el = src[i];\n        if (fn(el, i) === true) {\n            result.push(el);\n        }\n    }\n    return result;\n}\nexport function filterInto(src, target, fn) {\n    let i = -1;\n    let j = 0;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const space = target.length;\n    while (++i < len) {\n        const el = src[i];\n        if (fn(el, i) === true) {\n            if (j < space) {\n                target[j++] = el;\n            }\n            else {\n                ++j;\n                target.push(el);\n            }\n        }\n    }\n    target.length = j;\n}\nexport function map(src, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = fn(src[i], i);\n    }\n    return result;\n}\nexport function mapInto(src, target, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    target.length = len;\n    while (++i < len) {\n        target[i] = fn(src[i], i);\n    }\n}\nexport function reduce(src, fn, start) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (++i < len) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function reduceUntil(src, fn, test, start) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (++i < len && !test(acc, src[i])) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function reverseReduce(src, fn, start) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (--i >= 0) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function reverseReduceUntil(src, fn, test, start) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (--i >= 0 && !test(acc, src[i])) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function forEach(src, fn, startIndex = 0) {\n    let i = startIndex - 1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        fn(src[i], i);\n    }\n}\nexport function forSome(src, filter, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        const el = src[i];\n        if (filter(el, i)) {\n            fn(el, i);\n        }\n    }\n}\nexport function until(src, fnOrTest, fn, startIndex) {\n    let isCombined = isUndefined(fn) || isNumber(fn);\n    startIndex = isCombined ? fn : startIndex;\n    let i = isUndefined(startIndex) || startIndex < 0 ? -1 : startIndex - 1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len && (isCombined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\n    }\n}\nexport function reverseForEach(src, fn) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    while (--i >= 0) {\n        fn(src[i], i);\n    }\n}\nexport function reverseUntil(src, fnOrTest, fn) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    let combined = isUndefined(fn);\n    while (--i >= 0 && (combined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\n    }\n}\nexport function some(src, fn) {\n    let result = false;\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len && !(result = fn(src[i]))) {\n    }\n    return result;\n}\nexport function all(src, fn) {\n    let result = true;\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len && (result = fn(src[i]))) {\n    }\n    return result;\n}\nexport function insertAt(src, pos, v) {\n    if (isNullOrUndefined(src)) {\n        throw new Error(\"Unable to insertAt on null or undefined\");\n    }\n    if (pos === 0) {\n        src.unshift(v);\n    }\n    else if (pos > 0) {\n        let i = src.length;\n        while (--i >= pos) {\n            src[i + 1] = src[i];\n        }\n        src[i + 1] = v;\n    }\n}\nexport function binarySearch(src, cmp, closest = false) {\n    let lo = 0, hi = isNullOrUndefined(src) ? -1 : src.length - 1, mid, element;\n    while (lo <= hi) {\n        mid = ((lo + hi) >> 1);\n        element = src[mid];\n        let val = cmp(element);\n        if (val < 0) {\n            lo = mid + 1;\n        }\n        else if (val > 0) {\n            hi = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return closest ? lo : -1;\n}\nexport function create(length, populator) {\n    if ((length || -1) < 0) {\n        length = 0;\n    }\n    let arr = new Array(length);\n    let i = -1;\n    while (++i < length) {\n        arr[i] = populator(i, arr);\n    }\n    return arr;\n}\nexport function deserialize(array, target, ...types) {\n    let [T, ...passthroughT] = types;\n    if (isNotUndefined(T)) {\n        if (isNotUndefined(T.prototype.deserialize)) {\n            mapInto(array, target, (el) => {\n                return (new T()).deserialize(el, ...passthroughT);\n            });\n        }\n        else {\n            mapInto(array, target, (el) => {\n                let newT = new T();\n                setProperties(newT, el);\n                return newT;\n            });\n        }\n    }\n    else {\n        deepCopyInto(array, target);\n    }\n    return this;\n}\n//# sourceMappingURL=Arr.js.map","import { shallowCopy, create, insertAt, concat, forEach, append, deepCopy, deepCopyInto, shallowCopyInto, remove, removeAt, forSome, until, reverseForEach, indexOfElement, map, reverseUntil, some, all, reverse, indexOf, filterInto, slice, splice, filter, mapInto, reduce, reduceUntil, reverseReduce, reverseReduceUntil, deserialize } from \"../Arr\";\nimport { clone, equals, wipe } from \"../Obj\";\nimport { isArray, isFunction, isNotNullOrUndefined, hasWindow } from \"../Test\";\nif (hasWindow() && !window.Symbol) {\n    window.Symbol = { iterator: \"iterator\" };\n}\nexport class List {\n    constructor(arr) {\n        this._array = [];\n        this._index = Object.create(null);\n        this._indexer = null;\n        this._pointer = 0;\n        if (arr === undefined) {\n            this._array = new Array();\n        }\n        else {\n            if (arr instanceof (List)) {\n                this._array = shallowCopy(arr._array);\n            }\n            else {\n                this._array = shallowCopy(arr);\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    next(value) {\n        return {\n            done: this._pointer >= this.length,\n            value: this._pointer < this.length ? this._array[this._pointer++] : (this._pointer = 0, undefined)\n        };\n    }\n    create(arr) {\n        return new (this.constructor)(arr);\n    }\n    get values() {\n        return this._array;\n    }\n    get(pos) {\n        return this._array[pos];\n    }\n    getByIndex(key) {\n        let result;\n        return isNotNullOrUndefined(this._index) ? this._index[key] : undefined;\n    }\n    set(pos, v) {\n        if (pos >= 0 && pos < this.length) {\n            this._array[pos | 0] = v;\n            if (this._indexer !== null) {\n                this._index[this._indexer(v)] = v;\n            }\n        }\n        else {\n            throw new Error(`index out of bounds on <List>.set(${pos}, ${v.toString()})`);\n        }\n        return this;\n    }\n    get count() {\n        return this._array.length;\n    }\n    get length() {\n        return this._array.length;\n    }\n    get indexer() {\n        return this._indexer;\n    }\n    set indexer(fn) {\n        this._indexer = fn;\n        this._reindex();\n    }\n    _reindex() {\n        if (this._indexer === null) {\n            this._index = null;\n        }\n        else {\n            if (this._index === null) {\n                this._index = Object.create(null);\n            }\n            else {\n                wipe(this._index);\n            }\n            this.forEach((el) => this._index[this._indexer(el)] = el);\n        }\n    }\n    truncate(size = 0) {\n        if (size < 0) {\n            let arr = this._array;\n            let len = arr.length;\n            size = Math.min(len, -1 * size);\n            let i = len - size - 1;\n            let j = -1;\n            while (++i < len) {\n                arr[++j] = arr[i];\n            }\n        }\n        this._array.length = Math.max(0, Math.min(this._array.length, size));\n        this._reindex();\n        return this;\n    }\n    fill(size, populator) {\n        size = Math.max(0, size || 0);\n        if (isFunction(populator)) {\n            this._array = create(size, populator);\n        }\n        else if (!(populator instanceof Object)) {\n            this._array = create(size, () => populator);\n        }\n        else {\n            this._array = create(size, () => clone(populator));\n        }\n        this._reindex();\n        return this;\n    }\n    clear() {\n        this._array.length = 0;\n        if (this._index !== null) {\n            wipe(this._index);\n        }\n        return this;\n    }\n    add(v) {\n        this._array.push(v);\n        if (this._indexer !== null) {\n            this._index[this._indexer(v)] = v;\n        }\n        return this;\n    }\n    insertAt(pos, v) {\n        insertAt(this._array, pos, v);\n        if (this._indexer !== null) {\n            this._index[this._indexer(v)] = v;\n        }\n        return this;\n    }\n    push(v) {\n        if (this._indexer !== null) {\n            this._index[this._indexer(v)] = v;\n        }\n        return this._array.push(v);\n    }\n    pop() {\n        let result = this._array.pop();\n        if (result !== undefined && this._indexer !== null) {\n            delete this._index[this._indexer(result)];\n        }\n        return result;\n    }\n    shift() {\n        let result = this._array.shift();\n        if (result !== undefined && this._indexer !== null) {\n            delete this._index[this._indexer(result)];\n        }\n        return result;\n    }\n    concat(v) {\n        let arr;\n        let arr2 = v instanceof List ? v.values : v;\n        arr = concat(this._array, arr2);\n        return this.create(arr);\n    }\n    index(arr) {\n        if (this._indexer !== null) {\n            forEach(arr, (el) => {\n                this._index[this._indexer(el)] = el;\n            });\n        }\n    }\n    unindexEl(el) {\n        if (this._indexer !== null) {\n            delete this._index[this._indexer(el)];\n        }\n    }\n    append(v) {\n        let arr2 = v instanceof List ? v.values : v;\n        append(this._array, arr2);\n        this.index(arr2);\n        return this;\n    }\n    copy(src) {\n        let arr2 = src instanceof List ? src.values : src;\n        deepCopyInto(arr2, this._array);\n        this.index(arr2);\n        return this;\n    }\n    shallowCopy(src) {\n        let arr2 = src instanceof List ? src.values : src;\n        shallowCopyInto(arr2, this._array);\n        this.index(arr2);\n        return this;\n    }\n    clone() {\n        const arr = deepCopy(this._array);\n        let result = this.create(arr);\n        if (this._indexer !== null) {\n            result._indexer = this._indexer;\n            result._index = clone(this._index);\n        }\n        return result;\n    }\n    remove(v) {\n        remove(this._array, v);\n        this.unindexEl(v);\n        return this;\n    }\n    removeFirst(fn) {\n        let result = this.removeAt(this.indexOf(fn));\n        this.unindexEl(result);\n        return result;\n    }\n    removeAt(n) {\n        let result = removeAt(this._array, n);\n        this.unindexEl(result);\n        return result;\n    }\n    forEach(fn, startIndex = 0) {\n        forEach(this._array, fn, startIndex);\n        return this;\n    }\n    forSome(filter, fn) {\n        forSome(this._array, filter, fn);\n        return this;\n    }\n    until(fnOrTest, fn, startIndex) {\n        until(this._array, fnOrTest, fn, startIndex);\n        return this;\n    }\n    reverseForEach(fn) {\n        reverseForEach(this._array, fn);\n        return this;\n    }\n    reverseUntil(fnOrTest, fn) {\n        reverseUntil(this._array, fnOrTest, fn);\n        return this;\n    }\n    some(fn) {\n        return some(this._array, fn);\n    }\n    all(fn) {\n        return all(this._array, fn);\n    }\n    indexOf(v) {\n        let result = -1;\n        if (isFunction(v)) {\n            result = indexOf(this._array, v);\n        }\n        else {\n            result = indexOfElement(this._array, v);\n        }\n        return result;\n    }\n    contains(v) {\n        let result = false;\n        if (isFunction(v)) {\n            result = this.find(v) !== undefined;\n        }\n        else {\n            if (this._indexer !== null) {\n                result = this._index[this._indexer(v)] !== undefined;\n            }\n            else {\n                result = indexOfElement(this._array, v) !== -1;\n            }\n        }\n        return result;\n    }\n    reverse() {\n        reverse(this._array);\n        return this;\n    }\n    first(fn) {\n        let index = -1;\n        let result;\n        if (fn === undefined) {\n            index = 0;\n        }\n        else {\n            index = indexOf(this._array, fn);\n        }\n        return index === -1 ? undefined : this.get(index);\n    }\n    find(fn) {\n        return this.first(fn);\n    }\n    last() {\n        return this.length === 0 ? undefined : this.get(this.length - 1);\n    }\n    filter(fn) {\n        return this.create(filter(this._array, fn));\n    }\n    select(fn) {\n        return this.create(filter(this._array, fn));\n    }\n    selectInto(src, fn) {\n        let arr = src instanceof List ? src.values : src;\n        filterInto(arr, this._array, fn);\n        this.index(arr);\n        return this;\n    }\n    head(count = 1) {\n        count = Math.max(0, count);\n        return this.create(slice(this._array, 0, count));\n    }\n    tail(count = 1) {\n        count = Math.min(this._array.length, count);\n        return this.create(slice(this._array, Math.max(0, this._array.length - count)));\n    }\n    splice(pos = 0, remove = Infinity, insert = []) {\n        splice(this._array, pos, remove, isArray(insert) ? insert : insert.values);\n        this._reindex();\n        return this;\n    }\n    orderBy(fn) {\n        this._array.sort(fn);\n        return this;\n    }\n    map(fn) {\n        return this.create(map(this._array, fn));\n    }\n    mapInto(src, fn) {\n        let arr = src instanceof List ? src.values : src;\n        mapInto(arr, this._array, fn);\n        this._reindex();\n        return this;\n    }\n    reduce(fn, start) {\n        return reduce(this._array, fn, start);\n    }\n    reduceUntil(fn, test, start) {\n        return reduceUntil(this._array, fn, test, start);\n    }\n    reverseReduce(fn, start) {\n        return reverseReduce(this._array, fn, start);\n    }\n    reverseReduceUntil(fn, test, start) {\n        return reverseReduceUntil(this._array, fn, test, start);\n    }\n    equals(b) {\n        const result = equals(this._array, b.values);\n        return result;\n    }\n    same(b) {\n        let a = this;\n        let count = 0;\n        if (a.length === b.length) {\n            if (a.indexer !== null) {\n                b.until((el) => !a.contains(el), (el, i) => ++count);\n            }\n            else {\n                a.until((el) => !b.contains(el), (el, i) => ++count);\n            }\n        }\n        return count === a.length;\n    }\n    intersect(b) {\n        let result = this.create();\n        let long;\n        let short;\n        result.indexer = this.indexer;\n        if (this.length < b.length) {\n            short = this, long = b;\n        }\n        else {\n            long = this, short = b;\n        }\n        if (long.indexer !== null) {\n            short.forEach((el) => {\n                if (long.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        else {\n            long.forEach((el) => {\n                if (short.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        return result;\n    }\n    union(b) {\n        let result = this.create();\n        let long;\n        let short;\n        result.indexer = this.indexer;\n        if (this.length < b.length) {\n            short = this, long = b;\n        }\n        else {\n            long = this, short = b;\n        }\n        if (long.indexer !== null) {\n            result = long.clone();\n            short.forEach((el) => {\n                if (!long.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        else {\n            result = short.clone();\n            long.forEach((el) => {\n                if (!short.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        return result;\n    }\n    subtract(b) {\n        let result = this.create();\n        result.indexer = this.indexer;\n        result = this.select((el) => !b.contains(el));\n        return result;\n    }\n    zip(list, fn = (t, u) => [t, u]) {\n        let result = this.create();\n        let length = list.length;\n        this.until(function (el, i) {\n            return i >= length;\n        }, function (el, i) {\n            result.push(fn(el, list.get(i)));\n        });\n        return result;\n    }\n    unzip(fn = (el) => [el[0], el[1]]) {\n        let result = [this.create(), this.create()];\n        this.forEach(function (el) {\n            let tuple = fn(el);\n            result[0].push(tuple[0]);\n            result[1].push(tuple[1]);\n        });\n        return result;\n    }\n    flatten(maxDepth = Infinity) {\n        return this.create(maxDepth < 1 ? this.values : this._flattenInner(this.values, maxDepth));\n    }\n    _flattenInner(src, maxDepth, depth = -1, result = []) {\n        let i = -1;\n        const len = src.length;\n        if (++depth > maxDepth) {\n            result.push(src);\n        }\n        else {\n            while (++i < len) {\n                if (isArray(src[i])) {\n                    this._flattenInner(src[i], maxDepth, depth, result);\n                }\n                else if (src[i] instanceof List) {\n                    this._flattenInner(src[i].values, maxDepth, depth, result);\n                }\n                else {\n                    result.push(src[i]);\n                }\n            }\n        }\n        return result;\n    }\n    toJSON() {\n        return this.values;\n    }\n    serialize() {\n        return this.values.map((el) => isFunction(el.serialize) ? el.serialize() : el);\n    }\n    deserialize(array, ...types) {\n        deserialize(array, this._array, ...types);\n        return this;\n    }\n}\n//# sourceMappingURL=List.js.map","import { binarySearch } from \"../Arr\";\nimport { equals } from \"../Obj\";\nimport { isFunction, hasWindow } from \"../Test\";\nimport { List } from \"./List\";\nif (hasWindow() && !window.Symbol) {\n    window.Symbol = { iterator: \"iterator\" };\n}\nexport class Comparer {\n}\nComparer.StringAsc = function (a, b) { return a < b ? -1 : a === b ? 0 : 1; };\nComparer.StringDesc = function (a, b) { return a < b ? 1 : a === b ? 0 : -1; };\nComparer.NumberAsc = function (a, b) { return a < b ? -1 : a === b ? 0 : 1; };\nComparer.NumberDesc = function (a, b) { return a < b ? 1 : a === b ? 0 : -1; };\nexport class SortedList {\n    constructor(comparer = ((a, b) => a < b ? -1 : a === b ? 0 : 1), arr) {\n        this._list = new List();\n        this._pointer = 0;\n        this._cmp = comparer;\n        if (arr === undefined) {\n            this._list = new List();\n        }\n        else {\n            if (arr instanceof (List) || arr instanceof (SortedList)) {\n                this.copy(arr.values);\n            }\n            else {\n                this.copy(arr);\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    next(value) {\n        return {\n            done: this._pointer >= this.length,\n            value: this._pointer < this.length ? this.values[this._pointer++] : (this._pointer = 0, undefined)\n        };\n    }\n    create(comparer, arr) {\n        return new (this.constructor)(comparer, arr);\n    }\n    get values() {\n        return this._list.values;\n    }\n    get(pos) {\n        return this._list.get(pos);\n    }\n    get count() {\n        return this._list.length;\n    }\n    get length() {\n        return this._list.length;\n    }\n    get comparer() {\n        return this._cmp;\n    }\n    set comparer(v) {\n        this._cmp = v;\n        this.sort();\n    }\n    sort() {\n        this._list.orderBy(this._cmp);\n    }\n    truncate(size = 0) {\n        this._list.truncate(size);\n        return this;\n    }\n    fill(size, populator) {\n        this._list.fill(size, populator);\n        this.sort();\n        return this;\n    }\n    clear() {\n        this._list.clear();\n        return this;\n    }\n    add(v) {\n        let index = this.getInsertIndex(v);\n        this._list.insertAt(index, v);\n        return this;\n    }\n    pop() {\n        return this._list.pop();\n    }\n    shift() {\n        return this._list.shift();\n    }\n    bulkAdd(v) {\n        if (v instanceof List || v instanceof SortedList) {\n            this._list.append(v.values);\n        }\n        else {\n            this._list.append(v);\n        }\n        this.sort();\n        return this;\n    }\n    copy(src) {\n        if (src instanceof List || src instanceof SortedList) {\n            this._list.copy(src.values);\n        }\n        else {\n            this._list.copy(src);\n        }\n        this.sort();\n        return this;\n    }\n    clone() {\n        return this.create(this._cmp, this._list.clone());\n    }\n    remove(v) {\n        let index = this.indexOf(v);\n        if (index !== -1) {\n            this._list.removeAt(index);\n        }\n        return this;\n    }\n    removeAt(n) {\n        return this._list.removeAt(n);\n    }\n    removeFirst(fn) {\n        return this._list.removeFirst(fn);\n    }\n    forEach(fn, startIndex = 0) {\n        this._list.forEach(fn, startIndex);\n        return this;\n    }\n    forSome(filter, fn) {\n        this._list.forSome(filter, fn);\n        return this;\n    }\n    until(fnOrTest, fn, startIndex) {\n        this._list.until(fnOrTest, fn, startIndex);\n        return this;\n    }\n    reverseForEach(fn) {\n        this._list.reverseForEach(fn);\n        return this;\n    }\n    reverseUntil(fnOrTest, fn) {\n        this._list.reverseUntil(fnOrTest, fn);\n        return this;\n    }\n    some(fn) {\n        return this._list.some(fn);\n    }\n    all(fn) {\n        return this._list.all(fn);\n    }\n    getInsertIndex(v) {\n        return binarySearch(this._list.values, (el) => this._cmp(el, v), true);\n    }\n    indexOf(v) {\n        let result = -1;\n        if (v instanceof Function) {\n            result = this._list.indexOf(v);\n        }\n        else {\n            result = binarySearch(this._list.values, (el) => this._cmp(el, v), false);\n        }\n        return result;\n    }\n    contains(v) {\n        return this.indexOf(v) !== -1;\n    }\n    first(fn) {\n        return this._list.first(fn);\n    }\n    find(fn) {\n        return this._list.find(fn);\n    }\n    last() {\n        return this._list.last();\n    }\n    filter(fn) {\n        return this.create(this._cmp, this._list.filter(fn));\n    }\n    select(fn) {\n        return this.create(this._cmp, this._list.filter(fn));\n    }\n    selectInto(src, fn) {\n        if (src instanceof List || src instanceof SortedList) {\n            this._list.selectInto(src.values, fn);\n        }\n        else {\n            this._list.selectInto(src, fn);\n        }\n        this.sort();\n        return this;\n    }\n    head(count = 1) {\n        return this.create(this.comparer, this._list.head(count));\n    }\n    tail(count = 1) {\n        return this.create(this.comparer, this._list.tail(count));\n    }\n    map(fn) {\n        return this._list.map(fn);\n    }\n    mapInto(src, fn) {\n        if (src instanceof List || src instanceof SortedList) {\n            this._list.mapInto(src.values, fn);\n        }\n        else {\n            this._list.mapInto(src, fn);\n        }\n        this.sort();\n        return this;\n    }\n    reduce(fn, start) {\n        return this._list.reduce(fn, start);\n    }\n    reduceUntil(fn, test, start) {\n        return this._list.reduceUntil(fn, test, start);\n    }\n    reverseReduce(fn, start) {\n        return this._list.reverseReduce(fn, start);\n    }\n    reverseReduceUntil(fn, test, start) {\n        return this._list.reverseReduceUntil(fn, test, start);\n    }\n    equals(b) {\n        const result = equals(this._list.values, b.values);\n        return result;\n    }\n    same(b) {\n        return this.equals(b);\n    }\n    intersect(b) {\n        let result = this.create(this.comparer);\n        let long;\n        let short;\n        if (this.length > 0 && b.length > 0) {\n            if (this.length < b.length) {\n                short = this, long = b;\n            }\n            else {\n                long = this, short = b;\n            }\n            if (b instanceof SortedList && this.comparer === b.comparer) {\n                let longPos = long.getInsertIndex(short.get(0)) - 1;\n                let lastPos = long.getInsertIndex(short.last()) - 1;\n                let i = -1;\n                let shortLen = short.length;\n                while (longPos < lastPos && ++i < shortLen) {\n                    let el = short.get(i);\n                    let aVsB;\n                    while (++longPos < lastPos && (aVsB = this.comparer(long.get(longPos), el)) < 0) {\n                        void (0);\n                    }\n                    if (longPos < lastPos && aVsB === 0) {\n                        result.add(el);\n                    }\n                }\n            }\n            else if (long instanceof SortedList || (long instanceof List && long.indexer !== null)) {\n                short.forEach((el) => {\n                    if (long.contains(el)) {\n                        result.add(el);\n                    }\n                });\n            }\n            else {\n                result = result.bulkAdd(short.toList().intersect(long));\n            }\n        }\n        return result;\n    }\n    union(b) {\n        let result;\n        let long;\n        let short;\n        if (this.length > 0 || b.length > 0) {\n            if (this.length < b.length) {\n                short = this, long = b;\n            }\n            else {\n                long = this, short = b;\n            }\n            if (b instanceof SortedList && this.comparer === b.comparer) {\n                result = this.create(this.comparer, long.values);\n                let longPos = long.getInsertIndex(short.get(0)) - 1;\n                let lastPos = long.getInsertIndex(short.last()) - 1;\n                let i = -1;\n                let shortLen = short.length;\n                while (++i < shortLen && longPos < lastPos) {\n                    let el = short.get(i);\n                    let aVsB = -1;\n                    while (++longPos < lastPos && (aVsB = this.comparer(long.get(longPos), el)) < 0) {\n                        void (0);\n                    }\n                    if ((aVsB > 0 && longPos < lastPos) || longPos === lastPos) {\n                        result.add(el);\n                    }\n                }\n                if (i < shortLen) {\n                    --i;\n                    while (++i < shortLen) {\n                        result.add(short.get(i));\n                    }\n                }\n            }\n            else if (long instanceof SortedList || (long instanceof List && long.indexer !== null)) {\n                result = this.create(this.comparer, long.values);\n                short.forEach((el) => {\n                    if (!long.contains(el)) {\n                        result.add(el);\n                    }\n                });\n            }\n            else {\n                result = this.create(this.comparer, short.toList().union(long));\n            }\n        }\n        else {\n            result = this.create(this.comparer);\n        }\n        return result;\n    }\n    toList() {\n        return new List(this.values);\n    }\n    toJSON() {\n        return this.values;\n    }\n    serialize() {\n        return this.values.map((el) => isFunction(el.serialize) ? el.serialize() : el);\n    }\n    deserialize(array, ...types) {\n        this._list.deserialize(array, ...types);\n        this.sort();\n        return this;\n    }\n}\n//# sourceMappingURL=SortedList.js.map","import { forEach } from \"../Arr\";\nimport { clone, setProperties, wipe } from \"../Obj\";\nimport { isFunction, isNotUndefined } from \"../Test\";\nexport class Dictionary {\n    constructor() {\n        this._lookup = Object.create(null);\n        this._list = new Array();\n        this._isDirty = false;\n    }\n    create() {\n        return new (this.constructor)();\n    }\n    has(key) {\n        return this._lookup[key] !== undefined;\n    }\n    contains(key) {\n        return this.has(key);\n    }\n    get(key) {\n        return this._lookup[key];\n    }\n    set(key, value) {\n        this._isDirty = this._isDirty || this.has(key);\n        if (value !== undefined) {\n            this._lookup[key] = value;\n            if (!this._isDirty) {\n                this._list.push(value);\n            }\n        }\n        return this;\n    }\n    delete(key) {\n        if (this.has(key)) {\n            delete this._lookup[key];\n            this._isDirty = true;\n        }\n        return this;\n    }\n    clear() {\n        wipe(this._lookup);\n        this._list.length = 0;\n        return this;\n    }\n    get values() {\n        this.cleanList();\n        return this._list;\n    }\n    get keys() {\n        return Object.keys(this._lookup);\n    }\n    get count() {\n        let result = 0;\n        if (this._isDirty) {\n            result = this.keys.length;\n        }\n        else {\n            result = this._list.length;\n        }\n        return result;\n    }\n    cleanList() {\n        if (this._isDirty) {\n            this.reCreateList();\n        }\n    }\n    reCreateList() {\n        let lookup = this._lookup;\n        let keys = Object.keys(this._lookup);\n        let i = -1;\n        let list = this._list;\n        list.length = 0;\n        while (++i < keys.length) {\n            list.push(lookup[keys[i]]);\n        }\n    }\n    clone() {\n        let result = this.create();\n        result._isDirty = this._isDirty;\n        result._list = clone(this._list);\n        result._lookup = clone(this._lookup);\n        return result;\n    }\n    toJSON() {\n        return this._lookup;\n    }\n    serialize() {\n        let obj = Object.create(null);\n        forEach(this.keys, (key) => {\n            let v = this.get(key);\n            obj[key] = isFunction(v.serialize) ? v.serialize() : v;\n        });\n        return obj;\n    }\n    deserialize(obj, ...types) {\n        let [T, ...passthroughT] = types;\n        this.clear();\n        if (isNotUndefined(T)) {\n            if (isNotUndefined(T.prototype.deserialize)) {\n                for (let key of Object.keys(obj)) {\n                    this.set(key, (new T()).deserialize(obj[key], ...passthroughT));\n                }\n            }\n            else {\n                for (let key of Object.keys(obj)) {\n                    let newT = new T();\n                    setProperties(newT, obj[key]);\n                    this.set(key, newT);\n                }\n            }\n        }\n        else {\n            for (let key of Object.keys(obj)) {\n                this.set(key, obj[key]);\n            }\n        }\n        return this;\n    }\n}\n//# sourceMappingURL=Dictionary.js.map","class TimerState {\n}\nTimerState._hasPerformance = typeof (performance) !== \"undefined\";\nexport class Timer {\n    static get time() {\n        return TimerState._time;\n    }\n    static now() {\n        if (TimerState._hasPerformance) {\n            return performance.now();\n        }\n        else {\n            const hrTime = process.hrtime();\n            return hrTime[0] * 1000 + (hrTime[1] / 1e6);\n        }\n    }\n    static start() {\n        const now = Timer.now();\n        TimerState._start = TimerState._last = now;\n        return TimerState._time = 0;\n    }\n    static stop() {\n        const start = TimerState._start;\n        const now = Timer.now();\n        TimerState._last = now;\n        return TimerState._time = now - start;\n    }\n}\n//# sourceMappingURL=Timer.js.map","import { Global } from \"./Global\";\nimport { hasConsole, hasWindow, isNotUndefined } from \"./Test\";\nimport { Timer } from \"./Timer\";\nclass LoggableCounter {\n    constructor(name = \"\") {\n        this.name = \"\";\n        this._value = 0;\n        this.name = name;\n    }\n    log() {\n        console.log(\"Counter \" + this.name + \": \" + this.toString());\n    }\n    inc() {\n        this._value++;\n        return this;\n    }\n    reset() {\n        this._value = 0;\n        return this;\n    }\n    valueOf() {\n        return this._value;\n    }\n    toString() {\n        return this._value.toString();\n    }\n}\nclass UtilState {\n}\nUtilState._int = { \"0\": 0 };\nUtilState._counter = { \"\": new LoggableCounter(\"\") };\nexport function init(win) {\n    if (win !== undefined) {\n        Global.window = win;\n    }\n}\nexport function getFunctionName(fn) {\n    let result;\n    if (fn.hasOwnProperty(\"name\") !== undefined) {\n        result = fn.name;\n    }\n    else {\n        const fnString = fn.toString();\n        result = fnString.substring(9, fnString.indexOf(\"(\"));\n    }\n    return result;\n}\nexport function getFunctionCode(fn) {\n    let result;\n    const fnString = fn.toString();\n    result = fnString.substring(fnString.indexOf(\"{\") + 1, fnString.lastIndexOf(\"}\"));\n    return result;\n}\nexport function newUUID() {\n    let d = new Date().getTime();\n    d += Timer.now();\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n        const r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n}\nexport function newInt(key = 0) {\n    if (UtilState._int[key] === undefined) {\n        UtilState._int[key] = 0;\n    }\n    return UtilState._int[key]++;\n}\nexport function counter(key = \"\") {\n    if (UtilState._counter[key] === undefined) {\n        UtilState._counter[key] = new LoggableCounter(key.toString());\n    }\n    return UtilState._counter[key];\n}\nexport function count(key = \"\") {\n    return counter(key).inc();\n}\nexport function callDebugger() {\n    debugger;\n}\nexport function pipeOut(log, warn, error) {\n    if (hasConsole()) {\n        proxyFn(console, \"log\", function (superfn, ...args) { superfn(...args); log(...args); });\n        proxyFn(console, \"warn\", function (superfn, ...args) { superfn(...args); warn(...args); });\n        proxyFn(console, \"error\", function (superfn, ...args) { superfn(...args); error(...args); });\n    }\n    else {\n        const console = {\n            log,\n            warn,\n            error\n        };\n        if (!(hasWindow())) {\n            Global.window = {};\n        }\n        Global.window.console = console;\n    }\n}\nexport function assert(assertion, message, isDebug = true) {\n    let result = true;\n    if (!assertion) {\n        if (hasConsole) {\n            result = false;\n            console.error(\"Assertion failed: \" + message);\n        }\n        if (isDebug) {\n            callDebugger();\n        }\n    }\n    return result;\n}\nexport function proxyFn(objOrClass, fnName, proxyFn) {\n    objOrClass = isNotUndefined(objOrClass.prototype) ? objOrClass.prototype : objOrClass;\n    const fn = objOrClass[fnName];\n    const _superFn = function (...args) {\n        if (args.length !== 0) {\n            return fn.apply(this || objOrClass, args);\n        }\n        else {\n            return fn.call(this || objOrClass);\n        }\n    };\n    objOrClass[fnName] = proxyFn.bind(objOrClass, _superFn);\n}\nexport function loop(count, fn) {\n    let i = -1;\n    while (++i < count) {\n        fn(i);\n    }\n}\nexport function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n}\n//# sourceMappingURL=Util.js.map","import { Global } from \"./Global\";\nexport var Sides;\n(function (Sides) {\n    Sides[Sides[\"Top\"] = 0] = \"Top\";\n    Sides[Sides[\"Bottom\"] = 1] = \"Bottom\";\n    Sides[Sides[\"Left\"] = 2] = \"Left\";\n    Sides[Sides[\"Right\"] = 3] = \"Right\";\n})(Sides || (Sides = {}));\nclass DomState {\n}\nDomState.Sides = Sides;\nDomState._window = Global.window;\nDomState._document = Global.window ? Global.window.document : undefined;\nDomState._el = Global.window ? Global.window.document.createElement(\"div\") : undefined;\nexport function init(win) {\n    Global.window = win;\n    DomState._window = Global.window;\n    DomState._document = DomState._window.document;\n    DomState._el = DomState._document.createElement(\"div\");\n}\nexport function toArray(a) {\n    return Array.prototype.slice.call(a);\n}\nexport function create(html, attr) {\n    let result, keys, i, k, styles, styleKeys;\n    DomState._el.innerHTML = html;\n    result = DomState._el.children[0];\n    setAttr(result, attr);\n    clear(DomState._el);\n    return result;\n}\nexport function outerHTML(el) {\n    DomState._el.appendChild(el);\n    const result = DomState._el.innerHTML;\n    clear(DomState._el);\n    return result;\n}\nexport function setAttr(_el, attr) {\n    let el;\n    if (typeof (_el) === \"string\") {\n        el = get(_el);\n    }\n    else {\n        el = _el;\n    }\n    let keys, i, k, styles, styleKeys, style;\n    if (attr !== undefined && typeof (attr) === \"object\") {\n        keys = Object.keys(attr);\n        for (i = 0; i < keys.length; i++) {\n            if (keys[i] === \"style\") {\n                styles = attr[keys[i]];\n                styleKeys = Object.keys(styles);\n                for (k = 0; k < styleKeys.length; k++) {\n                    style = styles[styleKeys[k]];\n                    if (typeof (style) === \"string\") {\n                        el.style.setProperty(styleKeys[k], style);\n                    }\n                    else {\n                        el.style.setProperty(styleKeys[k], style[0], style[1]);\n                    }\n                }\n            }\n            else if (keys[i] === \"classes\" && attr[keys[i]] !== undefined && attr[keys[i]].join) {\n                el.setAttribute(\"className\", attr[keys[i]].join(\" \"));\n            }\n            else {\n                el.setAttribute(keys[i], attr[keys[i]]);\n            }\n        }\n    }\n}\nexport function remove(element) {\n    return element.parentNode === undefined ? null : element.parentNode.removeChild(element);\n}\nexport function replace(src, target) {\n    let result = target;\n    if (src.parentNode) {\n        src.parentNode.replaceChild(target, src);\n    }\n    return result;\n}\nexport function clear(element) {\n    let i = element.children.length;\n    while (i--) {\n        element.removeChild(element.children[i]);\n    }\n}\nexport function get(id) {\n    let result = DomState._document.getElementById(id);\n    if (result === null) {\n        switch (id) {\n            default:\n                result = DomState._document.body;\n                break;\n        }\n    }\n    return result;\n}\nexport function find(selector) {\n    return DomState._document.querySelector(selector);\n}\nexport function findAll(selector, root) {\n    return toArray((root || DomState._document).querySelectorAll(selector));\n}\nexport function children(root, selector) {\n    const children = toArray((root || DomState._document).children);\n    return selector === undefined ? children : children.filter(is.bind(this, selector));\n}\nexport function findParent(root, selector) {\n    let result = root.parentElement;\n    while (result) {\n        if (is(selector, result)) {\n            break;\n        }\n        result = result.parentElement;\n    }\n    return result;\n}\nexport function position(el, x, y) {\n    el.style.top = y + \"px\";\n    el.style.left = x + \"px\";\n}\nexport function is(selector, element) {\n    let result = false;\n    if (element.matches) {\n        result = element.matches(selector);\n    }\n    else if (element.msMatchesSelector) {\n        result = element.msMatchesSelector(selector);\n    }\n    else if (element.webkitMatchesSelector) {\n        result = element.webkitMatchesSelector(selector);\n    }\n    else {\n        if (element.parentElement === null) {\n            throw new Error(\"Element has no parent\");\n        }\n        if (element.id !== \"\") {\n            result = element.parentElement.querySelector(\"#\" + element.id) !== null;\n        }\n        else {\n            result = toArray(element.parentElement.querySelectorAll(selector)).indexOf(element) !== -1;\n        }\n    }\n    return result;\n}\nexport function setStylesExplicitly(element, ...styles) {\n    const comp = DomState._window.getComputedStyle(element);\n    for (const style of styles) {\n        element.style[style] = comp[style];\n    }\n}\n//# sourceMappingURL=Dom.js.map","export var MocDataType;\n(function (MocDataType) {\n    MocDataType[MocDataType[\"LinearInt\"] = 0] = \"LinearInt\";\n    MocDataType[MocDataType[\"RandomInt\"] = 1] = \"RandomInt\";\n    MocDataType[MocDataType[\"LinearFloat\"] = 2] = \"LinearFloat\";\n    MocDataType[MocDataType[\"RandomFloat\"] = 3] = \"RandomFloat\";\n})(MocDataType || (MocDataType = {}));\nexport const VALID_CHARS = \" ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\nexport function randomString(length = 25) {\n    let result = \"\";\n    for (let i = 0; i < length; i += 1) {\n        result += VALID_CHARS.charAt(Math.floor(Math.random() * VALID_CHARS.length));\n    }\n    return result;\n}\nexport function randomInt() {\n    return this.randomNumber() | 0;\n}\nexport function randomNumber() {\n    return Math.random() * 2147483647;\n}\nexport function numericArray(length, type = MocDataType.LinearInt) {\n    const result = new Array(length);\n    switch (type) {\n        case MocDataType.RandomInt:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = this.randomInt();\n            }\n            break;\n        case MocDataType.LinearFloat:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = i + 0.5;\n            }\n            break;\n        case MocDataType.RandomFloat:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = this.randomNumber();\n            }\n            break;\n        default:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = i;\n            }\n            break;\n    }\n    return result;\n}\nexport function stringArray(arrayLength, stringLength) {\n    const result = new Array(arrayLength);\n    let i = -1;\n    while (++i < arrayLength) {\n        result[i] = this.randomString(stringLength);\n    }\n    return result;\n}\n//# sourceMappingURL=MocData.js.map","let VERSION = \"0.2.1\";\nimport { Dictionary, Vec2, Timer, List } from \"goodcore\";\nimport { until } from \"goodcore/Arr\";\nimport { newUUID } from \"goodcore/Util\";\nimport { is, findAll } from \"goodcore/Dom\";\nexport class GoodTap {\n    constructor(rootElement) {\n        this.version = VERSION;\n        this.minSwipeDistance = 100;\n        this.maxTapDuration = 400;\n        this.defaultLongPressDuration = 400;\n        this.defaultDragResistance = 0;\n        this.dragResistanceSquared = 0;\n        this.events = [\"down\", \"drag\", \"up\", \"press\", \"tap\", \"swipe\"];\n        this.downEvents = [\"down\"];\n        this.upEvents = [\"up\", \"tap\", \"swipe\"];\n        this.longPressIntervals = new Dictionary();\n        this.eventAttr = \"\";\n        this.upEventsAndPress = [];\n        this.index = 0;\n        this.lastInsides = new List();\n        this.dragging = new List();\n        this.isListeningToMovement = false;\n        this.init(rootElement || document.body);\n        this.eventAttr = this.events.map((name) => \"[\" + name + \"]\").join(\",\");\n        this.upEventsAndPress = [...this.upEvents, \"press\"];\n    }\n    init(rootElement) {\n        if (this.hasTouchEvent()) {\n            rootElement.addEventListener(\"touchstart\", (ev) => { this.start(ev, rootElement); });\n            rootElement.addEventListener(\"touchend\", (ev) => { this.end(ev, rootElement); });\n        }\n        rootElement.addEventListener(\"mousedown\", (ev) => { this.start(ev, rootElement); });\n        rootElement.addEventListener(\"mouseup\", (ev) => { this.end(ev, rootElement); });\n        rootElement.addEventListener(\"focus\", (ev) => this.triggerOutside(ev.target, ev, rootElement), true);\n        this.root = rootElement;\n    }\n    findTarget(el) {\n        let target = null;\n        while (el && el.parentElement !== document && target === null) {\n            if (is(this.eventAttr, el)) {\n                target = el;\n            }\n            el = el.parentElement;\n        }\n        return target;\n    }\n    findTargets(el) {\n        let targets = [];\n        while (el && el.parentElement !== document) {\n            if (!el.id) {\n                el.id = newUUID();\n            }\n            if (is(this.eventAttr, el)) {\n                targets.push(el);\n            }\n            el = el.parentElement;\n        }\n        return targets;\n    }\n    getTouchPos(ev, pos) {\n        pos = pos || new Vec2(0, 0);\n        if (ev instanceof TouchEvent) {\n            pos.x = ev.changedTouches[0].pageX;\n            pos.y = ev.changedTouches[0].pageY;\n        }\n        else if (ev instanceof MouseEvent) {\n            pos.x = ev.pageX;\n            pos.y = ev.pageY;\n        }\n        return pos;\n    }\n    longPress(ev, target) {\n        let result = true;\n        let touchInfo = target.touchInfo;\n        result = this.executeAction(ev, target, \"press\", touchInfo);\n        if (result === false || target.hasAttribute(\"once\")) {\n            clearInterval(this.longPressIntervals.get(touchInfo.index));\n            this.longPressIntervals.delete(touchInfo.index);\n        }\n    }\n    triggerOutside(target, ev, rootElement) {\n        let outside = new List(findAll(\"[outside]\", this.root));\n        if (outside.length > 0) {\n            let insides = new List(this.findTargets(target));\n            let preventOutside = insides.contains((el) => el.hasAttribute(\"preventDefault\"));\n            if (!preventOutside) {\n                outside\n                    .filter((el) => this.lastInsides.contains(el) && !insides.contains(el))\n                    .forEach((el) => this.handleEvent(\"outside\", ev, el));\n                this.lastInsides = insides;\n            }\n        }\n    }\n    move(ev, rootElement, target, action) {\n        let result = true;\n        let touchInfo = target.touchInfo;\n        if (touchInfo === undefined) {\n            this.end(ev, rootElement);\n            return;\n        }\n        this.getTouchPos(ev, touchInfo.pos);\n        if (touchInfo.dragResistance === 0 ||\n            this.getTouchPos(ev).subtract(touchInfo.pos).lengthSq() < touchInfo.dragResistance) {\n            touchInfo.dragResistance = 0;\n            try {\n                if (action === \"[fn]\" && (\"drag-fn\") in target) {\n                    result = target[\"drag-fn\"](ev, target, touchInfo);\n                }\n                else {\n                    target[\"drag-fn\"] = (new Function(\"event\", \"target\", \"touch\", action)).bind(target);\n                    result = target[\"drag-fn\"](ev, target, touchInfo);\n                }\n            }\n            catch (err) {\n                throw name + \" event function error on element '\" + target.id + \"'\\n\" + err.toString();\n            }\n            if (result === false) {\n                this.end(ev, rootElement);\n            }\n        }\n    }\n    start(ev, rootElement) {\n        this.longPressIntervals.values.forEach((long) => clearInterval(long));\n        this.longPressIntervals.clear();\n        let preventDefault = false;\n        let stopPropagation = false;\n        let target = ev.target;\n        let loopCounter = 0;\n        this.triggerOutside(target, ev, rootElement);\n        while (loopCounter < 100 && (target = this.findTarget(target)) && !stopPropagation) {\n            ++loopCounter;\n            let pressInterval = null;\n            if (target.hasAttribute(\"press\")) {\n                pressInterval = setInterval(((target) => this.longPress(ev, target)).bind(this, target), parseInt(target.getAttribute(\"pressInterval\")) || this.defaultLongPressDuration);\n            }\n            let moveHandler = undefined;\n            let dragResistance = 0;\n            if (target.hasAttribute(\"drag\")) {\n                dragResistance = parseInt(target.getAttribute(\"dragResistance\"));\n                if (isNaN(dragResistance)) {\n                    dragResistance = this.defaultDragResistance;\n                }\n                dragResistance *= dragResistance;\n                let dragAction = target.getAttribute(\"drag\");\n                moveHandler = ((t, d, ev) => {\n                    this.move(ev, rootElement, t, d);\n                }).bind(this, target, dragAction);\n                if (this.hasTouchEvent()) {\n                    rootElement.addEventListener(\"touchmove\", moveHandler);\n                }\n                rootElement.addEventListener(\"mousemove\", moveHandler);\n            }\n            target.classList.add(\"gt-active\");\n            target.touchInfo = {\n                index: this.index++,\n                time: Timer.now(),\n                pos: this.getTouchPos(ev),\n                long: pressInterval,\n                moveHandler,\n                dragResistance,\n            };\n            if (target.hasAttribute(\"dragstart\")) {\n                this.handleEvent(\"dragstart\", ev, target);\n            }\n            if (pressInterval) {\n                this.longPressIntervals.set(target.touchInfo.index, target.touchInfo.long);\n            }\n            until(this.downEvents, (name) => {\n                if (target.hasAttribute(name)) {\n                    stopPropagation = (this.handleEvent(name, ev, target) === false);\n                    if (!stopPropagation && target.hasAttribute(\"stopPropagation\") || target.hasAttribute(\"gt-false\")) {\n                        stopPropagation = true;\n                        ev.stopPropagation();\n                    }\n                    if (target.hasAttribute(\"preventDefault\") || target.hasAttribute(\"gt-false\")) {\n                        ev.preventDefault();\n                        preventDefault = true;\n                    }\n                }\n                return stopPropagation;\n            });\n            target = target.parentElement;\n        }\n    }\n    isSwipe(ev, target) {\n        let pos = this.getTouchPos(ev);\n        let result = false;\n        if (\"touchInfo\" in target) {\n            let dX = pos.x - target.touchInfo.pos.x;\n            let dY = pos.y - target.touchInfo.pos.y;\n            let absDX = Math.abs(dX);\n            let absDY = Math.abs(dY);\n            let horizontal = absDX > absDY;\n            let distance = horizontal ? absDX : absDY;\n            result = distance >= this.minSwipeDistance;\n            if (result) {\n                target.touchInfo.swipeInfo = {\n                    direction: horizontal ?\n                        (dX < 0 ? \"left\" : \"right\") :\n                        (dY < 0 ? \"up\" : \"down\"),\n                    distance: distance,\n                    delta: new Vec2(dX, dY)\n                };\n            }\n        }\n        return result;\n    }\n    end(ev, rootElement) {\n        let time = Timer.now();\n        let stopPropagation = false;\n        let target = ev.target;\n        let loopCounter = 0;\n        let endedOutsideTargets = new List();\n        let originalTarget = target;\n        this.dragging.clear();\n        while (loopCounter < 100 && (target = this.findTarget(target)) && !stopPropagation) {\n            ++loopCounter;\n            let touchInfo = target.touchInfo;\n            if (touchInfo !== undefined) {\n                let duration = time - touchInfo.time;\n                until(this.upEventsAndPress, (name) => {\n                    if (target.hasAttribute(name)) {\n                        let isSwipe = this.isSwipe(ev, target);\n                        if ((name === \"swipe\" && isSwipe)\n                            || (name === \"tap\" && !isSwipe && duration < this.maxTapDuration)\n                            || (name === \"up\")) {\n                            stopPropagation = (this.handleEvent(name, ev, target) === false);\n                        }\n                        if (stopPropagation || target.hasAttribute(\"stopPropagation\") || target.hasAttribute(\"gt-false\")) {\n                            stopPropagation = true;\n                            ev.stopPropagation();\n                            delete target.touchInfo;\n                        }\n                        if (target.hasAttribute(\"preventDefault\") || target.hasAttribute(\"gt-false\")) {\n                            ev.preventDefault();\n                        }\n                    }\n                    return stopPropagation;\n                });\n            }\n            target = target.parentElement;\n        }\n        findAll(\".gt-active\").forEach((el) => {\n            el.classList.remove(\"gt-active\");\n            if (el.touchInfo !== undefined && el.touchInfo.moveHandler !== undefined) {\n                rootElement.removeEventListener(\"touchmove\", el.touchInfo.moveHandler);\n                rootElement.removeEventListener(\"mousemove\", el.touchInfo.moveHandler);\n                this.handleEvent(\"dragend\", ev, el);\n            }\n            delete el.touchInfo;\n        });\n        this.longPressIntervals.values.forEach((long) => clearInterval(long));\n        this.longPressIntervals.clear();\n    }\n    executeAction(ev, target, actionAttr, touchInfo) {\n        let result = true;\n        let action = target.getAttribute(actionAttr);\n        try {\n            if (action === \"[fn]\" && (actionAttr + \"-fn\") in target) {\n                result = target[actionAttr + \"-fn\"](ev, target, touchInfo);\n            }\n            else {\n                result = (new Function(\"event\", \"target\", \"touch\", action)).bind(target)(ev, target, touchInfo);\n            }\n        }\n        catch (err) {\n            throw name + \" event function error on element '\" + target.id + \"'\\n\" + err.toString();\n        }\n        return result;\n    }\n    handleEvent(name, ev, target) {\n        let actionAttr = name;\n        let result = true;\n        if (target) {\n            result = this.executeAction(ev, target, actionAttr, target.touchInfo);\n            if (name in this.upEvents) {\n                target.classList.remove(\"gt-active\");\n                if (this.longPressIntervals.has(target.touchInfo.index)) {\n                    clearInterval(this.longPressIntervals.get(target.touchInfo.index));\n                }\n                delete target.touchInfo;\n            }\n        }\n        return result;\n    }\n    on(element, name, fn) {\n        element.setAttribute(name, \"[fn]\");\n        element[name + \"-fn\"] = fn;\n    }\n    off(element, name) {\n        element.removeAttribute(name + \"-action\");\n        delete element[name + \"-fn\"];\n    }\n    hideKeyboard() {\n        let field = document.createElement(\"input\");\n        field.setAttribute(\"type\", \"text\");\n        document.body.appendChild(field);\n        setTimeout(function () {\n            field.focus();\n            setTimeout(function () {\n                field.setAttribute(\"style\", \"display:none;\");\n                field.parentElement.removeChild(field);\n            }, 50);\n        }, 50);\n    }\n    hasTouchEvent() {\n        return \"ontouchstart\" in document.documentElement;\n    }\n    outside() {\n        this.triggerOutside(this.root, new FocusEvent(\"\"));\n        this.hideKeyboard();\n    }\n}\nexport function init(root) {\n    return new GoodTap(root);\n}\n//# sourceMappingURL=index.js.map"],"names":["CalcConst","rotationRad","rotation","deg","DEGREE_FACTOR","ROTATION_DEGREE_PRECISION","this","rotationDeg","RADIAN_FACTOR","Math","PI","DEG360","ROTATION_LOOKUP","lookup","i","push","cos","sin","Vec2Const","EPSILON","IDENTITY","x","y","X_DIM","Y_DIM","Vec2","[object Object]","angle","horizontalAngle","direction","isZero","src","out","set","create","ceil","sqrt","lengthSq","atan2","rot","nx","ny","center","subtract","rotate","add","len","length","vectorB","scalar","target","abs","isNormalized","result","clone","normalize","temp","coeff","v","max","min","nativeWindow","win","window","_Global","_window","_nativeWindow","hasNativeWindow","Global","hasWindow","isArray","it","Array","Object","prototype","toString","call","isFunction","isNumber","areNullOrUndefined","args","a","undefined","areNotNullOrUndefined","isNullOrUndefined","arg","isNotNullOrUndefined","isUndefined","isNotUndefined","wipe","obj","keys","isSameClass","b","constructor","equals","key","Date","getTime","RegExp","setProperties","values","mapping","value","reverse","array","left","right","temporary","concat","arrs","apply","slice","from","count","Infinity","splice","pos","remove","insert","Error","srcLen","insertLen","newLen","delta","append","arr","index","offset","removeAt","indexOfElement","el","indexOf","fn","shallowCopy","shallowCopyInto","deepCopy","deepCopyInto","filter","filterInto","j","space","map","mapInto","reduce","start","acc","reduceUntil","test","reverseReduce","reverseReduceUntil","forEach","startIndex","forSome","until","fnOrTest","isCombined","reverseForEach","reverseUntil","combined","some","all","insertAt","unshift","populator","deserialize","types","T","passthroughT","newT","Symbol","iterator","List","_array","_index","_indexer","_pointer","done","indexer","_reindex","size","pop","shift","arr2","unindexEl","n","find","get","first","sort","contains","long","short","select","list","t","u","tuple","maxDepth","_flattenInner","depth","serialize","Dictionary","_lookup","_list","_isDirty","has","cleanList","reCreateList","clear","TimerState","_hasPerformance","Timer","time","_time","performance","now","hrTime","process","hrtime","_start","_last","newUUID","d","replace","c","r","random","floor","Sides","MocDataType","DomState","toArray","findAll","selector","root","_document","querySelectorAll","is","element","matches","msMatchesSelector","webkitMatchesSelector","parentElement","id","querySelector","document","_el","createElement","VERSION","GoodTap","rootElement","version","minSwipeDistance","maxTapDuration","defaultLongPressDuration","defaultDragResistance","dragResistanceSquared","events","downEvents","upEvents","longPressIntervals","eventAttr","upEventsAndPress","lastInsides","dragging","isListeningToMovement","init","body","name","join","hasTouchEvent","addEventListener","ev","end","triggerOutside","targets","TouchEvent","changedTouches","pageX","pageY","MouseEvent","touchInfo","executeAction","hasAttribute","clearInterval","delete","outside","insides","findTargets","handleEvent","action","getTouchPos","dragResistance","Function","bind","err","stopPropagation","loopCounter","findTarget","pressInterval","setInterval","longPress","parseInt","getAttribute","moveHandler","isNaN","dragAction","move","classList","preventDefault","dX","dY","absDX","absDY","horizontal","distance","swipeInfo","duration","isSwipe","removeEventListener","actionAttr","setAttribute","removeAttribute","field","appendChild","setTimeout","focus","removeChild","documentElement","FocusEvent","hideKeyboard"],"mappings":"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"}