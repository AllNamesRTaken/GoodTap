{"version":3,"file":"goodtap.es6.min.js","sources":["../node_modules/goodcore/Calc.js","../node_modules/goodcore/struct/Vec2.js","../node_modules/goodcore/Global.js","../node_modules/goodcore/Test.js","../node_modules/goodcore/Obj.js","../node_modules/goodcore/Arr.js","../node_modules/goodcore/struct/Dictionary.js","../node_modules/goodcore/struct/List.js","../node_modules/goodcore/struct/SortedList.js","../node_modules/goodcore/struct/Stack.js","../node_modules/goodcore/standard/mixins/Initable.js","../node_modules/goodcore/Timer.js","../node_modules/goodcore/Util.js","../node_modules/goodcore/struct/Tree.js","../node_modules/goodcore/Dom.js","../node_modules/goodcore/MocData.js","lib/index.js"],"sourcesContent":["export class CalcConst {\n}\nCalcConst.ROTATION_DEGREE_PRECISION = 1;\nCalcConst.RADIAN_FACTOR = (1 / 360) * (2 * Math.PI);\nCalcConst.DEGREE_FACTOR = (1 / (2 * Math.PI) * 360);\nCalcConst.DEG360 = 360 * CalcConst.ROTATION_DEGREE_PRECISION;\nCalcConst.ROTATION_LOOKUP = (function () {\n    const lookup = [];\n    for (let i = 0; i < 360 * CalcConst.ROTATION_DEGREE_PRECISION; i++) {\n        lookup.push([Math.cos(i * CalcConst.RADIAN_FACTOR), Math.sin(i * CalcConst.RADIAN_FACTOR)]);\n    }\n    return lookup;\n})();\nexport function sign(x) {\n    return typeof x === \"number\" ? x ? x < 0 ? -1 : 1 : x === x ? 0 : NaN : NaN;\n}\nexport function rotationDeg(rotation) {\n    let deg = (rotation * CalcConst.ROTATION_DEGREE_PRECISION) | 0;\n    while (deg < 0) {\n        deg += CalcConst.DEG360;\n    }\n    while (deg >= CalcConst.DEG360) {\n        deg -= CalcConst.DEG360;\n    }\n    return CalcConst.ROTATION_LOOKUP[deg];\n}\nexport function rotationRad(rotation) {\n    const deg = rotation * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\n    return this.rotationDeg(deg / CalcConst.ROTATION_DEGREE_PRECISION);\n}\nexport function closestRadianRotation(radian) {\n    let deg = radian * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\n    while (deg < 0) {\n        deg += CalcConst.DEG360;\n    }\n    while (deg >= CalcConst.DEG360) {\n        deg -= CalcConst.DEG360;\n    }\n    return deg * CalcConst.RADIAN_FACTOR / CalcConst.ROTATION_DEGREE_PRECISION;\n}\n//# sourceMappingURL=Calc.js.map","import { rotationRad } from \"../Calc\";\nexport class Vec2Const {\n}\nVec2Const.EPSILON = 1e-8;\nVec2Const.IDENTITY = { x: 1, y: 1 };\nVec2Const.X_DIM = { x: 1, y: 0 };\nVec2Const.Y_DIM = { x: 0, y: 1 };\nexport class Vec2 {\n    constructor(x = 0, y = 0) {\n        this.angle = this.horizontalAngle;\n        this.direction = this.horizontalAngle;\n        this.x = x;\n        this.y = y;\n    }\n    get isZero() {\n        return this.x === 0 && this.y === 0;\n    }\n    create(x = 0, y = 0) {\n        return new (this.constructor)(x, y);\n    }\n    set(src) {\n        this.x = src.x;\n        this.y = src.y;\n        return this;\n    }\n    clone(out) {\n        const result = out ? out.set(this) : this.create(this.x, this.y);\n        return result;\n    }\n    toInt() {\n        this.x |= 0;\n        this.y |= 0;\n        return this;\n    }\n    ceil() {\n        this.x = Math.ceil(this.x);\n        this.y = Math.ceil(this.y);\n        return this;\n    }\n    toDecimal() {\n        this.x += Vec2Const.EPSILON;\n        this.y += Vec2Const.EPSILON;\n        return this;\n    }\n    lengthSq() { return (this.x * this.x + this.y * this.y); }\n    length() { return Math.sqrt(this.lengthSq()); }\n    horizontalAngle() { return Math.atan2(this.y, this.x); }\n    rotate(angle) {\n        const rot = rotationRad(angle);\n        const nx = (this.x * rot[0]) - (this.y * rot[1]);\n        const ny = (this.x * rot[1]) + (this.y * rot[0]);\n        this.x = nx;\n        this.y = ny;\n        return this;\n    }\n    rotateAround(center, angle) {\n        return this.subtract(center).rotate(angle).add(center);\n    }\n    normalize() {\n        const len = this.length();\n        if (len === 0) {\n            this.x = 1;\n            this.y = 0;\n        }\n        else {\n            this.x = this.x / len;\n            this.y = this.y / len;\n        }\n        return this;\n    }\n    scale(vectorB) {\n        this.x = this.x * vectorB.x;\n        this.y = this.y * vectorB.y;\n        return this;\n    }\n    relate(vectorB) {\n        this.x = this.x / vectorB.x;\n        this.y = this.y / vectorB.y;\n        return this;\n    }\n    multiply(scalar) {\n        this.x = this.x * scalar;\n        this.y = this.y * scalar;\n        return this;\n    }\n    add(vectorB) {\n        this.x = this.x + vectorB.x;\n        this.y = this.y + vectorB.y;\n        return this;\n    }\n    subtract(vectorB) {\n        this.x = this.x - vectorB.x;\n        this.y = this.y - vectorB.y;\n        return this;\n    }\n    invert() {\n        this.x = -this.x;\n        this.y = -this.y;\n        return this;\n    }\n    equals(target) {\n        return this.x === target.x && this.y === target.y;\n    }\n    almostEquals(target) {\n        return Math.abs(this.x - target.x) < Vec2Const.EPSILON && Math.abs(this.y - target.y) < Vec2Const.EPSILON;\n    }\n    getNormal(isNormalized) {\n        const result = this.clone();\n        if (!isNormalized) {\n            result.set(this).normalize();\n        }\n        const temp = result.x;\n        result.x = result.y;\n        result.y = -temp;\n        return result;\n    }\n    dot(vectorB) { return (this.x * vectorB.x + this.y * vectorB.y); }\n    cross(vectorB) { return ((this.x * vectorB.y) - (this.y * vectorB.x)); }\n    projectOnto(vectorB) {\n        const coeff = ((this.x * vectorB.x) + (this.y * vectorB.y)) / ((vectorB.x * vectorB.x) + (vectorB.y * vectorB.y));\n        this.x = coeff * vectorB.x;\n        this.y = coeff * vectorB.y;\n        return this;\n    }\n    verticalAngle() { return Math.atan2(this.x, this.y); }\n    rotateBy(rotation) {\n        const angle = -this.horizontalAngle() + rotation;\n        return this.rotate(angle);\n    }\n    max(v) {\n        this.x = Math.max(this.x, v.x);\n        this.y = Math.max(this.y, v.y);\n        return this;\n    }\n    min(v) {\n        this.x = Math.min(this.x, v.x);\n        this.y = Math.min(this.y, v.y);\n        return this;\n    }\n    zero() {\n        this.x = 0;\n        this.y = 0;\n        return this;\n    }\n}\n//# sourceMappingURL=Vec2.js.map","let nativeWindow = true;\nvar win;\nif (typeof (window) === \"undefined\") {\n    win = null;\n    nativeWindow = false;\n}\nelse {\n    win = window;\n}\nexport class _Global {\n    constructor() {\n        this._window = win;\n        this._nativeWindow = nativeWindow;\n    }\n    get window() {\n        return this._window;\n    }\n    set window(v) {\n        this._window = v;\n        if (this.hasNativeWindow) {\n            win = v;\n        }\n    }\n    get hasNativeWindow() {\n        return this._nativeWindow;\n    }\n}\nexport let Global = new _Global();\n//# sourceMappingURL=Global.js.map","import { Global } from \"./Global\";\nexport function hasWindow() {\n    return Global.window !== null;\n}\nexport function hasConsole() {\n    return this.hasWindow() && Global.window.console !== undefined || typeof (console) === \"function\";\n}\nexport function isArray(it) {\n    return Array.isArray ? Array.isArray(it) : Object.prototype.toString.call(it) === \"[object Array]\";\n}\nexport function isElement(target) {\n    return target !== undefined && target !== null && target.nodeType === 1 ? true : false;\n}\nexport function isFunction(it) {\n    return Object.prototype.toString.call(it) === \"[object Function]\";\n}\nexport function isNumber(x) {\n    return x === +x;\n}\nexport function isInt(x) {\n    return isNumber(x) && (x === (x | 0));\n}\nexport function isString(x) {\n    return isNotNullOrUndefined(x) && x.constructor === String;\n}\nexport function areNullOrUndefined(...args) {\n    const len = args.length;\n    let i = -1;\n    let a;\n    let result = false;\n    while (!result && ++i < len) {\n        a = args[i];\n        result = a === undefined || a === null;\n    }\n    return result;\n}\nexport function areNotNullOrUndefined(...args) {\n    return !areNullOrUndefined(...args);\n}\nexport function isNullOrUndefined(arg) {\n    return arg === undefined || arg === null;\n}\nexport function isNotNullOrUndefined(arg) {\n    return !isNullOrUndefined(arg);\n}\nexport function areUndefined(...args) {\n    const len = args.length;\n    let i = -1;\n    let a;\n    let result = false;\n    while (!result && ++i < len) {\n        a = args[i];\n        result = a === undefined;\n    }\n    return result;\n}\nexport function areNotUndefined(...args) {\n    return !areUndefined(...args);\n}\nexport function isUndefined(arg) {\n    return arg === undefined;\n}\nexport function isNotUndefined(arg) {\n    return !isUndefined(arg);\n}\n//# sourceMappingURL=Test.js.map","import { deepCopy, flatten } from \"./Arr\";\nimport { areNotNullOrUndefined, isArray, isFunction } from \"./Test\";\nexport function destroy(obj) {\n    if (obj.constructor.prototype.destroy !== undefined) {\n        obj.destroy();\n    }\n    else {\n        setNull(obj);\n    }\n}\nexport function wipe(obj) {\n    const keys = Object.keys(obj);\n    let i = -1;\n    const len = keys.length;\n    while (++i < len) {\n        delete obj[keys[i]];\n    }\n}\nexport function setNull(obj) {\n    if (obj.constructor.prototype.clear !== undefined) {\n        obj.clear();\n    }\n    else {\n        const keys = Object.keys(obj);\n        let key = null;\n        let i = -1;\n        const len = keys.length;\n        while (++i < len) {\n            key = keys[i];\n            obj[key] = null;\n        }\n    }\n}\nexport function isClassOf(a, b) {\n    return areNotNullOrUndefined(a, b) && a instanceof b.constructor;\n}\nexport function isSameClass(a, b) {\n    return areNotNullOrUndefined(a, b) && a.constructor === b.constructor;\n}\nexport function inherits(a, b) {\n    return isClassOf(a, b) && !isSameClass(a, b);\n}\nexport function equals(a, b) {\n    let result = a === b;\n    if (a !== b && (a instanceof Object) && isSameClass(a, b)) {\n        if (isArray(a)) {\n            const len = a.length;\n            let i = 0;\n            result = len === b.length;\n            if (result) {\n                for (; i < len; i += 1) {\n                    result = equals(a[i], b[i]);\n                    if (result === false) {\n                        break;\n                    }\n                }\n            }\n        }\n        else if (a.constructor.prototype.equals) {\n            result = a.equals(b);\n        }\n        else {\n            const keys = Object.keys(a);\n            let key = null;\n            result = true;\n            let i = -1;\n            const len = keys.length;\n            while (++i < len) {\n                key = keys[i];\n                result = equals(a[key], b[key]);\n                if (!result) {\n                    if (isFunction(a[key])) {\n                        result = true;\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return result;\n}\nexport function isDifferent(a, b) {\n    return !equals(a, b);\n}\nexport function shallowCopy(obj) {\n    const keys = Object.keys(obj);\n    const result = {};\n    let i = -1;\n    const len = keys.length;\n    while (++i < len) {\n        const key = keys[i];\n        result[key] = obj[key];\n    }\n    return result;\n}\nexport function clone(obj) {\n    let result;\n    if (!(obj instanceof Object)) {\n        result = obj;\n    }\n    else if (obj.constructor.prototype.clone !== undefined) {\n        result = obj.clone();\n    }\n    else if (isArray(obj)) {\n        result = deepCopy(obj);\n    }\n    else if (obj instanceof Date) {\n        return new Date(obj.getTime());\n    }\n    else if (obj instanceof RegExp) {\n        return new RegExp(obj);\n    }\n    else {\n        result = new obj.constructor();\n        const keys = Object.keys(obj);\n        let key = null;\n        let i = -1;\n        const len = keys.length;\n        while (++i < len) {\n            key = keys[i];\n            result[key] = clone(obj[key]);\n        }\n    }\n    return result;\n}\nexport function cloneInto(src, target) {\n    if (isArray(target)) {\n        const arrS = src;\n        const arrT = target;\n        const len = arrS.length;\n        arrT.length = len;\n        let i = -1;\n        while (++i < len) {\n            if (arrS[i] instanceof Object) {\n                cloneInto(arrS[i], arrT[i]);\n            }\n            else {\n                arrT[i] = arrS[i];\n            }\n        }\n    }\n    else {\n        const keys = Object.keys(src);\n        let key = null;\n        let i = -1;\n        const len = keys.length;\n        while (++i < len) {\n            key = keys[i];\n            const a = src[key];\n            if (a instanceof Object) {\n                let b = target[key];\n                if (b === undefined || b === null) {\n                    if (isArray(a)) {\n                        b = target[key] = [];\n                    }\n                    else {\n                        b = target[key] = {};\n                    }\n                }\n                if (isDifferent(a, b)) {\n                    cloneInto(a, b);\n                }\n            }\n            else {\n                target[key] = a;\n            }\n        }\n    }\n    return target;\n}\nexport function mixin(target = {}, exclude, ...sources) {\n    const result = target, len = sources ? sources.length : 0;\n    let i = 0;\n    sources = flatten(sources);\n    for (; i < len; i++) {\n        let src = sources[i];\n        if (isFunction(src)) {\n            src = src.prototype;\n        }\n        if (src === undefined) {\n            continue;\n        }\n        const keys = Object.keys(src);\n        let key = null;\n        if (exclude) {\n            let i = -1;\n            const len = keys.length;\n            while (++i < len) {\n                key = keys[i];\n                if (exclude.hasOwnProperty(key)) {\n                    continue;\n                }\n                target[key] = src[key];\n            }\n        }\n        else {\n            let i = -1;\n            const len = keys.length;\n            while (++i < len) {\n                key = keys[i];\n                target[key] = src[key];\n            }\n        }\n    }\n    return result;\n}\nexport function setProperties(target, values, mapping) {\n    const keys = Object.keys(values);\n    let key;\n    let value;\n    let i = -1;\n    const len = keys.length;\n    while (++i < len) {\n        key = keys[i];\n        value = values[key];\n        if (mapping && key in mapping) {\n            key = mapping[key];\n        }\n        if (key in target) {\n            target[key] = values[keys[i]];\n        }\n    }\n}\n//# sourceMappingURL=Obj.js.map","import { clone, setProperties } from \"./Obj\";\nimport { isArray, isNullOrUndefined, isNumber, isUndefined, isNotUndefined } from \"./Test\";\nclass ArrayState {\n}\nexport function flatten(src) {\n    return flattenInner(src);\n}\nfunction flattenInner(src, result = []) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        if (isArray(src[i])) {\n            flattenInner(src[i], result);\n        }\n        else {\n            result.push(src[i]);\n        }\n    }\n    return result;\n}\nexport function reverse(array) {\n    let left = null;\n    let right = null;\n    const length = isNullOrUndefined(array) ? 0 : array.length;\n    for (left = 0; left < length / 2; left += 1) {\n        right = length - 1 - left;\n        const temporary = array[left];\n        array[left] = array[right];\n        array[right] = temporary;\n    }\n    return array;\n}\nexport function concat(...arrs) {\n    const result = Array.prototype.concat.apply([], arrs);\n    return result;\n}\nexport function slice(src, from = 0, count = Infinity) {\n    let len = Math.min(isNullOrUndefined(src) ? 0 : src.length - from, count);\n    if (len < 0) {\n        len = 0;\n    }\n    let i = -1;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = src[i + from];\n    }\n    return result;\n}\nexport function splice(src, pos = 0, remove = Infinity, insert = []) {\n    if (isNullOrUndefined(src)) {\n        throw new Error(\"Unable to splice on null or undefined\");\n    }\n    let srcLen = src.length;\n    pos = Math.max(0, pos);\n    pos = Math.min(pos, srcLen);\n    remove = Math.max(0, remove);\n    remove = Math.min(remove, srcLen - pos);\n    let insertLen = insert.length;\n    let newLen = srcLen - remove + insertLen;\n    let delta = remove - insertLen;\n    if (delta < 0) {\n        src.length = newLen;\n        let i = newLen;\n        while (--i >= pos + remove) {\n            src[i] = src[i + delta];\n        }\n    }\n    let i = pos - 1;\n    while (++i < pos + insertLen) {\n        src[i] = insert[i - pos];\n    }\n    if (delta > 0) {\n        --i;\n        while (++i < srcLen - delta) {\n            src[i] = src[i + delta];\n        }\n        src.length = newLen;\n    }\n}\nexport function append(arr, values) {\n    let index = -1;\n    const offset = arr.length;\n    const length = isNullOrUndefined(values) ? 0 : values.length;\n    while (++index < length) {\n        arr[offset + index] = values[index];\n    }\n}\nexport function removeAt(arr, index) {\n    let result;\n    let len = isNullOrUndefined(arr) ? 0 : arr.length;\n    if (index >= 0 && index < len) {\n        let i = index;\n        result = arr[index];\n        while (++i < len) {\n            arr[i - 1] = arr[i];\n        }\n        arr.length -= 1;\n    }\n    return result;\n}\nexport function indexOfElement(src, el) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        if (src[i] === el) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(arr, el) {\n    const start = indexOfElement(arr, el);\n    removeAt(arr, start);\n}\nexport function indexOf(src, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        if (fn(src[i])) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function removeOneByFn(arr, fn) {\n    const start = indexOf(arr, fn);\n    removeAt(arr, start);\n}\nexport function shallowCopy(src) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = src[i];\n    }\n    return result;\n}\nexport function shallowCopyInto(src, target) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    target.length = len;\n    while (++i < len) {\n        target[i] = src[i];\n    }\n}\nexport function shallowFill(src, target, at = 0) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    if (target.length < len + at) {\n        target.length = len + at;\n    }\n    while (++i < len) {\n        target[at + i] = src[i];\n    }\n}\nexport function deepCopy(src) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = (clone(src[i]));\n    }\n    return result;\n}\nexport function deepCopyInto(src, target) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    target.length = len;\n    while (++i < len) {\n        target[i] = (clone(src[i]));\n    }\n}\nexport function deepFill(src, target, at = 0) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    if (target.length < len + at) {\n        target.length = len + at;\n    }\n    while (++i < len) {\n        target[at + i] = (clone(src[i]));\n    }\n}\nexport function filter(src, fn) {\n    const result = [];\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        const el = src[i];\n        if (fn(el, i) === true) {\n            result.push(el);\n        }\n    }\n    return result;\n}\nexport function filterInto(src, target, fn) {\n    let i = -1;\n    let j = 0;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const space = target.length;\n    while (++i < len) {\n        const el = src[i];\n        if (fn(el, i) === true) {\n            if (j < space) {\n                target[j++] = el;\n            }\n            else {\n                ++j;\n                target.push(el);\n            }\n        }\n    }\n    target.length = j;\n}\nexport function map(src, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = fn(src[i], i);\n    }\n    return result;\n}\nexport function mapInto(src, target, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    target.length = len;\n    while (++i < len) {\n        target[i] = fn(src[i], i);\n    }\n}\nexport function reduce(src, fn, start) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (++i < len) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function reduceUntil(src, fn, test, start) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (++i < len && !test(acc, src[i])) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function reverseReduce(src, fn, start) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (--i >= 0) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function reverseReduceUntil(src, fn, test, start) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (--i >= 0 && !test(acc, src[i])) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function forEach(src, fn, startIndex = 0) {\n    let i = startIndex - 1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        fn(src[i], i);\n    }\n}\nexport function forSome(src, filter, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        const el = src[i];\n        if (filter(el, i)) {\n            fn(el, i);\n        }\n    }\n}\nexport function until(src, fnOrTest, fn, startIndex) {\n    let isCombined = isUndefined(fn) || isNumber(fn);\n    startIndex = isCombined ? fn : startIndex;\n    let i = isUndefined(startIndex) || startIndex < 0 ? -1 : startIndex - 1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len && (isCombined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\n    }\n}\nexport function reverseForEach(src, fn) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    while (--i >= 0) {\n        fn(src[i], i);\n    }\n}\nexport function reverseUntil(src, fnOrTest, fn) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    let combined = isUndefined(fn);\n    while (--i >= 0 && (combined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\n    }\n}\nexport function some(src, fn) {\n    let result = false;\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len && !(result = fn(src[i]))) {\n    }\n    return result;\n}\nexport function all(src, fn) {\n    let result = true;\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len && (result = fn(src[i]))) {\n    }\n    return result;\n}\nexport function insertAt(src, pos, v) {\n    if (isNullOrUndefined(src)) {\n        throw new Error(\"Unable to insertAt on null or undefined\");\n    }\n    if (pos === 0) {\n        src.unshift(v);\n    }\n    else if (pos > 0) {\n        let i = src.length;\n        while (--i >= pos) {\n            src[i + 1] = src[i];\n        }\n        src[i + 1] = v;\n    }\n}\nexport function binarySearch(src, cmp, closest = false) {\n    let lo = 0, hi = isNullOrUndefined(src) ? -1 : src.length - 1, mid, element;\n    while (lo <= hi) {\n        mid = ((lo + hi) >> 1);\n        element = src[mid];\n        let val = cmp(element);\n        if (val < 0) {\n            lo = mid + 1;\n        }\n        else if (val > 0) {\n            hi = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return closest ? lo : -1;\n}\nexport function create(length, populator) {\n    if ((length || -1) < 0) {\n        length = 0;\n    }\n    let arr = new Array(length);\n    let i = -1;\n    while (++i < length) {\n        arr[i] = populator(i, arr);\n    }\n    return arr;\n}\nexport function deserialize(array, target, ...types) {\n    let [T, ...passthroughT] = types;\n    if (isNotUndefined(T)) {\n        if (isNotUndefined(T.prototype.deserialize)) {\n            mapInto(array, target, (el) => {\n                return (new T()).deserialize(el, ...passthroughT);\n            });\n        }\n        else {\n            mapInto(array, target, (el) => {\n                let newT = new T();\n                setProperties(newT, el);\n                return newT;\n            });\n        }\n    }\n    else {\n        deepCopyInto(array, target);\n    }\n    return this;\n}\n//# sourceMappingURL=Arr.js.map","import { forEach } from \"../Arr\";\nimport { clone, setProperties, wipe } from \"../Obj\";\nimport { isFunction, isNotUndefined } from \"../Test\";\nimport { List } from \"./List\";\nexport class Dictionary {\n    constructor() {\n        this._lookup = Object.create(null);\n        this._list = new List();\n        this._isDirty = false;\n    }\n    create() {\n        return new (this.constructor)();\n    }\n    has(key) {\n        return this._lookup[key] !== undefined;\n    }\n    contains(key) {\n        return this.has(key);\n    }\n    get(key) {\n        return this._lookup[key];\n    }\n    set(key, value) {\n        this._isDirty = this._isDirty || this.has(key);\n        if (value !== undefined) {\n            this._lookup[key] = value;\n            if (!this._isDirty) {\n                this._list.push(value);\n            }\n        }\n        return this;\n    }\n    delete(key) {\n        if (this.has(key)) {\n            delete this._lookup[key];\n            this._isDirty = true;\n        }\n        return this;\n    }\n    clear() {\n        wipe(this._lookup);\n        this._list.clear();\n        return this;\n    }\n    get values() {\n        this.cleanList();\n        return this._list.values;\n    }\n    get keys() {\n        return Object.keys(this._lookup);\n    }\n    get list() {\n        this.cleanList();\n        return this._list;\n    }\n    get count() {\n        let result = 0;\n        if (this._isDirty) {\n            result = this.keys.length;\n        }\n        else {\n            result = this._list.count;\n        }\n        return result;\n    }\n    cleanList() {\n        if (this._isDirty) {\n            this.reCreateList();\n        }\n    }\n    reCreateList() {\n        let lookup = this._lookup;\n        let keys = Object.keys(this._lookup);\n        let i = -1;\n        let list = this._list;\n        list.clear();\n        while (++i < keys.length) {\n            list.add(lookup[keys[i]]);\n        }\n    }\n    clone() {\n        let result = this.create();\n        result._isDirty = this._isDirty;\n        result._list = this._list.clone();\n        result._lookup = clone(this._lookup);\n        return result;\n    }\n    toJSON() {\n        return this._lookup;\n    }\n    serialize() {\n        let obj = Object.create(null);\n        forEach(this.keys, (key) => {\n            let v = this.get(key);\n            obj[key] = isFunction(v.serialize) ? v.serialize() : v;\n        });\n        return obj;\n    }\n    deserialize(obj, ...types) {\n        let [T, ...passthroughT] = types;\n        this.clear();\n        if (isNotUndefined(T)) {\n            if (isNotUndefined(T.prototype.deserialize)) {\n                for (let key of Object.keys(obj)) {\n                    this.set(key, (new T()).deserialize(obj[key], ...passthroughT));\n                }\n            }\n            else {\n                for (let key of Object.keys(obj)) {\n                    let newT = new T();\n                    setProperties(newT, obj[key]);\n                    this.set(key, newT);\n                }\n            }\n        }\n        else {\n            for (let key of Object.keys(obj)) {\n                this.set(key, obj[key]);\n            }\n        }\n        return this;\n    }\n}\n//# sourceMappingURL=Dictionary.js.map","import * as Arr from \"../Arr\";\nimport { clone, equals } from \"../Obj\";\nimport { isArray, isFunction, isNotNullOrUndefined, hasWindow } from \"../Test\";\nimport { Dictionary } from \"./Dictionary\";\nif (hasWindow() && !window.Symbol) {\n    window.Symbol = { iterator: \"iterator\" };\n}\nexport class List {\n    constructor(arr) {\n        this._array = [];\n        this._index = null;\n        this._indexer = null;\n        this._pointer = 0;\n        if (arr === undefined) {\n            this._array = new Array();\n        }\n        else {\n            if (arr instanceof (List)) {\n                this._array = Arr.shallowCopy(arr._array);\n            }\n            else {\n                this._array = Arr.shallowCopy(arr);\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    next(value) {\n        return {\n            done: this._pointer >= this.length,\n            value: this._pointer < this.length ? this._array[this._pointer++] : (this._pointer = 0, undefined)\n        };\n    }\n    create(arr) {\n        return new (this.constructor)(arr);\n    }\n    get values() {\n        return this._array;\n    }\n    get(pos) {\n        return this._array[pos];\n    }\n    getByIndex(key) {\n        let result;\n        return isNotNullOrUndefined(this._index) ? this._index.get(key) : undefined;\n    }\n    set(pos, v) {\n        if (pos >= 0 && pos < this.length) {\n            this._array[pos | 0] = v;\n            if (this._indexer !== null) {\n                this._index.set(this._indexer(v), v);\n            }\n        }\n        else {\n            throw new Error(`index out of bounds on <List>.set(${pos}, ${v.toString()})`);\n        }\n        return this;\n    }\n    get count() {\n        return this._array.length;\n    }\n    get length() {\n        return this._array.length;\n    }\n    get indexer() {\n        return this._indexer;\n    }\n    set indexer(fn) {\n        this._indexer = fn;\n        this._reindex();\n    }\n    _reindex() {\n        if (this._indexer === null) {\n            this._index = null;\n        }\n        else {\n            if (this._index === null) {\n                this._index = new Dictionary();\n            }\n            else {\n                this._index.clear();\n            }\n            this.forEach((el) => this._index.set(this._indexer(el), el));\n        }\n    }\n    truncate(size = 0) {\n        if (size < 0) {\n            let arr = this._array;\n            let len = arr.length;\n            size = Math.min(len, -1 * size);\n            let i = len - size - 1;\n            let j = -1;\n            while (++i < len) {\n                arr[++j] = arr[i];\n            }\n        }\n        this._array.length = Math.max(0, Math.min(this._array.length, size));\n        this._reindex();\n        return this;\n    }\n    fill(size, populator) {\n        size = Math.max(0, size || 0);\n        if (isFunction(populator)) {\n            this._array = Arr.create(size, populator);\n        }\n        else if (!(populator instanceof Object)) {\n            this._array = Arr.create(size, () => populator);\n        }\n        else {\n            this._array = Arr.create(size, () => clone(populator));\n        }\n        this._reindex();\n        return this;\n    }\n    clear() {\n        this._array.length = 0;\n        if (this._index !== null) {\n            this._index.clear();\n        }\n        return this;\n    }\n    add(v) {\n        this._array.push(v);\n        if (this._indexer !== null) {\n            this._index.set(this._indexer(v), v);\n        }\n        return this;\n    }\n    insertAt(pos, v) {\n        Arr.insertAt(this._array, pos, v);\n        if (this._indexer !== null) {\n            this._index.set(this._indexer(v), v);\n        }\n        return this;\n    }\n    push(v) {\n        if (this._indexer !== null) {\n            this._index.set(this._indexer(v), v);\n        }\n        return this._array.push(v);\n    }\n    pop() {\n        let result = this._array.pop();\n        if (result !== undefined && this._indexer !== null) {\n            this._index.delete(this._indexer(result));\n        }\n        return result;\n    }\n    shift() {\n        let result = this._array.shift();\n        if (result !== undefined && this._indexer !== null) {\n            this._index.delete(this._indexer(result));\n        }\n        return result;\n    }\n    concat(v) {\n        let arr;\n        let arr2 = v instanceof List ? v.values : v;\n        arr = Arr.concat(this._array, arr2);\n        return this.create(arr);\n    }\n    index(arr) {\n        if (this._indexer !== null) {\n            Arr.forEach(arr, (el) => {\n                this._index.set(this._indexer(el), el);\n            });\n        }\n    }\n    unindexEl(el) {\n        if (this._indexer !== null) {\n            this._index.delete(this._indexer(el));\n        }\n    }\n    append(v) {\n        let arr2 = v instanceof List ? v.values : v;\n        Arr.append(this._array, arr2);\n        this.index(arr2);\n        return this;\n    }\n    copy(src) {\n        let arr2 = src instanceof List ? src.values : src;\n        Arr.deepCopyInto(arr2, this._array);\n        this.index(arr2);\n        return this;\n    }\n    shallowCopy(src) {\n        let arr2 = src instanceof List ? src.values : src;\n        Arr.shallowCopyInto(arr2, this._array);\n        this.index(arr2);\n        return this;\n    }\n    clone() {\n        const arr = Arr.deepCopy(this._array);\n        let result = this.create(arr);\n        if (this._indexer !== null) {\n            result._indexer = this._indexer;\n            result._index = this._index.clone();\n        }\n        return result;\n    }\n    remove(v) {\n        Arr.remove(this._array, v);\n        this.unindexEl(v);\n        return this;\n    }\n    removeFirst(fn) {\n        let result = this.removeAt(this.indexOf(fn));\n        this.unindexEl(result);\n        return result;\n    }\n    removeAt(n) {\n        let result = Arr.removeAt(this._array, n);\n        this.unindexEl(result);\n        return result;\n    }\n    forEach(fn, startIndex = 0) {\n        Arr.forEach(this._array, fn, startIndex);\n        return this;\n    }\n    forSome(filter, fn) {\n        Arr.forSome(this._array, filter, fn);\n        return this;\n    }\n    until(fnOrTest, fn, startIndex) {\n        Arr.until(this._array, fnOrTest, fn, startIndex);\n        return this;\n    }\n    reverseForEach(fn) {\n        Arr.reverseForEach(this._array, fn);\n        return this;\n    }\n    reverseUntil(fnOrTest, fn) {\n        Arr.reverseUntil(this._array, fnOrTest, fn);\n        return this;\n    }\n    some(fn) {\n        return Arr.some(this._array, fn);\n    }\n    all(fn) {\n        return Arr.all(this._array, fn);\n    }\n    indexOf(v) {\n        let result = -1;\n        if (isFunction(v)) {\n            result = Arr.indexOf(this._array, v);\n        }\n        else {\n            result = Arr.indexOfElement(this._array, v);\n        }\n        return result;\n    }\n    contains(v) {\n        let result = false;\n        if (isFunction(v)) {\n            result = this.find(v) !== undefined;\n        }\n        else {\n            if (this._indexer !== null) {\n                result = this._index.contains(this._indexer(v));\n            }\n            else {\n                result = Arr.indexOfElement(this._array, v) !== -1;\n            }\n        }\n        return result;\n    }\n    reverse() {\n        Arr.reverse(this._array);\n        return this;\n    }\n    first(fn) {\n        let index = -1;\n        let result;\n        if (fn === undefined) {\n            index = 0;\n        }\n        else {\n            index = Arr.indexOf(this._array, fn);\n        }\n        return index === -1 ? undefined : this.get(index);\n    }\n    find(fn) {\n        return this.first(fn);\n    }\n    last() {\n        return this.length === 0 ? undefined : this.get(this.length - 1);\n    }\n    filter(fn) {\n        return this.create(Arr.filter(this._array, fn));\n    }\n    select(fn) {\n        return this.create(Arr.filter(this._array, fn));\n    }\n    selectInto(src, fn) {\n        let arr = src instanceof List ? src.values : src;\n        Arr.filterInto(arr, this._array, fn);\n        this.index(arr);\n        return this;\n    }\n    head(count = 1) {\n        count = Math.max(0, count);\n        return this.create(Arr.slice(this._array, 0, count));\n    }\n    tail(count = 1) {\n        count = Math.min(this._array.length, count);\n        return this.create(Arr.slice(this._array, Math.max(0, this._array.length - count)));\n    }\n    splice(pos = 0, remove = Infinity, insert = []) {\n        Arr.splice(this._array, pos, remove, isArray(insert) ? insert : insert.values);\n        this._reindex();\n        return this;\n    }\n    orderBy(fn) {\n        this._array.sort(fn);\n        return this;\n    }\n    map(fn) {\n        return this.create(Arr.map(this._array, fn));\n    }\n    mapInto(src, fn) {\n        let arr = src instanceof List ? src.values : src;\n        Arr.mapInto(arr, this._array, fn);\n        this._reindex();\n        return this;\n    }\n    reduce(fn, start) {\n        return Arr.reduce(this._array, fn, start);\n    }\n    reduceUntil(fn, test, start) {\n        return Arr.reduceUntil(this._array, fn, test, start);\n    }\n    reverseReduce(fn, start) {\n        return Arr.reverseReduce(this._array, fn, start);\n    }\n    reverseReduceUntil(fn, test, start) {\n        return Arr.reverseReduceUntil(this._array, fn, test, start);\n    }\n    equals(b) {\n        const result = equals(this._array, b.values);\n        return result;\n    }\n    same(b) {\n        let a = this;\n        let count = 0;\n        if (a.length === b.length) {\n            if (a.indexer !== null) {\n                b.until((el) => !a.contains(el), (el, i) => ++count);\n            }\n            else {\n                a.until((el) => !b.contains(el), (el, i) => ++count);\n            }\n        }\n        return count === a.length;\n    }\n    intersect(b) {\n        let result = this.create();\n        let long;\n        let short;\n        result.indexer = this.indexer;\n        if (this.length < b.length) {\n            short = this, long = b;\n        }\n        else {\n            long = this, short = b;\n        }\n        if (long.indexer !== null) {\n            short.forEach((el) => {\n                if (long.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        else {\n            long.forEach((el) => {\n                if (short.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        return result;\n    }\n    union(b) {\n        let result = this.create();\n        let long;\n        let short;\n        result.indexer = this.indexer;\n        if (this.length < b.length) {\n            short = this, long = b;\n        }\n        else {\n            long = this, short = b;\n        }\n        if (long.indexer !== null) {\n            result = long.clone();\n            short.forEach((el) => {\n                if (!long.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        else {\n            result = short.clone();\n            long.forEach((el) => {\n                if (!short.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        return result;\n    }\n    subtract(b) {\n        let result = this.create();\n        result.indexer = this.indexer;\n        result = this.select((el) => !b.contains(el));\n        return result;\n    }\n    zip(list, fn = (t, u) => [t, u]) {\n        let result = this.create();\n        let length = list.length;\n        this.until(function (el, i) {\n            return i >= length;\n        }, function (el, i) {\n            result.push(fn(el, list.get(i)));\n        });\n        return result;\n    }\n    unzip(fn = (el) => [el[0], el[1]]) {\n        let result = [this.create(), this.create()];\n        this.forEach(function (el) {\n            let tuple = fn(el);\n            result[0].push(tuple[0]);\n            result[1].push(tuple[1]);\n        });\n        return result;\n    }\n    flatten(maxDepth = Infinity) {\n        return this.create(maxDepth < 1 ? this.values : this._flattenInner(this.values, maxDepth));\n    }\n    _flattenInner(src, maxDepth, depth = -1, result = []) {\n        let i = -1;\n        const len = src.length;\n        if (++depth > maxDepth) {\n            result.push(src);\n        }\n        else {\n            while (++i < len) {\n                if (isArray(src[i])) {\n                    this._flattenInner(src[i], maxDepth, depth, result);\n                }\n                else if (src[i] instanceof List) {\n                    this._flattenInner(src[i].values, maxDepth, depth, result);\n                }\n                else {\n                    result.push(src[i]);\n                }\n            }\n        }\n        return result;\n    }\n    toJSON() {\n        return this.values;\n    }\n    serialize() {\n        return this.values.map((el) => isFunction(el.serialize) ? el.serialize() : el);\n    }\n    deserialize(array, ...types) {\n        Arr.deserialize(array, this._array, ...types);\n        return this;\n    }\n}\n//# sourceMappingURL=List.js.map","import { binarySearch } from \"../Arr\";\nimport { equals } from \"../Obj\";\nimport { isFunction, hasWindow } from \"../Test\";\nimport { List } from \"./List\";\nif (hasWindow() && !window.Symbol) {\n    window.Symbol = { iterator: \"iterator\" };\n}\nexport class Comparer {\n}\nComparer.StringAsc = function (a, b) { return a < b ? -1 : a === b ? 0 : 1; };\nComparer.StringDesc = function (a, b) { return a < b ? 1 : a === b ? 0 : -1; };\nComparer.NumberAsc = function (a, b) { return a < b ? -1 : a === b ? 0 : 1; };\nComparer.NumberDesc = function (a, b) { return a < b ? 1 : a === b ? 0 : -1; };\nexport class SortedList {\n    constructor(comparer = ((a, b) => a < b ? -1 : a === b ? 0 : 1), arr) {\n        this._list = new List();\n        this._pointer = 0;\n        this._cmp = comparer;\n        if (arr === undefined) {\n            this._list = new List();\n        }\n        else {\n            if (arr instanceof (List) || arr instanceof (SortedList)) {\n                this.copy(arr.values);\n            }\n            else {\n                this.copy(arr);\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    next(value) {\n        return {\n            done: this._pointer >= this.length,\n            value: this._pointer < this.length ? this.values[this._pointer++] : (this._pointer = 0, undefined)\n        };\n    }\n    create(comparer, arr) {\n        return new (this.constructor)(comparer, arr);\n    }\n    get values() {\n        return this._list.values;\n    }\n    get(pos) {\n        return this._list.get(pos);\n    }\n    get count() {\n        return this._list.length;\n    }\n    get length() {\n        return this._list.length;\n    }\n    get comparer() {\n        return this._cmp;\n    }\n    set comparer(v) {\n        this._cmp = v;\n        this.sort();\n    }\n    sort() {\n        this._list.orderBy(this._cmp);\n    }\n    truncate(size = 0) {\n        this._list.truncate(size);\n        return this;\n    }\n    fill(size, populator) {\n        this._list.fill(size, populator);\n        this.sort();\n        return this;\n    }\n    clear() {\n        this._list.clear();\n        return this;\n    }\n    add(v) {\n        let index = this.getInsertIndex(v);\n        this._list.insertAt(index, v);\n        return this;\n    }\n    pop() {\n        return this._list.pop();\n    }\n    shift() {\n        return this._list.shift();\n    }\n    bulkAdd(v) {\n        if (v instanceof List || v instanceof SortedList) {\n            this._list.append(v.values);\n        }\n        else {\n            this._list.append(v);\n        }\n        this.sort();\n        return this;\n    }\n    copy(src) {\n        if (src instanceof List || src instanceof SortedList) {\n            this._list.copy(src.values);\n        }\n        else {\n            this._list.copy(src);\n        }\n        this.sort();\n        return this;\n    }\n    clone() {\n        return this.create(this._cmp, this._list.clone());\n    }\n    remove(v) {\n        let index = this.indexOf(v);\n        if (index !== -1) {\n            this._list.removeAt(index);\n        }\n        return this;\n    }\n    removeAt(n) {\n        return this._list.removeAt(n);\n    }\n    removeFirst(fn) {\n        return this._list.removeFirst(fn);\n    }\n    forEach(fn, startIndex = 0) {\n        this._list.forEach(fn, startIndex);\n        return this;\n    }\n    forSome(filter, fn) {\n        this._list.forSome(filter, fn);\n        return this;\n    }\n    until(fnOrTest, fn, startIndex) {\n        this._list.until(fnOrTest, fn, startIndex);\n        return this;\n    }\n    reverseForEach(fn) {\n        this._list.reverseForEach(fn);\n        return this;\n    }\n    reverseUntil(fnOrTest, fn) {\n        this._list.reverseUntil(fnOrTest, fn);\n        return this;\n    }\n    some(fn) {\n        return this._list.some(fn);\n    }\n    all(fn) {\n        return this._list.all(fn);\n    }\n    getInsertIndex(v) {\n        return binarySearch(this._list.values, (el) => this._cmp(el, v), true);\n    }\n    indexOf(v) {\n        let result = -1;\n        if (v instanceof Function) {\n            result = this._list.indexOf(v);\n        }\n        else {\n            result = binarySearch(this._list.values, (el) => this._cmp(el, v), false);\n        }\n        return result;\n    }\n    contains(v) {\n        return this.indexOf(v) !== -1;\n    }\n    first(fn) {\n        return this._list.first(fn);\n    }\n    find(fn) {\n        return this._list.find(fn);\n    }\n    last() {\n        return this._list.last();\n    }\n    filter(fn) {\n        return this.create(this._cmp, this._list.filter(fn));\n    }\n    select(fn) {\n        return this.create(this._cmp, this._list.filter(fn));\n    }\n    selectInto(src, fn) {\n        if (src instanceof List || src instanceof SortedList) {\n            this._list.selectInto(src.values, fn);\n        }\n        else {\n            this._list.selectInto(src, fn);\n        }\n        this.sort();\n        return this;\n    }\n    head(count = 1) {\n        return this.create(this.comparer, this._list.head(count));\n    }\n    tail(count = 1) {\n        return this.create(this.comparer, this._list.tail(count));\n    }\n    map(fn) {\n        return this._list.map(fn);\n    }\n    mapInto(src, fn) {\n        if (src instanceof List || src instanceof SortedList) {\n            this._list.mapInto(src.values, fn);\n        }\n        else {\n            this._list.mapInto(src, fn);\n        }\n        this.sort();\n        return this;\n    }\n    reduce(fn, start) {\n        return this._list.reduce(fn, start);\n    }\n    reduceUntil(fn, test, start) {\n        return this._list.reduceUntil(fn, test, start);\n    }\n    reverseReduce(fn, start) {\n        return this._list.reverseReduce(fn, start);\n    }\n    reverseReduceUntil(fn, test, start) {\n        return this._list.reverseReduceUntil(fn, test, start);\n    }\n    equals(b) {\n        const result = equals(this._list.values, b.values);\n        return result;\n    }\n    same(b) {\n        return this.equals(b);\n    }\n    intersect(b) {\n        let result = this.create(this.comparer);\n        let long;\n        let short;\n        if (this.length > 0 && b.length > 0) {\n            if (this.length < b.length) {\n                short = this, long = b;\n            }\n            else {\n                long = this, short = b;\n            }\n            if (b instanceof SortedList && this.comparer === b.comparer) {\n                let longPos = long.getInsertIndex(short.get(0)) - 1;\n                let lastPos = long.getInsertIndex(short.last()) - 1;\n                let i = -1;\n                let shortLen = short.length;\n                while (longPos < lastPos && ++i < shortLen) {\n                    let el = short.get(i);\n                    let aVsB;\n                    while (++longPos < lastPos && (aVsB = this.comparer(long.get(longPos), el)) < 0) {\n                        void (0);\n                    }\n                    if (longPos < lastPos && aVsB === 0) {\n                        result.add(el);\n                    }\n                }\n            }\n            else if (long instanceof SortedList || (long instanceof List && long.indexer !== null)) {\n                short.forEach((el) => {\n                    if (long.contains(el)) {\n                        result.add(el);\n                    }\n                });\n            }\n            else {\n                result = result.bulkAdd(short.toList().intersect(long));\n            }\n        }\n        return result;\n    }\n    union(b) {\n        let result;\n        let long;\n        let short;\n        if (this.length > 0 || b.length > 0) {\n            if (this.length < b.length) {\n                short = this, long = b;\n            }\n            else {\n                long = this, short = b;\n            }\n            if (b instanceof SortedList && this.comparer === b.comparer) {\n                result = this.create(this.comparer, long.values);\n                let longPos = long.getInsertIndex(short.get(0)) - 1;\n                let lastPos = long.getInsertIndex(short.last()) - 1;\n                let i = -1;\n                let shortLen = short.length;\n                while (++i < shortLen && longPos < lastPos) {\n                    let el = short.get(i);\n                    let aVsB = -1;\n                    while (++longPos < lastPos && (aVsB = this.comparer(long.get(longPos), el)) < 0) {\n                        void (0);\n                    }\n                    if ((aVsB > 0 && longPos < lastPos) || longPos === lastPos) {\n                        result.add(el);\n                    }\n                }\n                if (i < shortLen) {\n                    --i;\n                    while (++i < shortLen) {\n                        result.add(short.get(i));\n                    }\n                }\n            }\n            else if (long instanceof SortedList || (long instanceof List && long.indexer !== null)) {\n                result = this.create(this.comparer, long.values);\n                short.forEach((el) => {\n                    if (!long.contains(el)) {\n                        result.add(el);\n                    }\n                });\n            }\n            else {\n                result = this.create(this.comparer, short.toList().union(long));\n            }\n        }\n        else {\n            result = this.create(this.comparer);\n        }\n        return result;\n    }\n    toList() {\n        return new List(this.values);\n    }\n    toJSON() {\n        return this.values;\n    }\n    serialize() {\n        return this.values.map((el) => isFunction(el.serialize) ? el.serialize() : el);\n    }\n    deserialize(array, ...types) {\n        this._list.deserialize(array, ...types);\n        this.sort();\n        return this;\n    }\n}\n//# sourceMappingURL=SortedList.js.map","import { deepCopy, slice, deserialize } from \"../Arr\";\nimport { isFunction } from \"../Test\";\nimport { List } from \"./List\";\nexport class Stack {\n    constructor(size) {\n        this.DEFAULT_SIZE = 100;\n        this._pos = 0;\n        this._limit = 0;\n        if (!size) {\n            size = this.DEFAULT_SIZE;\n        }\n        this.DEFAULT_SIZE = size;\n        this._array = new Array(size);\n        this.push = this.fastPush;\n    }\n    get values() {\n        return slice(this._array, 0, this._pos);\n    }\n    get depth() {\n        return this._pos;\n    }\n    get size() {\n        return this._pos;\n    }\n    get isEmpty() {\n        return this.size === 0;\n    }\n    get limit() {\n        return this._limit;\n    }\n    set limit(value) {\n        if (value < 0) {\n            value = 0;\n        }\n        this._limit = value;\n        if (value === 0) {\n            this.push = this.fastPush;\n        }\n        else {\n            this.push = this.limitedPush;\n            this.limitObjects();\n        }\n    }\n    create(size) {\n        return new (this.constructor)(size);\n    }\n    push(obj) {\n    }\n    fastPush(obj) {\n        this._array[this._pos++] = obj;\n    }\n    limitedPush(obj) {\n        this._array[this._pos] = obj;\n        ++this._pos;\n        this.limitObjects();\n    }\n    pop() {\n        let result = undefined;\n        if (this._pos !== 0) {\n            result = this._array[--this._pos];\n        }\n        return result;\n    }\n    peek() {\n        return this._array[this._pos - 1];\n    }\n    peekAt(index) {\n        return index < 0 || index >= this._pos ? undefined : this._array[this._pos - index - 1];\n    }\n    toList() {\n        const result = new List();\n        return new List(this.values);\n    }\n    clear() {\n        this._pos = 0;\n        this._array.length = this.DEFAULT_SIZE;\n        return this;\n    }\n    clone() {\n        const arr = deepCopy(this._array);\n        let result = this.create(this.DEFAULT_SIZE);\n        result._array = arr;\n        result._limit = this._limit;\n        result._pos = this._pos;\n        return result;\n    }\n    limitObjects() {\n        while (this._pos > this._limit) {\n            this._array.shift();\n            --this._pos;\n        }\n    }\n    toJSON() {\n        return slice(this.values, 0, this._pos);\n    }\n    serialize() {\n        return slice(this.values, 0, this._pos).map((el) => isFunction(el.serialize) ? el.serialize() : el);\n    }\n    deserialize(array, ...types) {\n        deserialize(array, this._array, ...types);\n        this._pos = array.length;\n        return this;\n    }\n}\n//# sourceMappingURL=Stack.js.map","import { setProperties } from \"../../Obj\";\nexport function Initable(constructor) {\n    return class extends constructor {\n        init(obj, mapping) {\n            setProperties(this, obj, mapping);\n            return this;\n        }\n    };\n}\n//# sourceMappingURL=Initable.js.map","class TimerState {\n}\nTimerState._hasPerformance = typeof (performance) !== \"undefined\";\nexport class Timer {\n    static get time() {\n        return TimerState._time;\n    }\n    static now() {\n        if (TimerState._hasPerformance) {\n            return performance.now();\n        }\n        else {\n            const hrTime = process.hrtime();\n            return hrTime[0] * 1000 + (hrTime[1] / 1e6);\n        }\n    }\n    static start() {\n        const now = Timer.now();\n        TimerState._start = TimerState._last = now;\n        return TimerState._time = 0;\n    }\n    static stop() {\n        const start = TimerState._start;\n        const now = Timer.now();\n        TimerState._last = now;\n        return TimerState._time = now - start;\n    }\n}\n//# sourceMappingURL=Timer.js.map","import { Global } from \"./Global\";\nimport { hasConsole, hasWindow, isNotUndefined } from \"./Test\";\nimport { Timer } from \"./Timer\";\nclass LoggableCounter {\n    constructor(name = \"\") {\n        this.name = \"\";\n        this._value = 0;\n        this.name = name;\n    }\n    log() {\n        console.log(\"Counter \" + this.name + \": \" + this.toString());\n    }\n    inc() {\n        this._value++;\n        return this;\n    }\n    reset() {\n        this._value = 0;\n        return this;\n    }\n    valueOf() {\n        return this._value;\n    }\n    toString() {\n        return this._value.toString();\n    }\n}\nclass UtilState {\n}\nUtilState._int = { \"0\": 0 };\nUtilState._counter = { \"\": new LoggableCounter(\"\") };\nexport function init(win) {\n    if (win !== undefined) {\n        Global.window = win;\n    }\n}\nexport function getFunctionName(fn) {\n    let result;\n    if (fn.hasOwnProperty(\"name\") !== undefined) {\n        result = fn.name;\n    }\n    else {\n        const fnString = fn.toString();\n        result = fnString.substring(9, fnString.indexOf(\"(\"));\n    }\n    return result;\n}\nexport function getFunctionCode(fn) {\n    let result;\n    const fnString = fn.toString();\n    result = fnString.substring(fnString.indexOf(\"{\") + 1, fnString.lastIndexOf(\"}\"));\n    return result;\n}\nexport function newUUID() {\n    let d = new Date().getTime();\n    d += Timer.now();\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n        const r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n}\nexport function newInt(key = 0) {\n    if (UtilState._int[key] === undefined) {\n        UtilState._int[key] = 0;\n    }\n    return UtilState._int[key]++;\n}\nexport function counter(key = \"\") {\n    if (UtilState._counter[key] === undefined) {\n        UtilState._counter[key] = new LoggableCounter(key.toString());\n    }\n    return UtilState._counter[key];\n}\nexport function count(key = \"\") {\n    return counter(key).inc();\n}\nexport function callDebugger() {\n    debugger;\n}\nexport function pipeOut(log, warn, error) {\n    if (hasConsole()) {\n        proxyFn(console, \"log\", function (superfn, ...args) { superfn(...args); log(...args); });\n        proxyFn(console, \"warn\", function (superfn, ...args) { superfn(...args); warn(...args); });\n        proxyFn(console, \"error\", function (superfn, ...args) { superfn(...args); error(...args); });\n    }\n    else {\n        const console = {\n            log,\n            warn,\n            error\n        };\n        if (!(hasWindow())) {\n            Global.window = {};\n        }\n        Global.window.console = console;\n    }\n}\nexport function assert(assertion, message, isDebug = true) {\n    let result = true;\n    if (!assertion) {\n        if (hasConsole) {\n            result = false;\n            console.error(\"Assertion failed: \" + message);\n        }\n        if (isDebug) {\n            callDebugger();\n        }\n    }\n    return result;\n}\nexport function proxyFn(objOrClass, fnName, proxyFn) {\n    objOrClass = isNotUndefined(objOrClass.prototype) ? objOrClass.prototype : objOrClass;\n    const fn = objOrClass[fnName];\n    const _superFn = function (...args) {\n        if (args.length !== 0) {\n            return fn.apply(this || objOrClass, args);\n        }\n        else {\n            return fn.call(this || objOrClass);\n        }\n    };\n    objOrClass[fnName] = proxyFn.bind(objOrClass, _superFn);\n}\nexport function loop(count, fn) {\n    let i = -1;\n    while (++i < count) {\n        fn(i);\n    }\n}\nexport function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n}\n//# sourceMappingURL=Util.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { map } from \"../Arr\";\nimport { clone, isSameClass, setProperties } from \"../Obj\";\nimport { Initable } from \"../standard/mixins/Initable\";\nimport { isArray, isNullOrUndefined } from \"../Test\";\nimport { newUUID } from \"../Util\";\nimport { Dictionary } from \"./Dictionary\";\nimport { List } from \"./List\";\nimport { Stack } from \"./Stack\";\nlet Tree = Tree_1 = class Tree {\n    constructor(id) {\n        this.id = \"\";\n        this.parent = null;\n        this.children = null;\n        this.data = null;\n        this.virtual = false;\n        this.id = isNullOrUndefined(id) ? newUUID() : id;\n    }\n    static fromObject(obj) {\n        const parent = (this instanceof Tree_1) ? this : null;\n        const root = new Tree_1(obj.id).init({ data: obj.data, parent });\n        if (obj.children !== undefined && isArray(obj.children)) {\n            root.children = new List(map(obj.children, Tree_1.fromObject.bind(root)));\n        }\n        return root;\n    }\n    static fromNodeList(nodes, mapcfg, virtualRoot = false, ctor = Tree_1) {\n        let result = new Tree_1();\n        let mapResolver = (key) => {\n            return !mapcfg || typeof (mapcfg[key]) === \"undefined\" ? (el) => el[key] :\n                typeof (mapcfg[key]) === \"string\" ? (el) => el[mapcfg[key]] :\n                    mapcfg[key];\n        };\n        let map = {\n            id: mapResolver(\"id\"),\n            parent: mapResolver(\"parent\"),\n            data: mapResolver(\"data\")\n        };\n        let list = new List(nodes);\n        let lookup = new Dictionary();\n        let nodeList = list.map((el) => new ctor().init({ id: map.id(el), data: map.data(el) }));\n        nodeList.forEach((node, i) => {\n            if (!lookup.has(node.id)) {\n                lookup.set(node.id, []);\n            }\n            lookup.get(node.id).push(node);\n        });\n        let rootNodes = new List();\n        list.forEach((el, i) => {\n            let parentId = map.parent(el);\n            let nodeId = map.id(el);\n            if (lookup.contains(parentId)) {\n                lookup.get(parentId).forEach((p) => p.add(nodeList.get(i)));\n            }\n            else {\n                rootNodes.add(nodeList.get(i));\n            }\n        });\n        if (virtualRoot === false) {\n            result = rootNodes.first();\n        }\n        else {\n            result = new ctor().init({ virtual: true });\n            rootNodes.forEach((el) => result.add(el));\n        }\n        return result;\n    }\n    get root() {\n        let root = this;\n        while (root.parent) {\n            root = root.parent;\n        }\n        return root;\n    }\n    create(...args) {\n        return new (this.constructor)(...args);\n    }\n    init(obj) {\n        setProperties(this, obj);\n        return this;\n    }\n    insertAt(pos, data, id) {\n        let node;\n        if (this.children === null || this.children.count <= pos) {\n            node = this.add(data);\n        }\n        else {\n            if (data instanceof Tree_1) {\n                node = data;\n                data.parent = this;\n            }\n            else {\n                node = this.create(id).init({ data, parent: this });\n            }\n            this.children.insertAt(pos, node);\n        }\n        return node;\n    }\n    add(data, id) {\n        let node;\n        if (this.children === null) {\n            this.children = new List();\n        }\n        if (isSameClass(data, this)) {\n            node = data;\n            node.parent = this;\n            this.children.add(node);\n        }\n        else {\n            node = (this.create(id)).init({ data: data, parent: this });\n            this.children.add(node);\n        }\n        return node;\n    }\n    remove() {\n        if (this.parent !== null) {\n            this.parent.children.remove(this);\n        }\n    }\n    prune() {\n        if (this.children !== null) {\n            this.children\n                .forEach(function (el, i) {\n                el.parent = null;\n            })\n                .clear();\n        }\n        this.children = null;\n        return this;\n    }\n    cut() {\n        this.remove();\n        this.parent = null;\n        return this;\n    }\n    forEach(fn, _i = 0) {\n        fn(this, _i);\n        if (this.children) {\n            this.children.forEach((child) => child.forEach(fn));\n        }\n        return this;\n    }\n    reduce(fn, start) {\n        const stack = new Stack();\n        let acc = start;\n        if (!fn) {\n            fn = (acc, cur) => (acc.push({ id: cur.id, parent: cur.parent ? cur.parent.id : null, data: cur.data }), acc);\n        }\n        if (start === undefined) {\n            acc = [];\n        }\n        let cur;\n        let i;\n        stack.push(this);\n        while (cur = stack.pop()) {\n            acc = fn(acc, cur);\n            i = (cur.children && cur.children.count) || 0;\n            while (i--) {\n                stack.push(cur.children.get(i));\n            }\n        }\n        return acc;\n    }\n    clone() {\n        const result = this.create();\n        result.id = this.id;\n        result.children = this.children === null ? null : this.children.clone();\n        if (result.children !== null) {\n            result.children.forEach((node) => node.parent = result);\n        }\n        result.data = this.data === null || this.data === undefined ? this.data : clone(this.data);\n        return result;\n    }\n    duplicateNode() {\n        const result = this.create();\n        result.id = this.id;\n        result.data = this.data;\n        return result;\n    }\n    filter(condition, parent = null) {\n        let node = null;\n        if (condition(this)) {\n            node = this.duplicateNode();\n            const children = this.children;\n            node.parent = parent;\n            if (children !== null) {\n                node.children =\n                    children\n                        .select(condition)\n                        .map(function (el, i) {\n                        return el.filter(condition, node);\n                    });\n            }\n        }\n        return node;\n    }\n    select(condition, acc = new List()) {\n        const result = acc;\n        const children = this.children;\n        if (condition === undefined || condition(this)) {\n            result.add(this);\n        }\n        if (children) {\n            children.reduce(function (acc, cur) {\n                return cur.select(condition, acc);\n            }, result);\n        }\n        return result;\n    }\n    find(condition) {\n        let result = null;\n        const children = this.children;\n        if (children !== null) {\n            let i = -1;\n            const len = this.children.count;\n            const val = this.children.values;\n            while (++i < len) {\n                if (condition(val[i])) {\n                    result = val[i];\n                    break;\n                }\n                else {\n                    result = val[i].children !== null ? val[i].find(condition) : null;\n                    if (result !== null) {\n                        break;\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    depth() {\n        let result = 0;\n        let node = this;\n        while (node.parent) {\n            node = node.parent;\n            ++result;\n        }\n        return result;\n    }\n    sort(comparer) {\n        if (this.children !== null) {\n            this.children.orderBy(comparer);\n            this.children.forEach((el) => el.sort(comparer));\n        }\n        return this;\n    }\n    toJSON() {\n        let result = new List();\n        result.push({ id: this.id, data: this.data, parent: this.parent === null ? null : this.parent.id, children: this.children === null ? null : this.children.map((el) => el.id) });\n        if (this.children !== null) {\n            this.children.forEach((node) => result.append(node.toJSON()));\n        }\n        return result.toJSON();\n    }\n    serialize() {\n        let result = new List();\n        result.push({ id: this.id, data: this.data, parent: this.parent === null ? null : this.parent.id, children: this.children === null ? null : this.children.map((el) => el.id) });\n        if (this.children !== null) {\n            this.children.forEach((node) => result.append(node.serialize()));\n        }\n        return result.serialize();\n    }\n};\nTree = Tree_1 = __decorate([\n    Initable,\n    __metadata(\"design:paramtypes\", [Object])\n], Tree);\nexport { Tree };\nvar Tree_1;\n//# sourceMappingURL=Tree.js.map","import { Global } from \"./Global\";\nexport var Sides;\n(function (Sides) {\n    Sides[Sides[\"Top\"] = 0] = \"Top\";\n    Sides[Sides[\"Bottom\"] = 1] = \"Bottom\";\n    Sides[Sides[\"Left\"] = 2] = \"Left\";\n    Sides[Sides[\"Right\"] = 3] = \"Right\";\n})(Sides || (Sides = {}));\nclass DomState {\n}\nDomState.Sides = Sides;\nDomState._window = Global.window;\nDomState._document = Global.window ? Global.window.document : undefined;\nDomState._el = Global.window ? Global.window.document.createElement(\"div\") : undefined;\nexport function init(win) {\n    Global.window = win;\n    DomState._window = Global.window;\n    DomState._document = DomState._window.document;\n    DomState._el = DomState._document.createElement(\"div\");\n}\nexport function toArray(a) {\n    return Array.prototype.slice.call(a);\n}\nexport function create(html, attr) {\n    let result, keys, i, k, styles, styleKeys;\n    DomState._el.innerHTML = html;\n    result = DomState._el.children[0];\n    setAttr(result, attr);\n    clear(DomState._el);\n    return result;\n}\nexport function outerHTML(el) {\n    DomState._el.appendChild(el);\n    const result = DomState._el.innerHTML;\n    clear(DomState._el);\n    return result;\n}\nexport function setAttr(_el, attr) {\n    let el;\n    if (typeof (_el) === \"string\") {\n        el = get(_el);\n    }\n    else {\n        el = _el;\n    }\n    let keys, i, k, styles, styleKeys, style;\n    if (attr !== undefined && typeof (attr) === \"object\") {\n        keys = Object.keys(attr);\n        for (i = 0; i < keys.length; i++) {\n            if (keys[i] === \"style\") {\n                styles = attr[keys[i]];\n                styleKeys = Object.keys(styles);\n                for (k = 0; k < styleKeys.length; k++) {\n                    style = styles[styleKeys[k]];\n                    if (typeof (style) === \"string\") {\n                        el.style.setProperty(styleKeys[k], style);\n                    }\n                    else {\n                        el.style.setProperty(styleKeys[k], style[0], style[1]);\n                    }\n                }\n            }\n            else if (keys[i] === \"classes\" && attr[keys[i]] !== undefined && attr[keys[i]].join) {\n                el.setAttribute(\"className\", attr[keys[i]].join(\" \"));\n            }\n            else {\n                el.setAttribute(keys[i], attr[keys[i]]);\n            }\n        }\n    }\n}\nexport function remove(element) {\n    return element.parentNode === undefined ? null : element.parentNode.removeChild(element);\n}\nexport function replace(src, target) {\n    let result = target;\n    if (src.parentNode) {\n        src.parentNode.replaceChild(target, src);\n    }\n    return result;\n}\nexport function clear(element) {\n    let i = element.children.length;\n    while (i--) {\n        element.removeChild(element.children[i]);\n    }\n}\nexport function get(id) {\n    let result = DomState._document.getElementById(id);\n    if (result === null) {\n        switch (id) {\n            default:\n                result = DomState._document.body;\n                break;\n        }\n    }\n    return result;\n}\nexport function find(selector) {\n    return DomState._document.querySelector(selector);\n}\nexport function findAll(selector, root) {\n    return toArray((root || DomState._document).querySelectorAll(selector));\n}\nexport function children(root, selector) {\n    const children = toArray((root || DomState._document).children);\n    return selector === undefined ? children : children.filter(is.bind(this, selector));\n}\nexport function findParent(root, selector) {\n    let result = root.parentElement;\n    while (result) {\n        if (is(selector, result)) {\n            break;\n        }\n        result = result.parentElement;\n    }\n    return result;\n}\nexport function position(el, x, y) {\n    el.style.top = y + \"px\";\n    el.style.left = x + \"px\";\n}\nexport function is(selector, element) {\n    let result = false;\n    if (element.matches) {\n        result = element.matches(selector);\n    }\n    else if (element.msMatchesSelector) {\n        result = element.msMatchesSelector(selector);\n    }\n    else if (element.webkitMatchesSelector) {\n        result = element.webkitMatchesSelector(selector);\n    }\n    else {\n        if (element.parentElement === null) {\n            throw new Error(\"Element has no parent\");\n        }\n        if (element.id !== \"\") {\n            result = element.parentElement.querySelector(\"#\" + element.id) !== null;\n        }\n        else {\n            result = toArray(element.parentElement.querySelectorAll(selector)).indexOf(element) !== -1;\n        }\n    }\n    return result;\n}\nexport function setStylesExplicitly(element, ...styles) {\n    const comp = DomState._window.getComputedStyle(element);\n    for (const style of styles) {\n        element.style[style] = comp[style];\n    }\n}\n//# sourceMappingURL=Dom.js.map","export var MocDataType;\n(function (MocDataType) {\n    MocDataType[MocDataType[\"LinearInt\"] = 0] = \"LinearInt\";\n    MocDataType[MocDataType[\"RandomInt\"] = 1] = \"RandomInt\";\n    MocDataType[MocDataType[\"LinearFloat\"] = 2] = \"LinearFloat\";\n    MocDataType[MocDataType[\"RandomFloat\"] = 3] = \"RandomFloat\";\n})(MocDataType || (MocDataType = {}));\nexport const VALID_CHARS = \" ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\nexport function randomString(length = 25) {\n    let result = \"\";\n    for (let i = 0; i < length; i += 1) {\n        result += VALID_CHARS.charAt(Math.floor(Math.random() * VALID_CHARS.length));\n    }\n    return result;\n}\nexport function randomInt() {\n    return this.randomNumber() | 0;\n}\nexport function randomNumber() {\n    return Math.random() * 2147483647;\n}\nexport function numericArray(length, type = MocDataType.LinearInt) {\n    const result = new Array(length);\n    switch (type) {\n        case MocDataType.RandomInt:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = this.randomInt();\n            }\n            break;\n        case MocDataType.LinearFloat:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = i + 0.5;\n            }\n            break;\n        case MocDataType.RandomFloat:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = this.randomNumber();\n            }\n            break;\n        default:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = i;\n            }\n            break;\n    }\n    return result;\n}\nexport function stringArray(arrayLength, stringLength) {\n    const result = new Array(arrayLength);\n    let i = -1;\n    while (++i < arrayLength) {\n        result[i] = this.randomString(stringLength);\n    }\n    return result;\n}\n//# sourceMappingURL=MocData.js.map","let VERSION = \"0.1.0\";\nimport { Dictionary, Vec2, Timer, List } from \"goodcore\";\nimport { until } from \"goodcore/Arr\";\nimport { newUUID } from \"goodcore/Util\";\nimport { is, findAll } from \"goodcore/Dom\";\nexport class GoodTap {\n    constructor(rootElement) {\n        this.version = VERSION;\n        this.minSwipeDistance = 100;\n        this.maxTapDuration = 400;\n        this.defaultLongPressDuration = 400;\n        this.defaultDragResistance = 0;\n        this.dragResistanceSquared = 0;\n        this.events = [\"down\", \"drag\", \"up\", \"press\", \"tap\", \"swipe\"];\n        this.downEvents = [\"down\"];\n        this.upEvents = [\"up\", \"tap\", \"swipe\"];\n        this.longPressIntervals = new Dictionary();\n        this.eventAttr = \"\";\n        this.upEventsAndPress = [];\n        this.index = 0;\n        this.lastInsides = new List();\n        this.dragging = new List();\n        this.isListeningToMovement = false;\n        this.init(rootElement || document.body);\n        this.eventAttr = this.events.map((name) => \"[\" + name + \"]\").join(\",\");\n        this.upEventsAndPress = [...this.upEvents, \"press\"];\n    }\n    init(rootElement) {\n        if (this.hasTouchEvent()) {\n            rootElement.addEventListener(\"touchstart\", (ev) => { this.start(ev, rootElement); });\n            rootElement.addEventListener(\"touchend\", (ev) => { this.end(ev, rootElement); });\n        }\n        rootElement.addEventListener(\"mousedown\", (ev) => { this.start(ev, rootElement); });\n        rootElement.addEventListener(\"mouseup\", (ev) => { this.end(ev, rootElement); });\n        rootElement.addEventListener(\"focus\", (ev) => this.triggerOutside(ev.target, ev, rootElement), true);\n        this.root = rootElement;\n    }\n    findTarget(el) {\n        let target = null;\n        while (el && el.parentElement !== document && target === null) {\n            if (is(this.eventAttr, el)) {\n                target = el;\n            }\n            el = el.parentElement;\n        }\n        return target;\n    }\n    findTargets(el) {\n        let targets = [];\n        while (el && el.parentElement !== document) {\n            if (!el.id) {\n                el.id = newUUID();\n            }\n            if (is(this.eventAttr, el)) {\n                targets.push(el);\n            }\n            el = el.parentElement;\n        }\n        return targets;\n    }\n    getTouchPos(ev, pos) {\n        pos = pos || new Vec2(0, 0);\n        if (ev instanceof TouchEvent) {\n            pos.x = ev.changedTouches[0].pageX;\n            pos.y = ev.changedTouches[0].pageY;\n        }\n        else if (ev instanceof MouseEvent) {\n            pos.x = ev.pageX;\n            pos.y = ev.pageY;\n        }\n        return pos;\n    }\n    longPress(ev, target) {\n        let result = true;\n        let touchInfo = target.touchInfo;\n        result = this.executeAction(ev, target, \"press\", touchInfo);\n        if (result === false || target.hasAttribute(\"once\")) {\n            clearInterval(this.longPressIntervals.get(touchInfo.index));\n            this.longPressIntervals.delete(touchInfo.index);\n        }\n    }\n    triggerOutside(target, ev, rootElement) {\n        let outside = new List(findAll(\"[outside]\", this.root));\n        if (outside.length > 0) {\n            let insides = new List(this.findTargets(target));\n            let preventOutside = insides.contains((el) => el.hasAttribute(\"preventDefault\"));\n            if (!preventOutside) {\n                outside\n                    .filter((el) => this.lastInsides.contains(el) && !insides.contains(el))\n                    .forEach((el) => this.handleEvent(\"outside\", ev, el));\n                this.lastInsides = insides;\n            }\n        }\n    }\n    move(ev, rootElement, target, action) {\n        let result = true;\n        let touchInfo = target.touchInfo;\n        if (touchInfo === undefined) {\n            this.end(ev, rootElement);\n            return;\n        }\n        this.getTouchPos(ev, touchInfo.pos);\n        if (touchInfo.dragResistance === 0 ||\n            this.getTouchPos(ev).subtract(touchInfo.pos).lengthSq() < touchInfo.dragResistance) {\n            touchInfo.dragResistance = 0;\n            try {\n                if (action === \"[fn]\" && (\"drag-fn\") in target) {\n                    result = target[\"drag-fn\"](ev, target, touchInfo);\n                }\n                else {\n                    target[\"drag-fn\"] = (new Function(\"event\", \"target\", \"touch\", action)).bind(target);\n                    result = target[\"drag-fn\"](ev, target, touchInfo);\n                }\n            }\n            catch (err) {\n                throw name + \" event function error on element '\" + target.id + \"'\\n\" + err.toString();\n            }\n            if (result === false) {\n                this.end(ev, rootElement);\n            }\n        }\n    }\n    start(ev, rootElement) {\n        this.longPressIntervals.list.forEach((long) => clearInterval(long));\n        this.longPressIntervals.clear();\n        let preventDefault = false;\n        let stopPropagation = false;\n        let target = ev.target;\n        let loopCounter = 0;\n        this.triggerOutside(target, ev, rootElement);\n        while (loopCounter < 100 && (target = this.findTarget(target)) && !stopPropagation) {\n            ++loopCounter;\n            let pressInterval = null;\n            if (target.hasAttribute(\"press\")) {\n                pressInterval = setInterval(((target) => this.longPress(ev, target)).bind(this, target), parseInt(target.getAttribute(\"pressInterval\")) || this.defaultLongPressDuration);\n            }\n            let moveHandler = undefined;\n            let dragResistance = 0;\n            if (target.hasAttribute(\"drag\")) {\n                dragResistance = parseInt(target.getAttribute(\"dragResistance\"));\n                if (isNaN(dragResistance)) {\n                    dragResistance = this.defaultDragResistance;\n                }\n                dragResistance *= dragResistance;\n                let dragAction = target.getAttribute(\"drag\");\n                moveHandler = ((t, d, ev) => {\n                    this.move(ev, rootElement, t, d);\n                }).bind(this, target, dragAction);\n                if (this.hasTouchEvent()) {\n                    rootElement.addEventListener(\"touchmove\", moveHandler);\n                }\n                rootElement.addEventListener(\"mousemove\", moveHandler);\n            }\n            target.classList.add(\"gt-active\");\n            target.touchInfo = {\n                index: this.index++,\n                time: Timer.now(),\n                pos: this.getTouchPos(ev),\n                long: pressInterval,\n                moveHandler,\n                dragResistance,\n            };\n            if (pressInterval) {\n                this.longPressIntervals.set(target.touchInfo.index, target.touchInfo.long);\n            }\n            until(this.downEvents, (name) => {\n                if (target.hasAttribute(name)) {\n                    stopPropagation = (this.handleEvent(name, ev, target) === false);\n                    if (!stopPropagation && target.hasAttribute(\"stopPropagation\") || target.hasAttribute(\"gt-false\")) {\n                        stopPropagation = true;\n                        ev.stopPropagation();\n                    }\n                    if (target.hasAttribute(\"preventDefault\") || target.hasAttribute(\"gt-false\")) {\n                        ev.preventDefault();\n                        preventDefault = true;\n                    }\n                }\n                return stopPropagation;\n            });\n            target = target.parentElement;\n        }\n    }\n    isSwipe(ev, target) {\n        let pos = this.getTouchPos(ev);\n        let result = false;\n        if (\"touchInfo\" in target) {\n            let dX = pos.x - target.touchInfo.pos.x;\n            let dY = pos.y - target.touchInfo.pos.y;\n            let absDX = Math.abs(dX);\n            let absDY = Math.abs(dY);\n            let horizontal = absDX > absDY;\n            let distance = horizontal ? absDX : absDY;\n            result = distance >= this.minSwipeDistance;\n            if (result) {\n                target.touchInfo.swipeInfo = {\n                    direction: horizontal ?\n                        (dX < 0 ? \"left\" : \"right\") :\n                        (dY < 0 ? \"up\" : \"down\"),\n                    distance: distance,\n                    delta: new Vec2(dX, dY)\n                };\n            }\n        }\n        return result;\n    }\n    end(ev, rootElement) {\n        let time = Timer.now();\n        let stopPropagation = false;\n        let target = ev.target;\n        let loopCounter = 0;\n        let endedOutsideTargets = new List();\n        let originalTarget = target;\n        this.dragging.clear();\n        while (loopCounter < 100 && (target = this.findTarget(target)) && !stopPropagation) {\n            ++loopCounter;\n            let touchInfo = target.touchInfo;\n            if (touchInfo !== undefined) {\n                let duration = time - touchInfo.time;\n                until(this.upEventsAndPress, (name) => {\n                    if (target.hasAttribute(name)) {\n                        let isSwipe = this.isSwipe(ev, target);\n                        if ((name === \"swipe\" && isSwipe)\n                            || (name === \"tap\" && !isSwipe && duration < this.maxTapDuration)\n                            || (name === \"up\")) {\n                            stopPropagation = (this.handleEvent(name, ev, target) === false);\n                        }\n                        if (stopPropagation || target.hasAttribute(\"stopPropagation\") || target.hasAttribute(\"gt-false\")) {\n                            stopPropagation = true;\n                            ev.stopPropagation();\n                            delete target.touchInfo;\n                        }\n                        if (target.hasAttribute(\"preventDefault\") || target.hasAttribute(\"gt-false\")) {\n                            ev.preventDefault();\n                        }\n                    }\n                    return stopPropagation;\n                });\n            }\n            target = target.parentElement;\n        }\n        findAll(\".gt-active\").forEach((el) => {\n            el.classList.remove(\"gt-active\");\n            if (el.touchInfo !== undefined && el.touchInfo.moveHandler !== undefined) {\n                rootElement.removeEventListener(\"touchmove\", el.touchInfo.moveHandler);\n                rootElement.removeEventListener(\"mousemove\", el.touchInfo.moveHandler);\n                this.handleEvent(\"dragend\", ev, el);\n            }\n            delete el.touchInfo;\n        });\n        this.longPressIntervals.list.forEach((long) => clearInterval(long));\n        this.longPressIntervals.clear();\n    }\n    executeAction(ev, target, actionAttr, touchInfo) {\n        let result = true;\n        let action = target.getAttribute(actionAttr);\n        try {\n            if (action === \"[fn]\" && (actionAttr + \"-fn\") in target) {\n                result = target[actionAttr + \"-fn\"](ev, target, touchInfo);\n            }\n            else {\n                result = (new Function(\"event\", \"target\", \"touch\", action)).bind(target)(ev, target, touchInfo);\n            }\n        }\n        catch (err) {\n            throw name + \" event function error on element '\" + target.id + \"'\\n\" + err.toString();\n        }\n        return result;\n    }\n    handleEvent(name, ev, target) {\n        let actionAttr = name;\n        let result = true;\n        if (target) {\n            result = this.executeAction(ev, target, actionAttr, target.touchInfo);\n            if (name in this.upEvents) {\n                target.classList.remove(\"gt-active\");\n                if (this.longPressIntervals.has(target.touchInfo.index)) {\n                    clearInterval(this.longPressIntervals.get(target.touchInfo.index));\n                }\n                delete target.touchInfo;\n            }\n        }\n        return result;\n    }\n    on(element, name, fn) {\n        element.setAttribute(name, \"[fn]\");\n        element[name + \"-fn\"] = fn;\n    }\n    off(element, name) {\n        element.removeAttribute(name + \"-action\");\n        delete element[name + \"-fn\"];\n    }\n    hideKeyboard() {\n        let field = document.createElement(\"input\");\n        field.setAttribute(\"type\", \"text\");\n        document.body.appendChild(field);\n        setTimeout(function () {\n            field.focus();\n            setTimeout(function () {\n                field.setAttribute(\"style\", \"display:none;\");\n                field.parentElement.removeChild(field);\n            }, 50);\n        }, 50);\n    }\n    hasTouchEvent() {\n        return \"ontouchstart\" in document.documentElement;\n    }\n    outside() {\n        this.triggerOutside(this.root, new FocusEvent(\"\"));\n        this.hideKeyboard();\n    }\n}\nexport function init(root) {\n    return new GoodTap(root);\n}\n//# sourceMappingURL=index.js.map"],"names":["CalcConst","rotationRad","rotation","deg","DEGREE_FACTOR","ROTATION_DEGREE_PRECISION","this","rotationDeg","RADIAN_FACTOR","Math","PI","DEG360","ROTATION_LOOKUP","lookup","i","push","cos","sin","Vec2Const","EPSILON","IDENTITY","x","y","X_DIM","Y_DIM","Vec2","[object Object]","angle","horizontalAngle","direction","isZero","src","out","set","create","ceil","sqrt","lengthSq","atan2","rot","nx","ny","center","subtract","rotate","add","len","length","vectorB","scalar","target","abs","isNormalized","result","clone","normalize","temp","coeff","v","max","min","nativeWindow","win","window","_Global","_window","_nativeWindow","hasNativeWindow","Global","hasWindow","isArray","it","Array","Object","prototype","toString","call","isFunction","isNumber","areNullOrUndefined","args","a","undefined","areNotNullOrUndefined","isNullOrUndefined","arg","isNotNullOrUndefined","isUndefined","isNotUndefined","wipe","obj","keys","isSameClass","b","constructor","equals","key","deepCopy","Date","getTime","RegExp","setProperties","values","mapping","value","reverse","array","left","right","temporary","concat","arrs","apply","slice","from","count","Infinity","splice","pos","remove","insert","Error","srcLen","insertLen","newLen","delta","append","arr","index","offset","removeAt","indexOfElement","el","indexOf","fn","shallowCopy","shallowCopyInto","deepCopyInto","filter","filterInto","j","space","map","mapInto","reduce","start","acc","reduceUntil","test","reverseReduce","reverseReduceUntil","forEach","startIndex","forSome","until","fnOrTest","isCombined","reverseForEach","reverseUntil","combined","some","all","insertAt","unshift","populator","deserialize","types","T","passthroughT","newT","Dictionary","_lookup","_list","List","_isDirty","has","clear","cleanList","list","reCreateList","get","serialize","Symbol","iterator","_array","_index","_indexer","_pointer","Arr.shallowCopy","done","indexer","_reindex","size","Arr.create","Arr.insertAt","pop","delete","shift","arr2","Arr.concat","Arr.forEach","Arr.append","Arr.deepCopyInto","Arr.shallowCopyInto","Arr.deepCopy","Arr.remove","unindexEl","n","Arr.removeAt","Arr.forSome","Arr.until","Arr.reverseForEach","Arr.reverseUntil","Arr.some","Arr.all","Arr.indexOf","Arr.indexOfElement","find","contains","Arr.reverse","first","Arr.filter","Arr.filterInto","Arr.slice","Arr.splice","sort","Arr.map","Arr.mapInto","Arr.reduce","Arr.reduceUntil","Arr.reverseReduce","Arr.reverseReduceUntil","long","short","select","t","u","tuple","maxDepth","_flattenInner","depth","Arr.deserialize","Stack","DEFAULT_SIZE","_pos","_limit","fastPush","isEmpty","limit","limitedPush","limitObjects","Initable","TimerState","_hasPerformance","Timer","time","_time","performance","now","hrTime","process","hrtime","_start","_last","newUUID","d","replace","c","r","random","floor","__decorate","decorators","desc","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","k","metadata","Tree","Tree_1","id","parent","children","data","virtual","root","init","fromObject","bind","nodes","mapcfg","virtualRoot","ctor","mapResolver","nodeList","node","rootNodes","parentId","p","_i","child","stack","cur","condition","duplicateNode","val","comparer","orderBy","toJSON","Sides","MocDataType","DomState","toArray","findAll","selector","_document","querySelectorAll","is","element","matches","msMatchesSelector","webkitMatchesSelector","parentElement","querySelector","document","_el","createElement","VERSION","GoodTap","rootElement","version","minSwipeDistance","maxTapDuration","defaultLongPressDuration","defaultDragResistance","dragResistanceSquared","events","downEvents","upEvents","longPressIntervals","eventAttr","upEventsAndPress","lastInsides","dragging","isListeningToMovement","body","name","join","hasTouchEvent","addEventListener","ev","end","triggerOutside","targets","TouchEvent","changedTouches","pageX","pageY","MouseEvent","touchInfo","executeAction","hasAttribute","clearInterval","outside","insides","findTargets","handleEvent","action","getTouchPos","dragResistance","Function","err","stopPropagation","loopCounter","findTarget","pressInterval","setInterval","longPress","parseInt","getAttribute","moveHandler","isNaN","dragAction","move","classList","preventDefault","dX","dY","absDX","absDY","horizontal","distance","swipeInfo","duration","isSwipe","removeEventListener","actionAttr","setAttribute","removeAttribute","field","appendChild","setTimeout","focus","removeChild","documentElement","FocusEvent","hideKeyboard"],"mappings":"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"}